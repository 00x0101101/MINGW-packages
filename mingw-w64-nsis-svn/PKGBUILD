# Maintainer: Renato Silva <br.renatosilva@gmail.com>

_realname='nsis'
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-svn"
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=r6593
pkgrel=1
url='http://nsis.sourceforge.net'
pkgdesc='Windows installer development tool (mingw-w64)'
license=(ZLIB)
arch=(any)
depends=(${MINGW_PACKAGE_PREFIX}-zlib
         ${MINGW_PACKAGE_PREFIX}-gcc-libs
         ${MINGW_PACKAGE_PREFIX}-libwinpthread)
makedepends=(${MINGW_PACKAGE_PREFIX}-gcc
             'scons>=2.3.4-3'
             svn)
source=(${_realname}.svn::svn+'http://svn.code.sf.net/p/nsis/code/NSIS/trunk'
        001-fhs-directory-structure.patch
        002-compile-fixes.patch
        003-fixes-for-64-bit.patch
        004-remove-redundant-architecture-suffix.patch
        005-fix-entry-point-in-64-bit.patch)
md5sums=('SKIP'
         '1b2a86a7abbe4aeb90b1c6f5a730ceb4'
         'e65797ad69865b4b7b76cf711f76a6d2'
         '8052f972a69e297574345c3d355b8ba2'
         'ea57b9d2a2aa58c7b8fe59319e725925'
         '70d8a61e4717815ad171363ba12f7778')

# Circumvent problem where makepkg will add the exe extension to some files
# when compressing the 64-bit package
options=('!strip')

pkgver() {
    cd "${srcdir}/${_realname}.svn"
    printf "r%s" "$(svnversion | tr -d 'A-z')"
}

prepare() {
    cd "${srcdir}/${_realname}.svn"

    # Linker script
    case "${CARCH}" in
        x86_64) sed -i 's/pei-i386/pei-x86-64/' SCons/config/linker_script ;;
        i686)   sed -i 's/pei-x86-64/pei-i386/' SCons/config/linker_script ;;
    esac
    #case "${CARCH}" in
    #    x86_64) cp -v /mingw64/x86_64-w64-mingw32/lib/ldscripts/i386pep.x SCons/config/linker_script ;;
    #    i686)   cp -v /mingw32/i686-w64-mingw32/lib/ldscripts/i386pe.x    SCons/config/linker_script ;;
    #esac
    #sed -i 's/\.rsrc BLOCK/.ndata BLOCK(__section_alignment__) : { *(.ndata) }\n.rsrc BLOCK/' SCons/config/linker_script

    if [[ -n $(svn diff SConstruct) ]]; then
        msg2 'Skipping already applied patches'
        return 0
    fi

    patch -p1 < "${startdir}"/001-fhs-directory-structure.patch
    patch -p1 < "${startdir}"/002-compile-fixes.patch
    patch -p1 < "${startdir}"/003-fixes-for-64-bit.patch
    patch -p1 < "${startdir}"/004-remove-redundant-architecture-suffix.patch
    patch -p1 < "${startdir}"/005-fix-entry-point-in-64-bit.patch
}

_build() {
    local target_arch="${CARCH/i686/x86}"
    target_arch="${target_arch/x86_64/amd64}"
    cd "${srcdir}/${_realname}.build.${CARCH}"
    scons \
        TARGET_ARCH="${target_arch}" \
        PREFIX="${MINGW_PREFIX}" \
        VERSION="${pkgver}" \
        UNICODE='yes' \
        NSIS_MAX_STRLEN='8192' \
        NSIS_CONFIG_CONST_DATA_PATH='no' \
        SKIPUTILS='NSIS Menu,SubStart' \
        PREFIX_DEST="${PREFIX_DEST}" \
        ${target}
}

build() {
    msg2 'Synchronizing build directory'
    rsync --recursive --times "${srcdir}/${_realname}.svn"/* "${srcdir}/${_realname}.build.${CARCH}"
    _build
}

package() {
    PREFIX_DEST="${pkgdir}" target='install' _build
    install -Dm644 "${pkgdir}${MINGW_PREFIX}/share/doc/nsis/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
    rm "${pkgdir}${MINGW_PREFIX}/share/doc/nsis/COPYING"
}
