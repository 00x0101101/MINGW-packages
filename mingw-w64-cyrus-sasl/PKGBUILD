# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

# There's an ugliness issue in cyrus-sasl's build system.
# It builds libsasl2.dll with some compat objects, somehow
# gotten from saslauthd/Makefile.am?! but these files -
# getaddrinfo.c, getnameinfo.c (and one that doesn't ever
# get built, snprintf.c) depend on ws2_32 on Windows.
# The plugins need these objects too, so they are LN_S'ed
# as COMPAT_OBJS and that's added to plugins/Makefile.am:
# lib{plain,anonymous,kerberos4...}_la_{DEPENDENCIES,LIBADD}
# .. problem with doing it this way is that the ws2_32
# (encoded into LIB_SOCKET) dependency needs to be specified
# repeatedly for each one ..
# Instead these compat objects should be linked into a
# convenience libtool library (.a compiled with -fPIC) that
# carries the ws2_32 dependency with it, and this libtool
# library should be added as a dependency to each of the
# plugins. I've not fixed this because I've not got enough
# libtool experience to do it yet so instead 12-MinGW-w64..patch
# adds LIB_SOCKET all over the place in plugins/Makefile.am

_realname=cyrus-sasl
pkgname=("${MINGW_PACKAGE_PREFIX}-libsasl"
         "${MINGW_PACKAGE_PREFIX}-libsasl-devel")
pkgver=2.1.26
pkgrel=1
pkgdesc="Cyrus Simple Authentication Service Layer (SASL) library"
arch=('any')
url="http://cyrusimap.web.cmu.edu/"
license=('custom')
groups=('sys-utils')
#makedepends=('heimdal-devel' 'openssl-devel' 'libsqlite-devel' 'libcrypt-devel')
#depends=("${MINGW_PACKAGE_PREFIX}-dlfcn-svn")
options=('emptydirs' 'strip' '!makeflags')
source=(http://cyrusimap.org/releases/cyrus-sasl-${pkgver}.tar.gz
        01-no-undefined.patch
        02-exeext.patch
        03-fix-plugins.patch
        04-manpage-paths.patch
        05-remove-warnings.patch
        06-fix-sqlite-search.patch
        07-fix-pkgconfig.patch
        08-cyrus-sasl-2.1.26-size_t.patch
        09-cyrus-sasl-2.1.26-msys2.patch
        10-MinGW-w64-already-has-getopt.patch
        11-MinGW-w64-add-disable-win32-reg-option.patch
        12-MinGW-w64-uses-ws2_32-not-socket.patch
        13-MSYS2-Use-cp-f-instead-of-ln-s.patch
        14-MinGW-w64-add-LIBSASL_API-to-function-definitions.patch
        15-MinGW-w64-define-LIBSASL_EXPORTS_eq_1-for-sasldb.patch
        16-MinGW-w64-define-WIN32_LEAN_AND_MEAN-avoiding-handle_t-redef.patch
        17-MinGW-w64-define-S_IRUSR-and-S_IWUSR.patch
        18-MinGW-w64-use-windlopen.c-not-dlopen.c.patch)
md5sums=('a7f4e5e559a0e37b3ffc438c9456e425'
         '7f52862a74ada70ed2e257990f9b4334'
         'd7ff8a6d1902478190c705a580b4bd80'
         '744e8af08823097021e6087c8baca9c8'
         'abda82e2cb8dca0ebe2fbe9d076c379a'
         'f9f5178a1059ccf289a0746c44c6681e'
         '5b2af6369c98a778b82b53dee65789ca'
         'd7fcdcc98698dbdec806d39fa9f9c001'
         'bcaafcbc79054e8356217213d6eda16d'
         'b48df2818c4836801445d9dee0adfaa0'
         '0804261cbd3605300de45d239f0985b1'
         '88646a5b27f7d2d2dae2d37a84ce4bb9'
         'd079adb519ef78e014c18b39e48d2d13'
         'e22b151aceb15d15abf86827741ecd9e'
         '74deb3bb998a1da6e1b7697606269a44'
         '3255cf7f8bf21e26e1900b5df5050d86'
         '8a7b3c956b6ade7f50b322f2f2211a46'
         '42b8a2f0f6a9b8c88168a5e6a7433cbb'
         'aa98b66f10b3628b3278e97adf4d4ce5')

prepare() {
  cd ${srcdir}/$_realname-$pkgver

  patch -p1 -i ${srcdir}/01-no-undefined.patch
  patch -p1 -i ${srcdir}/02-exeext.patch
  patch -p1 -i ${srcdir}/03-fix-plugins.patch
  patch -p1 -i ${srcdir}/04-manpage-paths.patch
  patch -p1 -i ${srcdir}/05-remove-warnings.patch
  patch -p1 -i ${srcdir}/06-fix-sqlite-search.patch
  patch -p1 -i ${srcdir}/07-fix-pkgconfig.patch
  patch -p1 -i ${srcdir}/08-cyrus-sasl-2.1.26-size_t.patch
  patch -p1 -i ${srcdir}/09-cyrus-sasl-2.1.26-msys2.patch
  patch -p1 -i ${srcdir}/10-MinGW-w64-already-has-getopt.patch
  patch -p1 -i ${srcdir}/11-MinGW-w64-add-disable-win32-reg-option.patch
  patch -p1 -i ${srcdir}/12-MinGW-w64-uses-ws2_32-not-socket.patch
  patch -p1 -i ${srcdir}/13-MSYS2-Use-cp-f-instead-of-ln-s.patch
  patch -p1 -i ${srcdir}/14-MinGW-w64-add-LIBSASL_API-to-function-definitions.patch
  patch -p1 -i ${srcdir}/15-MinGW-w64-define-LIBSASL_EXPORTS_eq_1-for-sasldb.patch
  patch -p1 -i ${srcdir}/16-MinGW-w64-define-WIN32_LEAN_AND_MEAN-avoiding-handle_t-redef.patch
  patch -p1 -i ${srcdir}/17-MinGW-w64-define-S_IRUSR-and-S_IWUSR.patch
  patch -p1 -i ${srcdir}/18-MinGW-w64-use--windlopen.c-not-dlopen.c.patch

  sed 's/AM_CONFIG_HEADER/AC_CONFIG_HEADERS/' -i configure.in
  rm -f config/config.guess config/config.sub 
  rm -f config/ltconfig config/ltmain.sh config/libtool.m4
  rm -fr autom4te.cache
  libtoolize -c
  aclocal -I config -I cmulocal
  automake -a -c
  autoheader
  autoconf
  
  pushd saslauthd
    rm -f config/config.guess config/config.sub 
    rm -f config/ltconfig config/ltmain.sh config/libtool.m4
    rm -fr autom4te.cache
    libtoolize -c
    aclocal -I config -I ../cmulocal -I ../config
    automake -a -c
    autoheader
    autoconf
  popd
}

build() {
  cd ${srcdir}/$_realname-$pkgver
  [ -d ${CARCH} ] || mkdir ${CARCH}
  cd ${CARCH}
  
  # Useful ref:
  # https://fedorapeople.org/cgit/elmarco/public_git/mingw32-cyrus-sasl.git/tree/mingw32-cyrus-sasl.spec
  # --oldincludedir=${MINGW_PREFIX}/include is so that /usr/include isn't added by default.
  # --enable-sql seems to have problems with <mysql.h> not existing, I thought it would be a part of sqlite.
  # --enable-sql
  # --without-saslauthd because it needs sockaddr_un.

  ../configure \
    --prefix=${MINGW_PREFIX} \
    --build=$CHOST \
    --host=$CHOST \
    --with-configdir=${MINGW_PREFIX}/etc/sasl2:${MINGW_PREFIX}/etc/sasl:${MINGW_PREFIX}/lib/sasl2 \
    --disable-static --enable-shared \
    --with-sqlite3=${MINGW_PREFIX} \
    --disable-ldapdb \
    --disable-win32-reg \
    --oldincludedir=${MINGW_PREFIX}/include \
    --without-saslauthd \
    --without-pwcheck \
    --without-authdaemond \
    --with-dblib=gdbm

  make
}

# This needs saslauthd which needs sockaddr_un.
# package_cyrus-sasl() {
#   depends=("libsasl=${pkgver}")
#   pkgdesc="Cyrus saslauthd SASL authentication daemon"
#   #backup=('etc/conf.d/saslauthd')
# 
#   cd $_realname-$pkgver/${CARCH}/saslauthd
#   make DESTDIR="${pkgdir}" install
# 
#   install -m755 -d "${pkgdir}/${MINGW_PREFIX}/share/licenses/cyrus-sasl"
#   cp -pR ../../COPYING "${pkgdir}${MINGW_PREFIX}/share/licenses/cyrus-sasl/"
# }

package_libsasl() {
  groups=('libraries')
  options=('emptydirs' 'strip' 'libtool')
  pkgdesc="Cyrus Simple Authentication Service Layer (SASL) Library"
  depends=('libcrypt'
           'libopenssl'
           'heimdal-libs'
           'libsqlite')
  local _plugindir=${MINGW_PREFIX}/lib/sasl2

  cd $_realname-$pkgver/${CARCH}
  for dir in include lib sasldb plugins utils; do
    pushd ${dir}
    make DESTDIR="${pkgdir}" install sasldir=${_plugindir}
    popd
  done
  rm -f "${pkgdir}"/${MINGW_PREFIX}/lib/sasl2/*.a
  rm -f "${pkgdir}"/${MINGW_PREFIX}/lib/*.a
  rm -f "${pkgdir}"/${MINGW_PREFIX}/lib/*.la
  rm -rf "${pkgdir}"/${MINGW_PREFIX}/include
  install -m755 -d "${pkgdir}/${MINGW_PREFIX}/share/licenses/libsasl"
  install -m644 ../COPYING "${pkgdir}/${MINGW_PREFIX}/share/licenses/libsasl/"
  # pushd "${pkgdir}"/${MINGW_PREFIX}/lib/sasl2
    # for x in .dll; do
      # mv $x $(echo $x | sed e 's/^msys-/lib/' e 's/[0-9][0-9]\.dll$/.so/')
    # done
  # popd
}

package_libsasl-devel() {
  pkgdesc="Libsasl headers and libraries"
  groups=('development')
  depends=("libsasl=${pkgver}" 'heimdal-devel' 'openssl-devel' 'libsqlite-devel' 'libcrypt-devel')
  options=('strip' 'libtool')

  cd $_realname-$pkgver/${CARCH}
  for dir in include lib; do
    pushd ${dir}
    make DESTDIR="${pkgdir}" install
    popd
  done
  rm -rf "${pkgdir}"/${MINGW_PREFIX}/bin
}

# package_mingw-w64-x86_64-cyrus-sasl() {
#   package_cyrus-sasl
# }
#
# package_mingw-w64-i686-cyrus-sasl() {
#   package_cyrus-sasl
# }

package_mingw-w64-x86_64-libsasl() {
  package_libsasl
}

package_mingw-w64-i686-libsasl() {
  package_libsasl
}

package_mingw-w64-x86_64-libsasl-devel() {
  package_libsasl-devel
}

package_mingw-w64-i686-libsasl-devel() {
  package_libsasl-devel
}
