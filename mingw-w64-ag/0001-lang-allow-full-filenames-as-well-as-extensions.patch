--- the_silver_searcher-0.29.1/src/lang.c.orig	2015-02-22 18:08:35.822371800 +0000
+++ the_silver_searcher-0.29.1/src/lang.c	2015-02-22 18:12:32.962043900 +0000
@@ -84,17 +84,26 @@
 char *make_lang_regex(char *ext_array, size_t num_exts) {
     int regex_capacity = 100;
     char *regex = ag_malloc(regex_capacity);
-    int regex_length = 3;
+    int regex_length = 1;
     int subsequent = 0;
+    const char *dot = "\\.";
+    size_t strlen_dot = strlen(dot);
     char *extension;
     size_t i;
 
-    strcpy(regex, "\\.(");
+    strcpy(regex, "(");
 
     for (i = 0; i < num_exts; ++i) {
         extension = ext_array + i * SINGLE_EXT_LEN;
         int extension_length = strlen(extension);
-        while (regex_length + extension_length + 3 + subsequent > regex_capacity) {
+        const char *start = extension;
+        int is_extension = (*start == '^') ? 0 : 1;
+        int length = strlen(start);
+        if (is_extension == 0) {
+            start += 1;
+            length -= 1;
+        }
+        while (regex_length + length + 3 + subsequent > regex_capacity) {
             regex_capacity *= 2;
             regex = ag_realloc(regex, regex_capacity);
         }
@@ -103,8 +112,12 @@
         } else {
             subsequent = 1;
         }
-        strcpy(regex + regex_length, extension);
-        regex_length += extension_length;
+        if (is_extension == 1) {
+            strcpy(regex + regex_length, dot);
+            regex_length += strlen_dot;
+        }
+        strcpy(regex + regex_length, start);
+        regex_length += length;
     }
 
     regex[regex_length++] = ')';
