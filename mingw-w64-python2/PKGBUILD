# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>
# Contributor: Saul Ibarra Corretge <saghul@gmail.com>

_realname=python2
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.7.8
pkgrel=7
_pybasever=2.7
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs" 
         "${MINGW_PACKAGE_PREFIX}-expat"
         "${MINGW_PACKAGE_PREFIX}-bzip2"
         "${MINGW_PACKAGE_PREFIX}-gdbm"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-ncurses"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-readline"
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "${MINGW_PACKAGE_PREFIX}-tk"
         "${MINGW_PACKAGE_PREFIX}-zlib"
        )
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-pkg-config")
options=('!makeflags' 'staticlibs' 'strip' '!debug')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
        0000-make-_sysconfigdata.py-relocatable.patch
        0100-MINGW-BASE-use-NT-thread-model.patch
        0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
        0120-MINGW-use-header-in-lowercase.patch
        0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
        0140-MINGW-preset-configure-defaults.patch
        0150-MINGW-configure-largefile-support-for-windows-builds.patch
        0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
        0180-MINGW-init-system-calls.patch
        0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
        0200-MINGW-build-in-windows-modules-winreg.patch
        0210-MINGW-determine-if-pwdmodule-should-be-used.patch
        0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
        0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
        0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
        0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
        0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
        0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
        0300-MINGW-configure-for-shared-build.patch
        0310-MINGW-dynamic-loading-support.patch
        0320-MINGW-implement-exec-prefix.patch
        0330-MINGW-ignore-main-program-for-frozen-scripts.patch
        0340-MINGW-setup-exclude-termios-module.patch
        0350-MINGW-setup-_multiprocessing-module.patch
        0360-MINGW-setup-select-module.patch
        0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
        0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
        0390-MINGW-exclude-unix-only-modules.patch
        0400-MINGW-setup-msvcrt-module.patch
        0410-MINGW-build-extensions-with-GCC.patch
        0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
        0430-MINGW-find-import-library.patch
        0440-MINGW-setup-_ssl-module.patch
        0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
        0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
        0462-MINGW-support-stdcall-without-underscore.patch
        0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
        0490-MINGW-customize-site.patch
        0500-add-python-config-sh.patch
        0510-cross-darwin-feature.patch
        0520-py3k-mingw-ntthreads-vs-pthreads.patch
        0530-mingw-system-libffi.patch
        0540-mingw-semicolon-DELIM.patch
        0550-mingw-regen-use-stddef_h.patch
        0560-mingw-use-posix-getpath.patch
        0565-mingw-add-ModuleFileName-dir-to-PATH.patch
        0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
        0580-mingw32-test-REPARSE_DATA_BUFFER.patch
        0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
        0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
        0610-msys-cygwin-semi-native-build-sysconfig.patch
        0620-mingw-sysconfig-like-posix.patch
        0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
        0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
        0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
        0660-mingw-use-backslashes-in-compileall-py.patch
        0670-msys-convert_path-fix-and-root-hack.patch
        0690-allow-static-tcltk.patch
        0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
        0720-mingw-pdcurses_ISPAD.patch
        0740-grammar-fixes.patch
        0750-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch
        0760-msys-monkeypatch-os-system-via-sh-exe.patch
        0770-msys-replace-slashes-used-in-io-redirection.patch
        0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
        0800-mingw-install-layout-as-posix.patch
        0820-mingw-reorder-bininstall-ln-symlink-creation.patch
        0830-add-build-sysroot-config-option.patch
        0840-add-builddir-to-library_dirs.patch
        0850-cross-PYTHON_FOR_BUILD-gteq-276-and-fullpath-it.patch
        0860-mingw-build-optimized-ext.patch
        0910-fix-using-dllhandle-and-winver-mingw.patch
        1000-dont-link-with-gettext.patch
        1010-ctypes-python-dll.patch
        1020-gdbm-module-includes.patch
        1030-use-gnu_printf-in-format.patch
        1040-install-msilib.patch)


prepare() {
  cd "${srcdir}/Python-${pkgver}"

  # these are created by patches
  rm -f Misc/config_mingw Misc/cross_mingw32 Misc/python-config.sh.in Misc/cross_mingw32 Misc/python-config-u.sh.in Python/fileblocks.c

  plain "Apply Ray Donnelly's relocatability enabling patch"
  patch -Np1 -i "${srcdir}"/0000-make-_sysconfigdata.py-relocatable.patch

  plain "Apply Roumen Petrov's core patches (15)"
  patch -p1 -i "${srcdir}"/0100-MINGW-BASE-use-NT-thread-model.patch
  patch -p1 -i "${srcdir}"/0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
  patch -p1 -i "${srcdir}"/0120-MINGW-use-header-in-lowercase.patch
  patch -p1 -i "${srcdir}"/0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
  patch -p1 -i "${srcdir}"/0140-MINGW-preset-configure-defaults.patch
  patch -p1 -i "${srcdir}"/0150-MINGW-configure-largefile-support-for-windows-builds.patch
  patch -p1 -i "${srcdir}"/0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
  patch -p1 -i "${srcdir}"/0180-MINGW-init-system-calls.patch
  patch -p1 -i "${srcdir}"/0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
  patch -p1 -i "${srcdir}"/0200-MINGW-build-in-windows-modules-winreg.patch
  patch -p1 -i "${srcdir}"/0210-MINGW-determine-if-pwdmodule-should-be-used.patch
  patch -p1 -i "${srcdir}"/0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
  patch -p1 -i "${srcdir}"/0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch

  plain "Apply Roumen Petrov's compiler patch (2)"
  patch -p1 -i "${srcdir}"/0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch

  plain "Apply Roumen Petrov's extensions patches (23)"
  patch -p1 -i "${srcdir}"/0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
  patch -p1 -i "${srcdir}"/0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
  patch -p1 -i "${srcdir}"/0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
  patch -p1 -i "${srcdir}"/0300-MINGW-configure-for-shared-build.patch
  patch -p1 -i "${srcdir}"/0310-MINGW-dynamic-loading-support.patch
  patch -p1 -i "${srcdir}"/0320-MINGW-implement-exec-prefix.patch
  patch -p1 -i "${srcdir}"/0330-MINGW-ignore-main-program-for-frozen-scripts.patch
  patch -p1 -i "${srcdir}"/0340-MINGW-setup-exclude-termios-module.patch
  patch -p1 -i "${srcdir}"/0350-MINGW-setup-_multiprocessing-module.patch
  patch -p1 -i "${srcdir}"/0360-MINGW-setup-select-module.patch
  patch -p1 -i "${srcdir}"/0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
  patch -p1 -i "${srcdir}"/0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
  patch -p1 -i "${srcdir}"/0390-MINGW-exclude-unix-only-modules.patch
  patch -p1 -i "${srcdir}"/0400-MINGW-setup-msvcrt-module.patch
  patch -p1 -i "${srcdir}"/0410-MINGW-build-extensions-with-GCC.patch
  patch -p1 -i "${srcdir}"/0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
  patch -p1 -i "${srcdir}"/0430-MINGW-find-import-library.patch
  patch -p1 -i "${srcdir}"/0440-MINGW-setup-_ssl-module.patch
  patch -p1 -i "${srcdir}"/0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
  patch -p1 -i "${srcdir}"/0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
  patch -p1 -i "${srcdir}"/0462-MINGW-support-stdcall-without-underscore.patch
  patch -p1 -i "${srcdir}"/0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
  patch -p1 -i "${srcdir}"/0490-MINGW-customize-site.patch

  plain "Apply Ray Donnelly's general/cross patches (32)"
  patch -p1 -i "${srcdir}"/0500-add-python-config-sh.patch
  patch -p1 -i "${srcdir}"/0510-cross-darwin-feature.patch
  patch -p1 -i "${srcdir}"/0520-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -p1 -i "${srcdir}"/0530-mingw-system-libffi.patch
  patch -p1 -i "${srcdir}"/0540-mingw-semicolon-DELIM.patch
  patch -p1 -i "${srcdir}"/0550-mingw-regen-use-stddef_h.patch
  patch -p1 -i "${srcdir}"/0560-mingw-use-posix-getpath.patch
  patch -p1 -i "${srcdir}"/0565-mingw-add-ModuleFileName-dir-to-PATH.patch
  patch -p1 -i "${srcdir}"/0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
  patch -p1 -i "${srcdir}"/0580-mingw32-test-REPARSE_DATA_BUFFER.patch
  patch -p1 -i "${srcdir}"/0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
  patch -p1 -i "${srcdir}"/0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
  patch -p1 -i "${srcdir}"/0610-msys-cygwin-semi-native-build-sysconfig.patch
  patch -p1 -i "${srcdir}"/0620-mingw-sysconfig-like-posix.patch
  patch -p1 -i "${srcdir}"/0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
  patch -p1 -i "${srcdir}"/0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -p1 -i "${srcdir}"/0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -p1 -i "${srcdir}"/0660-mingw-use-backslashes-in-compileall-py.patch
  patch -p1 -i "${srcdir}"/0670-msys-convert_path-fix-and-root-hack.patch
  patch -p1 -i "${srcdir}"/0690-allow-static-tcltk.patch
  patch -p1 -i "${srcdir}"/0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -p1 -i "${srcdir}"/0720-mingw-pdcurses_ISPAD.patch
  patch -p1 -i "${srcdir}"/0740-grammar-fixes.patch
  patch -p1 -i "${srcdir}"/0750-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch
  patch -p1 -i "${srcdir}"/0760-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -p1 -i "${srcdir}"/0770-msys-replace-slashes-used-in-io-redirection.patch
  patch -p1 -i "${srcdir}"/0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch
  patch -p1 -i "${srcdir}"/0800-mingw-install-layout-as-posix.patch
  patch -p1 -i "${srcdir}"/0820-mingw-reorder-bininstall-ln-symlink-creation.patch
  patch -p1 -i "${srcdir}"/0830-add-build-sysroot-config-option.patch
  patch -p1 -i "${srcdir}"/0840-add-builddir-to-library_dirs.patch
  patch -p1 -i "${srcdir}"/0850-cross-PYTHON_FOR_BUILD-gteq-276-and-fullpath-it.patch
  patch -p1 -i "${srcdir}"/0860-mingw-build-optimized-ext.patch
  patch -p1 -i "${srcdir}"/0910-fix-using-dllhandle-and-winver-mingw.patch

  plain "Apply Alexey Pavlov's mingw-w64 patches (2)"
  patch -p1 -i "${srcdir}"/1000-dont-link-with-gettext.patch
  patch -p1 -i "${srcdir}"/1010-ctypes-python-dll.patch
  patch -p1 -i "${srcdir}"/1020-gdbm-module-includes.patch
  patch -p1 -i "${srcdir}"/1030-use-gnu_printf-in-format.patch
  patch -p1 -i "${srcdir}"/1040-install-msilib.patch

  autoreconf -vfi

  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c

  # Enable built-in SQLite module to load extensions (fix FS#22122)
  sed -i "/SQLITE_OMIT_LOAD_EXTENSION/d" setup.py

  # FS#23997
  sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/env python2|" Lib/cgi.py

  sed -i "s/python2.3/python2/g" Lib/distutils/tests/test_build_scripts.py \
  Lib/distutils/tests/test_install_scripts.py Tools/scripts/gprof2html.py

  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
    
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 "
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 "
  CPPFLAGS+=" -I${PREFIX_WIN}/include/ncursesw "

  if check_option "strip" "y"; then
    LDFLAGS+=" -s "
  fi
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
  else
    plain " -DDEBUG -DPy_DEBUG -D_DEBUG does not work unfortunately .."
    #    CFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    #    CXXFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
  fi

  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null

  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no

  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
    --prefix=${MINGW_PREFIX} \
    --host=${MINGW_CHOST} \
    --build=${MINGW_CHOST} \
    --enable-shared \
    --with-threads \
    --with-system-expat \
    --with-system-ffi \
    OPT=""
    #--with-dbmliborder='gdbm:ndbm'
  make
}

check() {
  cd "${srcdir}/build-${CARCH}"
  make test
}

package() {
  cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  make install DESTDIR="$pkgdir"
  
  mv "${pkgdir}${MINGW_PREFIX}"/bin/smtpd.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/

  # Copy python import library to $prefix/lib because some programs can't find it in other locations
  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config/libpython${_pybasever}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a
  
  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python2|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config/Makefile

  for fscripts in 2to3 idle pydoc; do
    sed -e "s|${MINGW_PREFIX}/bin/python${_pybasever}.exe|/usr/bin/env python${_pybasever}.exe|g" -i "${pkgdir}${MINGW_PREFIX}"/bin/$fscripts
  done

  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/bin/python2-config
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!/usr/bin/env python${_pybasever}.exe|" "${pkgdir}${MINGW_PREFIX}"/bin/python-config

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755

  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -i "s|${MINGW_PREFIX}|${PREFIX_WIN}|" "${pkgdir}${MINGW_PREFIX}"/bin/python-config.sh

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py

  # Create python executable with windows subsystem
  cp -f "${pkgdir}${MINGW_PREFIX}"/bin/python2.exe "${pkgdir}${MINGW_PREFIX}"/bin/python2w.exe
  ${MINGW_PREFIX}/bin/objcopy --subsystem windows "${pkgdir}${MINGW_PREFIX}"/bin/python2w.exe

  # Use winpty-git script to invoke python. Please don't move this into a patch as
  # hopefully one day we won't need this hack.
  mv "${pkgdir}"${MINGW_PREFIX}/bin/python2.exe "${pkgdir}"${MINGW_PREFIX}/bin/python2_exe
  _exename="python2"
  echo "#!/usr/bin/env bash" > "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
  echo '"$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" -i "$@"' >> "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
  mv "${pkgdir}"${MINGW_PREFIX}/bin/python2_exe "${pkgdir}"${MINGW_PREFIX}/bin/python2.exe
}

sha1sums=('9c6281eeace0c3646fa556c8087bb1b7e033c9c4'
          'e5c449488b004c3ea694daffcfec357b2bf20e7f'
          '7f77f20e81068b6e1032140dfa4212a97903b3f9'
          '6ca3987be516b87a69062cb1fcc9d52af6a45a8a'
          '1d9aaed8a98d632840d8c11fec488c56ffa4aec8'
          '51d27699de1b556016397e27bcf5d2e5d5b556c9'
          '50f6e4097dc0c6a1cf553e98e57add87807c647b'
          'a7d7eaed95f4d0e850340826cc4aa4918ec1f780'
          '195ab8c48a21ef556ddb99bbc75fb212ad85faa9'
          'e7b7067b965cb7ac83ce2c7fb2c80aad61d801d8'
          '0b0942263dccbe55e07fa0082f3ec9c8de8dbdb9'
          'a58ba0b8c3a5685f073aca48e2cfb181bcde30b1'
          'e0eb68dd4fc2879c4901130d2eb34fea6b90d0a9'
          '00a1856128a684877c107453a0578b7b22d303ea'
          '64abeaa82a96b99b2829ef97c3026c7aca4d1b6b'
          '00cab22c8e93f4536ae85e4be8128afec0f6889f'
          'e9f7bbb1496de17d84140c40272879ebea924b8e'
          '8bfee0db4fbaf11f29d9839121799285dbdaf6b4'
          '5d41a199739cfb37795af78d94223ecdeb7fed1e'
          '566d1c37a2e493a4a4091ef47b6ff8cff3883103'
          '88e75beb08ed9e5e83295a2d31a8263fbf785675'
          '779ed17f7ade0220305d7cb3d189a6477a4ad327'
          '694de47f1cc30cf5bf8016868ae12cf51f98bef3'
          'c0f16a5a451ba2196fcf5654876a62619f37b479'
          '6e3949d1de58317a5a53fb454d89ae6c18379e30'
          'e7ade53f9116268f1a9341f9c308427ab63aafed'
          '986dd220740b1200c0552d870c31220ce68d419e'
          '76f62177983f6d7a2fd7008bf2e557d83fb0841c'
          '750789be598350fca6cf3c0a60701d65c5b5f024'
          '78f54b81bcc45bad4c57a632af4afd972aafd998'
          '4a6abe222ccbbe8a821625d915fb2d1236f9a4de'
          'ee18ad9b93c268c38cff8a16a2b812e6c46bf5d1'
          'b40cd39f5926c7ec773a4898919817cd46e0d185'
          'e2136defb83980e7bc983fcf5e7b7b03f5bcbd99'
          '1b085b1d934d0117baf18c5131df56c5d9a4ab52'
          '842b3aa5056cee59f3e21974066fc3bfd3cc8a17'
          '6fe70fdb6c0de82bfd08cd15b7a026db008231e2'
          'dbcd003c436050aa510b1ba83db2c93a3f7bad2e'
          '68b472af12be8946e3fd6d62c23db81d7c4c46c8'
          '8d181e9079dda97ddba4226278fa792ab1be0949'
          '933e242c8774ec2ff23698e2f7d86fdf8a1613ee'
          'eb974b83d3df3f1482914be648c3da727a922acf'
          '95a4c74ea81f1b6f2ab402338045bfd7551c8a7a'
          'c535ad8c92236544346bf6d8f1304e5be98a5f2d'
          'b6ed95723e2cebbe353df2a7d2299a1501a3bf8d'
          '8850d7fdc8832917cdab2be6ab9f7ab7f24a2f70'
          'a911bc75f893c3ca257ea17c0b939fa947b2bc20'
          '9b930f5bb8a6b45d06cd12878694f3a00c028b67'
          'e49312d24cb160bd523fcf931a657ca6553a6713'
          'e3d97f2f93868494ff00cb09ff52e4b94df903e4'
          '20774cde13ef566135f59750e9f58600042a0ecf'
          'd022b1b2e7448f47cbe9d5a23ca95ae6a040ead8'
          'fed2aafa85920031dcc77c54e58cb2a30da58f43'
          '669b4ee8bbd1e9e505d12565991993a0138e59f2'
          'f7fcb795894af1f0045754e41806db2b9b1834ca'
          '87582a2d774edce1d5b902d23a2f4a44dfd2efc0'
          '244cffb652c2e1d9cd546ede44e1c0c250561d70'
          '73a304a4767753e4e0aa14a12cad59501d8fb0ce'
          '7adb88ccda16e1da7b098132d6639be1ded3b664'
          '0397c2326e2d96381f9017594d5ccf87fd054b29'
          'd0f0794955e20f10cb8feb03048979ca45bd1634'
          '15a6c509ebe3d4844fda61dbd7e910316b141cc5'
          'cce008f72503227596d74259f600225b3538041c'
          '20b8b90c5909327b1a2c0ace87e3560b5e23cfde'
          'f75fb4c42a248011ae70c7d354a7057c48db68e9'
          'b51cae393d17f4eb6562e86d407a6f73e27ab5bf'
          '78673acb7dc9cbf41b243d8b327b6ed7ed435d04'
          '1589b83e7688449113374e9a2395009e3d754318'
          '430ed5b5794e4081b7de2016bc10b2d220e29f24'
          'b570caceaf451c0869d840fc06dae526f083046b'
          '9ee357eb87550e1ce5c8fd359a976a24bf9ff697'
          'ee253d2d59916fe3f9f50c853b8006b9cf79e2c3'
          '26f3e9c282f4f41645bed46a7541b0b82e083705'
          '439eaa06db994ddb724e5ad6a459bbddb5089527'
          '5601ab657dc701aea3b16cf96be782b45262a6b4'
          'a5b4f74cfdc0cd8148ae0c2b7d080e08ac73bc5a'
          '68c82e5127023cfc0907d052d9d5f177ada1323b'
          '2d12d42f331179cd3ecc1f4ce379418dbc5aeee6')
