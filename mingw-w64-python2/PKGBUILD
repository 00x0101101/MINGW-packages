# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=python2
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}"
pkgver=2.7.6
pkgrel=3
_pybasever=2.7
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${_mingw_suff}-crt"
         "${_mingw_suff}-expat"
         "${_mingw_suff}-bzip2"
         "${_mingw_suff}-readline"
         "${_mingw_suff}-openssl"
         "${_mingw_suff}-libffi"
         "${_mingw_suff}-zlib")
makedepends=("${_mingw_suff}-gcc" "${_mingw_suff}-pkg-config" "${_mingw_suff}-ncurses")
options=('!makeflags' 'staticlibs')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
        0005-MINGW.patch
        0006-mingw-removal-of-libffi-patch.patch
        0007-mingw-system-libffi.patch
        0010-mingw-osdefs-DELIM.patch
        0015-mingw-use-posix-getpath.patch
        0020-mingw-w64-test-for-REPARSE_DATA_BUFFER.patch
        0025-mingw-regen-with-stddef-instead.patch
        0030-mingw-add-libraries-for-_msi.patch
        0035-MSYS-add-MSYSVPATH-AC_ARG.patch
        0040-mingw-cygwinccompiler-use-CC-envvars-and-ld-from-print-prog-name.patch
        0045-cross-darwin.patch
        0050-mingw-sysconfig-like-posix.patch
        0055-mingw-pdcurses_ISPAD.patch
        0060-mingw-static-tcltk.patch
        0065-mingw-x86_64-size_t-format-specifier-pid_t.patch
        0070-python-disable-dbm.patch
        0075-add-python-config-sh.patch
        0080-mingw-nt-threads-vs-pthreads.patch
        0085-cross-dont-add-multiarch-paths-if.patch
        0090-mingw-reorder-bininstall-ln-symlink-creation.patch
        0095-mingw-use-backslashes-in-compileall-py.patch
        0100-mingw-distutils-MSYS-convert_path-fix-and-root-hack.patch
        0105-mingw-MSYS-no-usr-lib-or-usr-include.patch
        0110-mingw-_PyNode_SizeOf-decl-fix.patch
        0115-mingw-cross-includes-lower-case.patch
        0500-mingw-install-LDLIBRARY-to-LIBPL-dir.patch
        0505-add-build-sysroot-config-option.patch
        0510-cross-PYTHON_FOR_BUILD-gteq-275-and-fullpath-it.patch
        0515-mingw-add-GetModuleFileName-path-to-PATH.patch
        0520-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch
        0525-msys-monkeypatch-os-system-via-sh-exe.patch
        0530-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
        0535-msys-cygwin-semi-native-build-sysconfig.patch)
prepare() {
  cd "${srcdir}/Python-${pkgver}"

  # Remove files created by patching so repatching succeeds.
  rm -f Modules/_ctypes/libffi_msvc/win32.S Python/fileblocks.c Misc/python-config.sh.in

  patch -Np1 -i "${srcdir}"/0005-MINGW.patch
  patch -Np1 -i "${srcdir}"/0006-mingw-removal-of-libffi-patch.patch
  patch -Np1 -i "${srcdir}"/0007-mingw-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0010-mingw-osdefs-DELIM.patch
  patch -Np1 -i "${srcdir}"/0015-mingw-use-posix-getpath.patch
  patch -Np1 -i "${srcdir}"/0020-mingw-w64-test-for-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0025-mingw-regen-with-stddef-instead.patch
  patch -Np1 -i "${srcdir}"/0030-mingw-add-libraries-for-_msi.patch
  patch -Np1 -i "${srcdir}"/0035-MSYS-add-MSYSVPATH-AC_ARG.patch
  patch -Np1 -i "${srcdir}"/0040-mingw-cygwinccompiler-use-CC-envvars-and-ld-from-print-prog-name.patch
  patch -Np1 -i "${srcdir}"/0045-cross-darwin.patch
  patch -Np1 -i "${srcdir}"/0050-mingw-sysconfig-like-posix.patch
  patch -Np1 -i "${srcdir}"/0055-mingw-pdcurses_ISPAD.patch
  patch -Np1 -i "${srcdir}"/0060-mingw-static-tcltk.patch
  patch -Np1 -i "${srcdir}"/0065-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/0070-python-disable-dbm.patch
  patch -Np1 -i "${srcdir}"/0075-add-python-config-sh.patch
  patch -Np1 -i "${srcdir}"/0080-mingw-nt-threads-vs-pthreads.patch 
  patch -Np1 -i "${srcdir}"/0085-cross-dont-add-multiarch-paths-if.patch 
  patch -Np1 -i "${srcdir}"/0090-mingw-reorder-bininstall-ln-symlink-creation.patch
  patch -Np1 -i "${srcdir}"/0095-mingw-use-backslashes-in-compileall-py.patch
  patch -Np1 -i "${srcdir}"/0100-mingw-distutils-MSYS-convert_path-fix-and-root-hack.patch
  patch -Np1 -i "${srcdir}"/0105-mingw-MSYS-no-usr-lib-or-usr-include.patch
  patch -Np1 -i "${srcdir}"/0110-mingw-_PyNode_SizeOf-decl-fix.patch
  patch -Np1 -i "${srcdir}"/0115-mingw-cross-includes-lower-case.patch
  patch -Np1 -i "${srcdir}"/0500-mingw-install-LDLIBRARY-to-LIBPL-dir.patch
  patch -Np1 -i "${srcdir}"/0505-add-build-sysroot-config-option.patch
  patch -Np1 -i "${srcdir}"/0510-cross-PYTHON_FOR_BUILD-gteq-275-and-fullpath-it.patch
  patch -Np1 -i "${srcdir}"/0515-mingw-add-GetModuleFileName-path-to-PATH.patch
  patch -Np1 -i "${srcdir}"/0520-Add-interp-Python-DESTSHARED-to-PYTHONPATH-b4-pybuilddir-txt-dir.patch
  patch -Np1 -i "${srcdir}"/0525-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -Np1 -i "${srcdir}"/0530-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
  patch -Np1 -i "${srcdir}"/0535-msys-cygwin-semi-native-build-sysconfig.patch

  autoreconf -vfi
  
  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c

  # Enable built-in SQLite module to load extensions (fix FS#22122)
  sed -i "/SQLITE_OMIT_LOAD_EXTENSION/d" setup.py

  # FS#23997
  sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python2|" Lib/cgi.py

  sed -i "s/python2.3/python2/g" Lib/distutils/tests/test_build_scripts.py \
     Lib/distutils/tests/test_install_scripts.py Tools/scripts/gprof2html.py
  
  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
		
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
  
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  CFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/${MINGW_CHOST}/include "
  CXXFLAGS+=" -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$MINGWHOME_WIN/$HOST/include "
  CPPFLAGS+=" -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$PREFIX_WIN/${MINGW_CHOST}/include "
  LDFLAGS+=" -L$PREFIX_WIN/${MINGW_CHOST}/lib -L$PREFIX_WIN/lib "
  if check_option "strip" "y"; then
    LDFLAGS+=" -s "
  fi
  if check_option "debug" "n"; then
    CFLAGS+=" -DNDEBUG "
    CXXFLAGS+=" -DNDEBUG "
  else
    plain " -DDEBUG -DPy_DEBUG -D_DEBUG does not work unfortunately .."
#    CFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
#    CXXFLAGS+=" -DDEBUG -DPy_DEBUG -D_DEBUG "
    CFLAGS+=" -O0 -ggdb"
    CXXFLAGS+=" -O0 -ggdb"
  fi

  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null
  
  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no
	
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
      --prefix=${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --enable-shared \
      --with-threads \
      --with-system-expat \
      --with-system-ffi \
        OPT="" \
        CXX=g++
      # --with-dbmliborder=gdbm:ndbm
    make
}

package() {
  cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW \
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
    make install DESTDIR="$pkgdir"
  mv "${pkgdir}${MINGW_PREFIX}"/bin/smtpd.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/

  cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config/libpython${_pybasever}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}.dll.a

  # some useful "stuff"
  install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
  install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

  # clean up #!s
  find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
    xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python2|"

  # clean-up reference to build directory
  sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config/Makefile
	
  #sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python2|"
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python2|" "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python2|" "${pkgdir}${MINGW_PREFIX}"/bin/python2-config
  sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python2|" "${pkgdir}${MINGW_PREFIX}"/bin/python-config

  # fix permissons
  find ${pkgdir}${MINGW_PREFIX} -type f \( -name *.dll -o -name *.exe \) | xargs chmod 0755
	
  # Fix up two instances of MSYS2 paths in python-config.sh in-case the final consumer of the results are native executables.
  sed -i "s|${MINGW_PREFIX}|${PREFIX_WIN}|" "${pkgdir}${MINGW_PREFIX}"/bin/python-config.sh

  # replace paths in sysconfig
  sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
    "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py

  # replace paths in pkgconfig files
  for _file in "${pkgdir}${MINGW_PREFIX}"/lib/pkgconfig/*.pc; do
    sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" $_file
  done
}
sha1sums=('8321636af2acbeaa68fc635d7dda7369ed446a80'
          'a0906988a059ce6cb5029132035eaa4de207d6ed'
          'fc595de283e5437fbb61a71f3e6e3d8549e4df99'
          '2c415bd7437f7e9bb0cb6a0795482799abb51ae1'
          '520eae28bfb3e99640ec3e7bc4f9486ee731408c'
          '9f55883b03ffe25618d6aea11b562b8b9968b1b2'
          '4ee0ebe3387607f67c39d49ef13c3d3f2c03e5f4'
          '2bb41b2292d9c7003271f4075b51d67f440cbd83'
          'a5ae749d65d7af6be57558ec58115949222ac06d'
          '92f98de596a16fdc545aaa929c2627e001597536'
          '1a8062c913f0dabaf035ffbdec198c50e67068a7'
          'd375144c1da40eada3ca095621319322b511d54b'
          '0ee092fec031842f4f5b6b5e0e9817980f635ccf'
          '94889b6afe8d9339112d7f99fd33a630d5c8fa3d'
          '39beb8080ad68196923c8f9f987436ca404c761c'
          '2ba4bc3dfa28833aa27c4eb3f71dc93278905808'
          'b310b6d3cee43f09e60fc99456bda11faddac79a'
          '0f090d0751d567a304d71927f34020f448b20c52'
          'e579eeb12528893b8d0faba948f132486ab3a426'
          'b6a8ed70f610e0d26256bb4191b3a807e66db580'
          'e4eaa4d8b9761b263b98db2d2abd469e539bd4a8'
          '3ac6afd22b294031d588589e980be3907bd133af'
          '1975dea3e6ce18ebbb4ba5e76cfeb9eb0f6f120b'
          '2879c894e7fd49e370ab647028617a802b199018'
          'f2429926f0e4631ebae459e6cc320c580fabb57a'
          '063dac0ea00c5489b0f310a54431720f13b8ce30'
          '04e5d356faf32f7e524f2e594570bc1f9aa8f056'
          '2d957e2bc63d7e22a9226d2bdba205c48677cf2f'
          '57793d671583432dded3652836818c7ea880b63b'
          'ce2e67a68bc190b57d086b1274a0a6309b22cc7f'
          '484ebdb5eaf2a2469ba368a1cc1e721475958542'
          '10e704afbabdcb0d966be4f7dfd4961bb51cb580'
          'ecbcc13515f6195b6930b6eb5a9326e7f8398179'
          '6d5893cfd91c96b7883cfacfd09710a7549290d0')
