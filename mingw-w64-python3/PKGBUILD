# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=python3
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}"
pkgver=3.3.3
pkgrel=1
_pybasever=3.3
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${_mingw_suff}-crt" 
		"${_mingw_suff}-expat"
		"${_mingw_suff}-bzip2"
		"${_mingw_suff}-readline"
		"${_mingw_suff}-openssl"
		"${_mingw_suff}-libffi"
		"${_mingw_suff}-zlib"
		"${_mingw_suff}-xz")
makedepends=("${_mingw_suff}-gcc" "${_mingw_suff}-pkg-config" "${_mingw_suff}-ncurses")
options=('!makeflags' 'staticlibs' 'strip')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
0001-MINGW-BASE-use-NT-thread-model.patch
0002-MINGW-translate-gcc-internal-defines-to-python-platf.patch
0003-MINGW-use-header-in-lowercase.patch
0004-MINGW-configure-MACHDEP-and-platform-for-build.patch
0005-MINGW-preset-configure-defaults.patch
0006-MINGW-configure-largefile-support-for-windows-builds.patch
0007-MINGW-add-wincrypt.h-in-Python-random.c.patch
0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
0009-MINGW-init-system-calls.patch
0010-MINGW-detect-REPARSE_DATA_BUFFER.patch
0011-MINGW-build-in-windows-modules-winreg.patch
0012-MINGW-determine-if-pwdmodule-should-be-used.patch
0013-MINGW-default-sys.path-calculations-for-windows-plat.patch
0014-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
0015-MINGW-use-main-to-start-execution.patch

0021-MINGW-compiler-customize-mingw-cygwin-compilers.patch
0022-MINGW-compiler-enable-new-dtags.patch

0031-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
0032-issue17219-add-current-dir-in-library-path-if-buildi.patch
0033-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
0034-MINGW-configure-for-shared-build.patch
0035-MINGW-dynamic-loading-support.patch
0036-MINGW-implement-exec-prefix.patch
0037-MINGW-ignore-main-program-for-frozen-scripts.patch
0038-MINGW-setup-exclude-termios-module.patch
0039-MINGW-setup-_multiprocessing-module.patch
0040-MINGW-setup-select-module.patch
0041-MINGW-setup-_ctypes-module-with-system-libffi.patch
0042-MINGW-defect-winsock2-and-setup-_socket-module.patch
0043-MINGW-exclude-unix-only-modules.patch
0044-MINGW-setup-msvcrt-and-_winapi-modules.patch
0045-MINGW-build-extensions-with-GCC.patch
0046-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
0047-MINGW-find-import-library.patch
0048-MINGW-setup-_ssl-module.patch
0049-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
0050-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
0051-MINGW-avoid-circular-dependency-from-time-module-dur.patch
0052-MINGW-generalization-of-posix-build-in-distutils-sys.patch
0053-MINGW-customize-site.patch

0000-add-python-config-sh.patch
0073-py3k-mingw-ntthreads-vs-pthreads.patch
0075-mingw-system-libffi.patch
0085-mingw-use-posix-getpath.patch
0090-mingw-sysconfig-like-posix.patch
0095-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
0100-mingw-x86_64-size_t-format-specifier-pid_t.patch
0105-cross-dont-add-multiarch-paths-if-cross-compiling.patch
0110-mingw-use-backslashes-in-compileall-py.patch
0115-msys-convert_path-fix-and-root-hack.patch
0120-mingw-hack-around-double-copy-scripts-issue.patch
0125-allow-static-tcltk.patch
0130-CROSS-avoid-ncursesw-include-path-hack.patch
0131-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
0132-mingw-pdcurses_ISPAD.patch
0133-mingw-fix-ncurses-module.patch
0135-no-xxmodule-for-PYDEBUG.patch
0140-grammar-fixes.patch
0145-builddir-fixes.patch
0150-msys-monkeypatch-os-system-via-sh-exe.patch
0155-msys-replace-slashes-used-in-io-redirection.patch)


prepare() {
  cd "${srcdir}/Python-${pkgver}"
  #rm -f Modules/_ctypes/libffi_msvc/win32.S Python/fileblocks.c Misc/python-config.sh.in
  rm -f Modules/_ctypes/libffi_msvc/win32.S Misc/python-config.sh.in
  
  plain "Apply Roumen core patches"
  patch -Np1 -i "${srcdir}"/0001-MINGW-BASE-use-NT-thread-model.patch
  patch -Np1 -i "${srcdir}"/0002-MINGW-translate-gcc-internal-defines-to-python-platf.patch
  patch -Np1 -i "${srcdir}"/0003-MINGW-use-header-in-lowercase.patch
  patch -Np1 -i "${srcdir}"/0004-MINGW-configure-MACHDEP-and-platform-for-build.patch
  patch -Np1 -i "${srcdir}"/0005-MINGW-preset-configure-defaults.patch
  patch -Np1 -i "${srcdir}"/0006-MINGW-configure-largefile-support-for-windows-builds.patch
  patch -Np1 -i "${srcdir}"/0007-MINGW-add-wincrypt.h-in-Python-random.c.patch
  patch -Np1 -i "${srcdir}"/0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
  patch -Np1 -i "${srcdir}"/0009-MINGW-init-system-calls.patch
  patch -Np1 -i "${srcdir}"/0010-MINGW-detect-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0011-MINGW-build-in-windows-modules-winreg.patch
  patch -Np1 -i "${srcdir}"/0012-MINGW-determine-if-pwdmodule-should-be-used.patch
  patch -Np1 -i "${srcdir}"/0013-MINGW-default-sys.path-calculations-for-windows-plat.patch
  patch -Np1 -i "${srcdir}"/0014-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
  patch -Np1 -i "${srcdir}"/0015-MINGW-use-main-to-start-execution.patch

  plain "Apply Roumen compiler patch"
  patch -Np1 -i "${srcdir}"/0021-MINGW-compiler-customize-mingw-cygwin-compilers.patch
  patch -Np1 -i "${srcdir}"/0022-MINGW-compiler-enable-new-dtags.patch

  plain "Apply Roumen extensions patches"
  patch -Np1 -i "${srcdir}"/0031-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
  patch -Np1 -i "${srcdir}"/0032-issue17219-add-current-dir-in-library-path-if-buildi.patch
  patch -Np1 -i "${srcdir}"/0033-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
  patch -Np1 -i "${srcdir}"/0034-MINGW-configure-for-shared-build.patch
  patch -Np1 -i "${srcdir}"/0035-MINGW-dynamic-loading-support.patch
  patch -Np1 -i "${srcdir}"/0036-MINGW-implement-exec-prefix.patch
  patch -Np1 -i "${srcdir}"/0037-MINGW-ignore-main-program-for-frozen-scripts.patch
  patch -Np1 -i "${srcdir}"/0038-MINGW-setup-exclude-termios-module.patch
  patch -Np1 -i "${srcdir}"/0039-MINGW-setup-_multiprocessing-module.patch
  patch -Np1 -i "${srcdir}"/0040-MINGW-setup-select-module.patch
  patch -Np1 -i "${srcdir}"/0041-MINGW-setup-_ctypes-module-with-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0042-MINGW-defect-winsock2-and-setup-_socket-module.patch
  patch -Np1 -i "${srcdir}"/0043-MINGW-exclude-unix-only-modules.patch
  patch -Np1 -i "${srcdir}"/0044-MINGW-setup-msvcrt-and-_winapi-modules.patch
  patch -Np1 -i "${srcdir}"/0045-MINGW-build-extensions-with-GCC.patch
  patch -Np1 -i "${srcdir}"/0046-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
  patch -Np1 -i "${srcdir}"/0047-MINGW-find-import-library.patch
  patch -Np1 -i "${srcdir}"/0048-MINGW-setup-_ssl-module.patch
  patch -Np1 -i "${srcdir}"/0049-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
  patch -Np1 -i "${srcdir}"/0050-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
  patch -Np1 -i "${srcdir}"/0051-MINGW-avoid-circular-dependency-from-time-module-dur.patch
  patch -Np1 -i "${srcdir}"/0052-MINGW-generalization-of-posix-build-in-distutils-sys.patch
  patch -Np1 -i "${srcdir}"/0053-MINGW-customize-site.patch

  plain "Apply Ray Donnelly patches"
  patch -Np1 -i "${srcdir}"/0000-add-python-config-sh.patch
  patch -Np1 -i "${srcdir}"/0073-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -Np1 -i "${srcdir}"/0075-mingw-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0085-mingw-use-posix-getpath.patch
  patch -Np1 -i "${srcdir}"/0090-mingw-sysconfig-like-posix.patch
  patch -Np1 -i "${srcdir}"/0095-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
  patch -Np1 -i "${srcdir}"/0100-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/0105-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -Np1 -i "${srcdir}"/0110-mingw-use-backslashes-in-compileall-py.patch
  patch -Np1 -i "${srcdir}"/0115-msys-convert_path-fix-and-root-hack.patch
  patch -Np1 -i "${srcdir}"/0120-mingw-hack-around-double-copy-scripts-issue.patch
  patch -Np1 -i "${srcdir}"/0125-allow-static-tcltk.patch
  patch -Np1 -i "${srcdir}"/0130-CROSS-avoid-ncursesw-include-path-hack.patch
  patch -Np1 -i "${srcdir}"/0131-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -Np1 -i "${srcdir}"/0132-mingw-pdcurses_ISPAD.patch
  patch -Np1 -i "${srcdir}"/0133-mingw-fix-ncurses-module.patch
  #patch -Np1 -i "${srcdir}"/0135-no-xxmodule-for-PYDEBUG.patch
  patch -Np1 -i "${srcdir}"/0140-grammar-fixes.patch
  patch -Np1 -i "${srcdir}"/0145-builddir-fixes.patch
  patch -Np1 -i "${srcdir}"/0150-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -Np1 -i "${srcdir}"/0155-msys-replace-slashes-used-in-io-redirection.patch
  
  
  autoreconf -vfi
  
  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c
  
  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
		
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
  
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  export CFLAGS="-O2 -pipe -fwrapv -DNDEBUG -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/${MINGW_CHOST}/include"
  export CXXFLAGS="-O2 -pipe -fwrapv -DNDEBUG -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$MINGWHOME_WIN/$HOST/include"
  export CPPFLAGS="-O2 -pipe -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$PREFIX_WIN/${MINGW_CHOST}/include"
  export LDFLAGS="-pipe -s -L$PREFIX_WIN/${MINGW_CHOST}/lib -L$PREFIX_WIN/lib"
  
  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null
  
  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no
	
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
      --prefix=${pkgdir}${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --enable-shared \
      --with-threads \
      --with-system-expat \
      --with-system-ffi \
	  OPT="" \
	  CXX=g++
	  # ac_cv_ntthread=no
      # --with-dbmliborder=gdbm:ndbm
    make
}

package() {
    cd "${srcdir}/build-${CARCH}"
    make install # DESTDIR="$pkgdir"
    #mv "${pkgdir}${MINGW_PREFIX}"/bin/smtpd.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/

	cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/libpython${_pybasever}m.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}m.dll.a

	# some useful "stuff"
	install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
	install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
	install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

	# clean up #!s
	find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
		xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python3|"

	# clean-up reference to build directory
	sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/Makefile
	
	#sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python3|"
	sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python3|" "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config
	sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python3|" "${pkgdir}${MINGW_PREFIX}"/bin/python3-config
	
	# fix permissons
	find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755
	
	# replace paths in sysconfig
	sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
		"${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
		"${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py
		
}

sha1sums=('af4e75a34bd538c79b9871227c2e7f56569ac107'
          '4fbba2331874288fe2b4b7fc0a3260741bb8c2e4'
          '675157250d0fc9e6838264171539b91609d46fb8'
          '3a123788ce80322a96b41b672f59e5c3e5f1c600'
          '5e8c4a563b72f12975d3d509a8672fca6031c015'
          'ba621abcef314a8c715dbe5759dad0a37f948569'
          'c5a7bbb089e51ec6b3a4010aa8afe896e6cf4301'
          '19f5bfe2613b876e86d8b4e3710d887892f69a04'
          '2f516ddf5a046f0431cdd14d162bb04754b384b0'
          'c034697f1baecd5bd20b23ed48686dd6f2677dd2'
          '328de66ae070c209e22b8bf4a63894cd2a9e7233'
          'c308c53ac26dc4492f8420aa6ad550c864a4375d'
          'aa18efd1201aea44df96399219bc1df8b0338365'
          '6ab9cc5c47df1387eff28bfd9f10c5981ba8aa84'
          '9ffb8fdc94c34a7b27225d8c5f24186d9e7c813e'
          '06f3bdf4036a3258d15adc6c7de64601fbe982fc'
          '4f6d04a882338498da9d3da1cb46743c20d66149'
          '035aae256be22aab1ae5da4cf725175f11273361'
          'ea1134d683460aa78993da0aca35a29d9b92bc13'
          '0ce1c95b36623e056ee15dff93f79f0f04c40600'
          'cc19ae9ef4e5f46c8419b6b209cab5fc31963fcb'
          '5b05d8b3bec9dcd37a7096de2d654f1204615bcf'
          '510c295b033ff79d8e771cff76fd73c39d3213b6'
          '9f235658a6c8167581953ef5d4ddba391695b384'
          'ebbee7c2ea4ed3212712045f2eca97e9ea370a94'
          'e82704a5783076960110b2718003b7e4ddc48a26'
          'd8237507ec7c74e770c476565515ebead22edc44'
          '0cf0bca88c4d2de1d1ff1d5b97b716679a06bfa7'
          '5a1a263eab21257da29caae51cd22ad64b9ffbae'
          'ac7fdb660dcf922017f59fed849381d706518097'
          'add46b22c049d880ded6696173d878bf9dd48156'
          '61a880aa17aac0156d725a2348beb0b37c3877a7'
          '89e0415499bb1bc0951948c0c4029d5046324531'
          'e67472047b2b066b892b8ad893a156add56ceb70'
          'c7b98d01bb6d570ebe8906922c97c1eda1a7a31f'
          '83529750c6669b67936a87bc5ea4106ff6cabc89'
          'fee4e711676d9b22e68ca45d948f06c4693f024d'
          '7cb2fde6d3a2b32320bfd8facaa8420cdd105913'
          '404278ab5eb1501141d475a949bfd4f04167a72f'
          '8adb623660bc594d01c6c32440632918ae2bf0be'
          'e2e4ac730acefe584d170dae9d27a1f2eeb50ee1'
          '71af01b5159179913c6aa321f020f324bcae0611'
          'a8e6299f9224ea424b63e9c3a9e4c34a2d017a15'
          '2bc5a8dadd8be23471faa3d7b0a472c3edfb7a9d'
          'dc1f5fbc6b66d112e1dd36fd0d9532b22e43ba39'
          '66f08dc13ae35d052f7b79a6b174f0f522de925e'
          '6dbddb2ec1c2c334b7e97e11c30c40ee6c60147b'
          '9a83558c163712475242837974cace9b5d1e7902'
          'd065392ed68850195c60a34e03f471dc2378f7e2'
          'daf2004a0ae52ee1fdfe7fdc3508fa0069e9ecde'
          'b050e882c53262fb5bf9cb9d9be02f7e88081085'
          '1944c898edd643b7675dab7c90c0335766f04291'
          '0d6fee00ef09f4ed1414db8eb0b9c01c8f556412'
          '23b0a0cc2bd4c9d9489a17509261013f12e484ae'
          '8666b22adfea2b53e5d8084149efbf1520fcfac1'
          '78b73373f5c85468c1d5de15e03e20acd74fa773'
          'f404a9e8ab3fdb57284e237595c6450a12e00ffe'
          'd881a39da3fec120ff87c7e0d4d9e607557f0f22'
          '51e578a5f9c14aff74dc2807f2e3831a903101ff'
          '82bfc634b64cac08c4c89e6ea94987fde31a00bf'
          '2041d60c111fcbe825696bab84887f5fa175ed7c'
          'c49cddcea19349379990a775642fdf4051ec77fa')
