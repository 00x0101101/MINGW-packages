# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=python3
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}"
pkgver=3.3.3
pkgrel=1
_pybasever=3.3
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${_mingw_suff}-crt" 
		"${_mingw_suff}-expat"
		"${_mingw_suff}-bzip2"
		"${_mingw_suff}-readline"
		"${_mingw_suff}-openssl"
		"${_mingw_suff}-libffi"
		"${_mingw_suff}-zlib"
		"${_mingw_suff}-xz")
makedepends=("${_mingw_suff}-gcc" "${_mingw_suff}-pkg-config" "${_mingw_suff}-ncurses")
options=('!makeflags' 'staticlibs' 'strip')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
0001-MINGW-BASE-use-NT-thread-model.patch
0002-MINGW-translate-gcc-internal-defines-to-python-platf.patch
0003-MINGW-use-header-in-lowercase.patch
0004-MINGW-configure-MACHDEP-and-platform-for-build.patch
0005-MINGW-preset-configure-defaults.patch
0006-MINGW-configure-largefile-support-for-windows-builds.patch
0007-MINGW-add-wincrypt.h-in-Python-random.c.patch
0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
0009-MINGW-init-system-calls.patch
0010-MINGW-detect-REPARSE_DATA_BUFFER.patch
0011-MINGW-build-in-windows-modules-winreg.patch
0012-MINGW-determine-if-pwdmodule-should-be-used.patch
0013-MINGW-default-sys.path-calculations-for-windows-plat.patch
0014-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
0015-MINGW-use-main-to-start-execution.patch

0021-MINGW-compiler-customize-mingw-cygwin-compilers.patch
0022-MINGW-compiler-enable-new-dtags.patch

0031-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
0032-issue17219-add-current-dir-in-library-path-if-buildi.patch
0033-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
0034-MINGW-configure-for-shared-build.patch
0035-MINGW-dynamic-loading-support.patch
0036-MINGW-implement-exec-prefix.patch
0037-MINGW-ignore-main-program-for-frozen-scripts.patch
0038-MINGW-setup-exclude-termios-module.patch
0039-MINGW-setup-_multiprocessing-module.patch
0040-MINGW-setup-select-module.patch
0041-MINGW-setup-_ctypes-module-with-system-libffi.patch
0042-MINGW-defect-winsock2-and-setup-_socket-module.patch
0043-MINGW-exclude-unix-only-modules.patch
0044-MINGW-setup-msvcrt-and-_winapi-modules.patch
0045-MINGW-build-extensions-with-GCC.patch
0046-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
0047-MINGW-find-import-library.patch
0048-MINGW-setup-_ssl-module.patch
0049-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
0050-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
0051-MINGW-avoid-circular-dependency-from-time-module-dur.patch
0052-MINGW-generalization-of-posix-build-in-distutils-sys.patch
0053-MINGW-customize-site.patch

0000-add-python-config-sh.patch
0073-py3k-mingw-ntthreads-vs-pthreads.patch
0075-mingw-system-libffi.patch
0085-mingw-use-posix-getpath.patch
0090-mingw-sysconfig-like-posix.patch
0095-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
0100-mingw-x86_64-size_t-format-specifier-pid_t.patch
0105-cross-dont-add-multiarch-paths-if-cross-compiling.patch
0110-mingw-use-backslashes-in-compileall-py.patch
0115-msys-convert_path-fix-and-root-hack.patch
0120-mingw-hack-around-double-copy-scripts-issue.patch
0125-allow-static-tcltk.patch
0130-CROSS-avoid-ncursesw-include-path-hack.patch
0131-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
0132-mingw-pdcurses_ISPAD.patch
0133-mingw-fix-ncurses-module.patch
0140-grammar-fixes.patch
0145-builddir-fixes.patch
0150-msys-monkeypatch-os-system-via-sh-exe.patch
0155-msys-replace-slashes-used-in-io-redirection.patch
)

prepare() {
  cd "${srcdir}/Python-${pkgver}"
  #rm -f Modules/_ctypes/libffi_msvc/win32.S Python/fileblocks.c Misc/python-config.sh.in
  rm -f Modules/_ctypes/libffi_msvc/win32.S Misc/python-config.sh.in
  
  plain "Apply Roumen core patches"
  patch -Np1 -i "${srcdir}"/0001-MINGW-BASE-use-NT-thread-model.patch
  patch -Np1 -i "${srcdir}"/0002-MINGW-translate-gcc-internal-defines-to-python-platf.patch
  patch -Np1 -i "${srcdir}"/0003-MINGW-use-header-in-lowercase.patch
  patch -Np1 -i "${srcdir}"/0004-MINGW-configure-MACHDEP-and-platform-for-build.patch
  patch -Np1 -i "${srcdir}"/0005-MINGW-preset-configure-defaults.patch
  patch -Np1 -i "${srcdir}"/0006-MINGW-configure-largefile-support-for-windows-builds.patch
  patch -Np1 -i "${srcdir}"/0007-MINGW-add-wincrypt.h-in-Python-random.c.patch
  patch -Np1 -i "${srcdir}"/0008-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
  patch -Np1 -i "${srcdir}"/0009-MINGW-init-system-calls.patch
  patch -Np1 -i "${srcdir}"/0010-MINGW-detect-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0011-MINGW-build-in-windows-modules-winreg.patch
  patch -Np1 -i "${srcdir}"/0012-MINGW-determine-if-pwdmodule-should-be-used.patch
  patch -Np1 -i "${srcdir}"/0013-MINGW-default-sys.path-calculations-for-windows-plat.patch
  patch -Np1 -i "${srcdir}"/0014-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
  patch -Np1 -i "${srcdir}"/0015-MINGW-use-main-to-start-execution.patch

  plain "Apply Roumen compiler patch"
  patch -Np1 -i "${srcdir}"/0021-MINGW-compiler-customize-mingw-cygwin-compilers.patch
  patch -Np1 -i "${srcdir}"/0022-MINGW-compiler-enable-new-dtags.patch

  plain "Apply Roumen extensions patches"
  patch -Np1 -i "${srcdir}"/0031-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
  patch -Np1 -i "${srcdir}"/0032-issue17219-add-current-dir-in-library-path-if-buildi.patch
  patch -Np1 -i "${srcdir}"/0033-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
  patch -Np1 -i "${srcdir}"/0034-MINGW-configure-for-shared-build.patch
  patch -Np1 -i "${srcdir}"/0035-MINGW-dynamic-loading-support.patch
  patch -Np1 -i "${srcdir}"/0036-MINGW-implement-exec-prefix.patch
  patch -Np1 -i "${srcdir}"/0037-MINGW-ignore-main-program-for-frozen-scripts.patch
  patch -Np1 -i "${srcdir}"/0038-MINGW-setup-exclude-termios-module.patch
  patch -Np1 -i "${srcdir}"/0039-MINGW-setup-_multiprocessing-module.patch
  patch -Np1 -i "${srcdir}"/0040-MINGW-setup-select-module.patch
  patch -Np1 -i "${srcdir}"/0041-MINGW-setup-_ctypes-module-with-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0042-MINGW-defect-winsock2-and-setup-_socket-module.patch
  patch -Np1 -i "${srcdir}"/0043-MINGW-exclude-unix-only-modules.patch
  patch -Np1 -i "${srcdir}"/0044-MINGW-setup-msvcrt-and-_winapi-modules.patch
  patch -Np1 -i "${srcdir}"/0045-MINGW-build-extensions-with-GCC.patch
  patch -Np1 -i "${srcdir}"/0046-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
  patch -Np1 -i "${srcdir}"/0047-MINGW-find-import-library.patch
  patch -Np1 -i "${srcdir}"/0048-MINGW-setup-_ssl-module.patch
  patch -Np1 -i "${srcdir}"/0049-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
  patch -Np1 -i "${srcdir}"/0050-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
  patch -Np1 -i "${srcdir}"/0051-MINGW-avoid-circular-dependency-from-time-module-dur.patch
  patch -Np1 -i "${srcdir}"/0052-MINGW-generalization-of-posix-build-in-distutils-sys.patch
  patch -Np1 -i "${srcdir}"/0053-MINGW-customize-site.patch

  plain "Apply Ray Donnelly patches"
  patch -Np1 -i "${srcdir}"/0000-add-python-config-sh.patch
  patch -Np1 -i "${srcdir}"/0073-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -Np1 -i "${srcdir}"/0075-mingw-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0085-mingw-use-posix-getpath.patch
  patch -Np1 -i "${srcdir}"/0090-mingw-sysconfig-like-posix.patch
  patch -Np1 -i "${srcdir}"/0095-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
  patch -Np1 -i "${srcdir}"/0100-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/0105-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -Np1 -i "${srcdir}"/0110-mingw-use-backslashes-in-compileall-py.patch
  patch -Np1 -i "${srcdir}"/0115-msys-convert_path-fix-and-root-hack.patch
  patch -Np1 -i "${srcdir}"/0120-mingw-hack-around-double-copy-scripts-issue.patch
  patch -Np1 -i "${srcdir}"/0125-allow-static-tcltk.patch
  patch -Np1 -i "${srcdir}"/0130-CROSS-avoid-ncursesw-include-path-hack.patch
  patch -Np1 -i "${srcdir}"/0131-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -Np1 -i "${srcdir}"/0132-mingw-pdcurses_ISPAD.patch
  patch -Np1 -i "${srcdir}"/0133-mingw-fix-ncurses-module.patch
  patch -Np1 -i "${srcdir}"/0140-grammar-fixes.patch
  patch -Np1 -i "${srcdir}"/0145-builddir-fixes.patch
  patch -Np1 -i "${srcdir}"/0150-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -Np1 -i "${srcdir}"/0155-msys-replace-slashes-used-in-io-redirection.patch
  
  
  autoreconf -vfi
  
  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c
  
  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
		
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
  
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  export CFLAGS="-O2 -pipe -fwrapv -DNDEBUG -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/${MINGW_CHOST}/include"
  export CXXFLAGS="-O2 -pipe -fwrapv -DNDEBUG -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$MINGWHOME_WIN/$HOST/include"
  export CPPFLAGS="-O2 -pipe -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$PREFIX_WIN/${MINGW_CHOST}/include"
  export LDFLAGS="-pipe -s -L$PREFIX_WIN/${MINGW_CHOST}/lib -L$PREFIX_WIN/lib"
  
  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null
  
  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no
	
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
      --prefix=${pkgdir}${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --enable-shared \
      --with-threads \
      --with-system-expat \
      --with-system-ffi \
	  OPT="" \
	  CXX=g++
	  # ac_cv_ntthread=no
      # --with-dbmliborder=gdbm:ndbm
    make
}

package() {
    cd "${srcdir}/build-${CARCH}"
    make install # DESTDIR="$pkgdir"
    #mv "${pkgdir}${MINGW_PREFIX}"/bin/smtpd.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/

	rm "${pkgdir}${MINGW_PREFIX}"/bin/2to3
	cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/libpython${_pybasever}m.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}m.dll.a

	# some useful "stuff"
	install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
	install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
	install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

	# clean up #!s
	find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
		xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python3|"

	# clean-up reference to build directory
	sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/Makefile
	
	#sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python3|"
	sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python3|" "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config
	sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python3|" "${pkgdir}${MINGW_PREFIX}"/bin/python3-config
	
	# fix permissons
	find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755
	
	# replace paths in sysconfig
	sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
		"${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
		"${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py
		
}

sha1sums=('af4e75a34bd538c79b9871227c2e7f56569ac107'
          'ed02fd08b501ded12a5f66794364fae1096aaafa'
          '4c07702d1517c2b317114c45be489ba8b8f1720f'
          '96f9730ba51ffc0b2590bb65eb8dad88ac3fdc45'
          '5b9ef5218737e6fe422c785fc095760b234fec61'
          '900a572fdfb25e9715b0e3027afb7dfe7cea640a'
          '9b3a92cee3953d650024598ac53e1dd24e4e9842'
          '7ef78d8faad83ef75a759ab862ffca2d02d7eadc'
          '63112ac3b2d125779b10aa3e8f2e96ebc08c6797'
          'fccaeb39c7b966ea301f3445f0aeef618cd9d2b0'
          '745e8906fae4baff9183541bdcdbe50a245ddf07'
          '9de1857870e208f01eba8e844383840ca24d3c55'
          '46192bf6507970c6e90c2f8fdaff4c2cc45e6ae2'
          '674d7524de12637f63913b3fd68b8fb08373e2d3'
          'ac53d0a518f8b78bd1d10afe0f9bfc5d6a87ca5c'
          'cac0ab497a6b7be0f999ae5e5cd9bf656eee6ebd'
          '7c1669a68a586fdfee3ae3cd05eb7f7cc539d5e1'
          '3bd69453e2316507bd45ba0fa681b421acef081e'
          '1456126c9d42da6ab89767b475c2b94c047bafc9'
          '075a8e71b02bc719b7478d0e59b13e67b0ce9db0'
          '14cc2ff693a71e52d1ce67905b8a4455ad3d20e7'
          'bdead3dad9e586039671b44880724e348e3b18aa'
          '67171f88be8870c1c76dbc6dabb2e2f2635a7564'
          '1ab15235b21ecbf7fc88a3b5027b2cd535d3d9df'
          '6805b1f04018a4d9ff6da40af1dd110fa1caf241'
          '02f342c75e128413297fad21c17cc167899539a8'
          'd2068017b226c1c26120b7a12dde0a8e585c4a88'
          '8c48d6dbbff0db43eeb7cdf044a265262e8149d5'
          '0d25a1b00c8c0769d3d6636147b8dcb115fe4e9c'
          '9b7a44baad2506e3303b71d0f6fe110bb1a707be'
          '6183f38b9f8e82d713ca78b429479d93f4994caf'
          'bab7c39902469da5ae75d9a4782d7ea9d31642c2'
          '2b5fd3417cc6f5e040917f083e82fa9947cf37c1'
          '88bb5ff359c4b30fbaac3a19d59c079dacdd57e6'
          '1367b50faac9952da83d079d2a615af37dff6a68'
          '45dc708710b0fbdc95c7c2b33da4535bc19cb2e4'
          '5f973daff54cfb95d966443604a5d5dcd569725b'
          '104fdc5828904235db181ed8ff29511fc3ec17b7'
          '4e49e8f343b44a042e6bfc9963c8aad689d6f0d7'
          '1c9cd4ff9e619486802ffc106fea61b2e46d12f6'
          '5b22e1ee38256d99ba044b62b3d0bd6d61bfac37'
          'bdfa7bed73c016cb61d3562b65d6a7937cf0d6ae'
          '7a27c0b6e6eb6effdc36ff67fce651bc230e5b25'
          '3e2ef24b0c6b30677b66f3f6020fd4faa6238101'
          '94dc367bb5e533efefdcd738be5955a084404df7'
          '845aabebbe4bf9c4b0cac2748e5f8d54f82213b2'
          'c8767e30fffe19827734d50bdba38d60854f9615'
          '7f9ace3eeb8d361a8cf3f37e1b27581e66ca5be1'
          '77bf5569b86cce9171ed00a0558522f807103efd'
          '0b7193579ec5d31826b7ccced7849416d53f503b'
          'f8ae624ad4f944240d27777e15c66b16c9f9ccda'
          '9871a8bdb24448a605672b12213b1668efe09423'
          'e08ea1091bad41a986bb3f4001c82c5d19e2e7a9'
          'b88829f5f6a897f4d7dc2062a2ef6930c704f582'
          'ece087e9d4e2a978112849df1890e25113773ce7'
          'a2eb631876c68ccf609db6e31919e12f8100b2d8'
          '7a0bc33d6dfe6b17821c0622fb8feaa73cb13c6b'
          '8dbdc1500a08984ad2d36d538ed0592d1f500b60'
          '683222062c72825639fdbce9a1b4b01e61bf10e3'
          '97946e1ade32b39665765aa1e3ad4b1ad4753f6e'
          'd8f07f3d4e3c97ab20e6e0b245a90b9eb28d5d6c')
