# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=python3
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}"
pkgver=3.3.3
pkgrel=1
_pybasever=3.3
pkgdesc="A high-level scripting language (mingw-w64)"
arch=('any')
license=('PSF')
url="http://www.python.org/"
depends=("${_mingw_suff}-crt" 
		"${_mingw_suff}-expat"
		"${_mingw_suff}-bzip2"
		"${_mingw_suff}-readline"
		"${_mingw_suff}-openssl"
		"${_mingw_suff}-libffi"
		"${_mingw_suff}-zlib"
		"${_mingw_suff}-xz"
		"${_mingw_suff}-tcl"
		"${_mingw_suff}-tk")
makedepends=("${_mingw_suff}-gcc" "${_mingw_suff}-pkg-config" "${_mingw_suff}-ncurses")
options=('!makeflags' 'staticlibs' 'strip')
source=("http://www.python.org/ftp/python/${pkgver%rc?}/Python-${pkgver}.tar.xz"
0100-MINGW-BASE-use-NT-thread-model.patch
0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
0120-MINGW-use-header-in-lowercase.patch
0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
0140-MINGW-preset-configure-defaults.patch
0150-MINGW-configure-largefile-support-for-windows-builds.patch
0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
0170-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
0180-MINGW-init-system-calls.patch
0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
0200-MINGW-build-in-windows-modules-winreg.patch
0210-MINGW-determine-if-pwdmodule-should-be-used.patch
0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
0240-MINGW-use-main-to-start-execution.patch
0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
0260-MINGW-compiler-enable-new-dtags.patch
0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
0300-MINGW-configure-for-shared-build.patch
0310-MINGW-dynamic-loading-support.patch
0320-MINGW-implement-exec-prefix.patch
0330-MINGW-ignore-main-program-for-frozen-scripts.patch
0340-MINGW-setup-exclude-termios-module.patch
0350-MINGW-setup-_multiprocessing-module.patch
0360-MINGW-setup-select-module.patch
0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
0390-MINGW-exclude-unix-only-modules.patch
0400-MINGW-setup-msvcrt-and-_winapi-modules.patch
0410-MINGW-build-extensions-with-GCC.patch
0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
0430-MINGW-find-import-library.patch
0440-MINGW-setup-_ssl-module.patch
0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
0470-MINGW-avoid-circular-dependency-from-time-module-dur.patch
0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
0490-MINGW-customize-site.patch
0500-add-python-config-sh.patch
0510-cross-darwin-feature.patch
0520-py3k-mingw-ntthreads-vs-pthreads.patch
0530-mingw-system-libffi.patch
0540-mingw-semicolon-DELIM.patch
0550-mingw-regen-use-stddef_h.patch
0560-mingw-use-posix-getpath.patch
0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
0580-mingw32-test-REPARSE_DATA_BUFFER.patch
0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
0610-msys-cygwin-semi-native-build-sysconfig.patch
0620-mingw-sysconfig-like-posix.patch
0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
0660-mingw-use-backslashes-in-compileall-py.patch
0670-msys-convert_path-fix-and-root-hack.patch
0680-mingw-hack-around-double-copy-scripts-issue.patch
0690-allow-static-tcltk.patch
0700-CROSS-avoid-ncursesw-include-path-hack.patch
0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
0720-mingw-pdcurses_ISPAD.patch
0730-mingw-fix-ncurses-module.patch
0740-grammar-fixes.patch
0750-builddir-fixes.patch
0760-msys-monkeypatch-os-system-via-sh-exe.patch
0770-msys-replace-slashes-used-in-io-redirection.patch
0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch)

prepare() {
  cd "${srcdir}/Python-${pkgver}"
  #rm -f Modules/_ctypes/libffi_msvc/win32.S Python/fileblocks.c Misc/python-config.sh.in
  rm -f Modules/_ctypes/libffi_msvc/win32.S Misc/python-config.sh.in

  plain "Apply Roumen Petrov's core patches (15)"
  patch -Np1 -i "${srcdir}"/0100-MINGW-BASE-use-NT-thread-model.patch
  patch -Np1 -i "${srcdir}"/0110-MINGW-translate-gcc-internal-defines-to-python-platf.patch
  patch -Np1 -i "${srcdir}"/0120-MINGW-use-header-in-lowercase.patch
  patch -Np1 -i "${srcdir}"/0130-MINGW-configure-MACHDEP-and-platform-for-build.patch
  patch -Np1 -i "${srcdir}"/0140-MINGW-preset-configure-defaults.patch
  patch -Np1 -i "${srcdir}"/0150-MINGW-configure-largefile-support-for-windows-builds.patch
  patch -Np1 -i "${srcdir}"/0160-MINGW-add-wincrypt.h-in-Python-random.c.patch
  patch -Np1 -i "${srcdir}"/0170-MINGW-add-srcdir-PC-to-CPPFLAGS.patch
  patch -Np1 -i "${srcdir}"/0180-MINGW-init-system-calls.patch
  patch -Np1 -i "${srcdir}"/0190-MINGW-detect-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0200-MINGW-build-in-windows-modules-winreg.patch
  patch -Np1 -i "${srcdir}"/0210-MINGW-determine-if-pwdmodule-should-be-used.patch
  patch -Np1 -i "${srcdir}"/0220-MINGW-default-sys.path-calculations-for-windows-plat.patch
  patch -Np1 -i "${srcdir}"/0230-MINGW-AC_LIBOBJ-replacement-of-fileblocks.patch
  patch -Np1 -i "${srcdir}"/0240-MINGW-use-main-to-start-execution.patch

  plain "Apply Roumen Petrov's compiler patch (2)"
  patch -Np1 -i "${srcdir}"/0250-MINGW-compiler-customize-mingw-cygwin-compilers.patch
  patch -Np1 -i "${srcdir}"/0260-MINGW-compiler-enable-new-dtags.patch

  plain "Apply Roumen Petrov's extensions patches (23)"
  patch -Np1 -i "${srcdir}"/0270-CYGWIN-issue13756-Python-make-fail-on-cygwin.patch
  patch -Np1 -i "${srcdir}"/0280-issue17219-add-current-dir-in-library-path-if-buildi.patch
  patch -Np1 -i "${srcdir}"/0290-issue6672-v2-Add-Mingw-recognition-to-pyport.h-to-al.patch
  patch -Np1 -i "${srcdir}"/0300-MINGW-configure-for-shared-build.patch
  patch -Np1 -i "${srcdir}"/0310-MINGW-dynamic-loading-support.patch
  patch -Np1 -i "${srcdir}"/0320-MINGW-implement-exec-prefix.patch
  patch -Np1 -i "${srcdir}"/0330-MINGW-ignore-main-program-for-frozen-scripts.patch
  patch -Np1 -i "${srcdir}"/0340-MINGW-setup-exclude-termios-module.patch
  patch -Np1 -i "${srcdir}"/0350-MINGW-setup-_multiprocessing-module.patch
  patch -Np1 -i "${srcdir}"/0360-MINGW-setup-select-module.patch
  patch -Np1 -i "${srcdir}"/0370-MINGW-setup-_ctypes-module-with-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0380-MINGW-defect-winsock2-and-setup-_socket-module.patch
  patch -Np1 -i "${srcdir}"/0390-MINGW-exclude-unix-only-modules.patch
  patch -Np1 -i "${srcdir}"/0400-MINGW-setup-msvcrt-and-_winapi-modules.patch
  patch -Np1 -i "${srcdir}"/0410-MINGW-build-extensions-with-GCC.patch
  patch -Np1 -i "${srcdir}"/0420-MINGW-use-Mingw32CCompiler-as-default-compiler-for-m.patch
  patch -Np1 -i "${srcdir}"/0430-MINGW-find-import-library.patch
  patch -Np1 -i "${srcdir}"/0440-MINGW-setup-_ssl-module.patch
  patch -Np1 -i "${srcdir}"/0450-MINGW-export-_PyNode_SizeOf-as-PyAPI-for-parser-modu.patch
  patch -Np1 -i "${srcdir}"/0460-MINGW-generalization-of-posix-build-in-sysconfig.py.patch
  patch -Np1 -i "${srcdir}"/0470-MINGW-avoid-circular-dependency-from-time-module-dur.patch
  patch -Np1 -i "${srcdir}"/0480-MINGW-generalization-of-posix-build-in-distutils-sys.patch
  patch -Np1 -i "${srcdir}"/0490-MINGW-customize-site.patch

  plain "Apply Ray Donnelly's general/cross patches (29)"
  patch -Np1 -i "${srcdir}"/0500-add-python-config-sh.patch
  patch -Np1 -i "${srcdir}"/0510-cross-darwin-feature.patch
  patch -Np1 -i "${srcdir}"/0520-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -Np1 -i "${srcdir}"/0530-mingw-system-libffi.patch
  patch -Np1 -i "${srcdir}"/0540-mingw-semicolon-DELIM.patch
  patch -Np1 -i "${srcdir}"/0550-mingw-regen-use-stddef_h.patch
  patch -Np1 -i "${srcdir}"/0560-mingw-use-posix-getpath.patch
  patch -Np1 -i "${srcdir}"/0570-mingw-add-BUILDIN_WIN32_MODULEs-time-msvcrt.patch
  patch -Np1 -i "${srcdir}"/0580-mingw32-test-REPARSE_DATA_BUFFER.patch
  patch -Np1 -i "${srcdir}"/0590-mingw-INSTALL_SHARED-LDLIBRARY-LIBPL.patch
  patch -Np1 -i "${srcdir}"/0600-msys-mingw-prefer-unix-sep-if-MSYSTEM.patch
  patch -Np1 -i "${srcdir}"/0610-msys-cygwin-semi-native-build-sysconfig.patch
  patch -Np1 -i "${srcdir}"/0620-mingw-sysconfig-like-posix.patch
  patch -Np1 -i "${srcdir}"/0630-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
  patch -Np1 -i "${srcdir}"/0640-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/0650-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -Np1 -i "${srcdir}"/0660-mingw-use-backslashes-in-compileall-py.patch
  patch -Np1 -i "${srcdir}"/0670-msys-convert_path-fix-and-root-hack.patch
  patch -Np1 -i "${srcdir}"/0680-mingw-hack-around-double-copy-scripts-issue.patch
  patch -Np1 -i "${srcdir}"/0690-allow-static-tcltk.patch
  patch -Np1 -i "${srcdir}"/0700-CROSS-avoid-ncursesw-include-path-hack.patch
  patch -Np1 -i "${srcdir}"/0710-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -Np1 -i "${srcdir}"/0720-mingw-pdcurses_ISPAD.patch
  patch -Np1 -i "${srcdir}"/0730-mingw-fix-ncurses-module.patch
  patch -Np1 -i "${srcdir}"/0740-grammar-fixes.patch
  patch -Np1 -i "${srcdir}"/0750-builddir-fixes.patch
  patch -Np1 -i "${srcdir}"/0760-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -Np1 -i "${srcdir}"/0770-msys-replace-slashes-used-in-io-redirection.patch
  patch -Np1 -i "${srcdir}"/0790-mingw-add-_exec_prefix-for-tcltk-dlls.patch

  autoreconf -vfi
  
  # Temporary workaround for FS#22322
  # See http://bugs.python.org/issue10835 for upstream report
  #sed -i "/progname =/s/python/python${_pybasever}/" Python/pythonrun.c
  
  touch Include/graminit.h
  touch Python/graminit.c
  touch Parser/Python.asdl
  touch Parser/asdl.py
  touch Parser/asdl_c.py
  touch Include/Python-ast.h
  touch Python/Python-ast.c
  echo \"\" > Parser/pgen.stamp
		
  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
  rm -r Modules/_ctypes/{darwin,libffi}*
  
}

build() {
  pushd ${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null

  export CFLAGS="-O2 -pipe -fwrapv -DNDEBUG -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/${MINGW_CHOST}/include"
  export CXXFLAGS="-O2 -pipe -fwrapv -DNDEBUG -D__USE_MINGW_ANSI_STDIO=1 -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$MINGWHOME_WIN/$HOST/include"
  export CPPFLAGS="-O2 -pipe -I$PREFIX_WIN/include -I$PREFIX_WIN/include/ncursesw -I$PREFIX_WIN/${MINGW_CHOST}/include"
  export LDFLAGS="-pipe -s -L$PREFIX_WIN/${MINGW_CHOST}/lib -L$PREFIX_WIN/lib"
  
  LIBFFI_INC=`${MINGW_PREFIX}/bin/pkg-config libffi --cflags-only-I | sed "s|\-I||g"`
  pushd ${LIBFFI_INC} > /dev/null
  export LIBFFI_INCLUDEDIR=`pwd -W`
  popd > /dev/null
  
  # Workaround for conftest error on 64-bit builds
  export ac_cv_working_tzset=no
	
  mkdir -p "${srcdir}/build-${CARCH}" && cd "${srcdir}/build-${CARCH}"
  MSYSTEM=MINGW ../Python-${pkgver}/configure \
      --prefix=${MINGW_PREFIX} \
      --host=${MINGW_CHOST} \
      --build=${MINGW_CHOST} \
      --enable-shared \
      --with-threads \
      --with-system-expat \
      --with-system-ffi \
        OPT="" \
        CXX=g++
        # ac_cv_ntthread=no
      # --with-dbmliborder=gdbm:ndbm
    make
}

package() {
    cd "${srcdir}/build-${CARCH}"
    MSYSTEM=MINGW \
    MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
      make install DESTDIR="$pkgdir"
    #mv "${pkgdir}${MINGW_PREFIX}"/bin/smtpd.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/

	rm "${pkgdir}${MINGW_PREFIX}"/bin/2to3
	cp -f "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/libpython${_pybasever}m.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/libpython${_pybasever}m.dll.a

	# some useful "stuff"
	install -dm755 "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/{i18n,scripts}
	install -m755 "${srcdir}/Python-${pkgver}"/Tools/i18n/{msgfmt,pygettext}.py "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/i18n/
	install -m755 "${srcdir}/Python-${pkgver}"/Tools/scripts/{README,*py} "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/Tools/scripts/

	# clean up #!s
	find "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/ -name '*.py' | \
		xargs sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python3|"

	# clean-up reference to build directory
	sed -i "s#${srcdir}/Python-${pkgver}:##" "${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/config-${_pybasever}m/Makefile
	
	#sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python3|"
	sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python3|" "${pkgdir}${MINGW_PREFIX}"/bin/python${_pybasever}-config
	sed -i "s|#!${pkgdir}${MINGW_PREFIX}/bin/python${_pybasever}.exe|#!python3|" "${pkgdir}${MINGW_PREFIX}"/bin/python3-config
	
	# fix permissons
	find ${pkgdir}${MINGW_PREFIX} -type f \( -name "*.dll" -o -name "*.exe" \) | xargs chmod 0755
	
	# replace paths in sysconfig
	sed -i "s|${pkgdir}${MINGW_PREFIX}|${MINGW_PREFIX}|g" \
		"${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/_sysconfigdata.py \
		"${pkgdir}${MINGW_PREFIX}"/lib/python${_pybasever}/smtpd.py
		
}

sha1sums=('af4e75a34bd538c79b9871227c2e7f56569ac107'
          'a8327f090cde9caa8e7afde8cc4a9829298816e7'
          '49bf5ab70b63a9ece273522c5b53caec3fbf84d5'
          '1035ccd23076cb77bc1b0c788fb08755eba4504b'
          '7d614f65936cd236ed489d64c632d882feb0866e'
          '20e98802164657b21cb5d0791e8788526f16b7f5'
          '83ff5674d2cb087fcc7a465f814a2b8149cd389f'
          '99312cb2569bc4e13be87d2e0da5d7ed66c3dab7'
          'ae2c949c173e10a0bd1691fe668fe4d9f1546e1f'
          '643b72aa14e79e5a4e1ba1b114abb96a58a32cf7'
          '80047e186175d0218376c597b434a09a61d99efa'
          '46120014aa1dd7ee95c4d7d3b862326d72cfe0c2'
          'c46008f86ffd22faceea20f8e6a0ca9b027872d6'
          'dc30e966c9c3abb60cdd90e7a3b972cd72d64449'
          'daac4e12b3735964ca18e315073badacd738b973'
          'e6608e175056994e038f96c87c1cf738124c1268'
          '8e95496e7f486958582e3f7b5b30bcfe6b449c45'
          'b955136161b4f3faa719b2e53f9a762d7dd68316'
          '5754dd5a92cfaa84997f6efae61fdae2b2a9fb5e'
          '80d5419b270317fea66a9557288642265395025b'
          '126179e4fa5267a88982957e23dcce293d79b577'
          '4329f50281b485ac83a685e2ccf3c0ca49981148'
          'faea1ac76a8f797a053542b25442934ca070f2ba'
          '91c2f438e714fe556faa588a895b8e9baa425aef'
          '58aae00bfcaf7549f637b97b5e40d5342dbbec07'
          '0ff21c9ef90cf34d154f2f1365ab3d02eac20c74'
          'ba3aba2bbd374c2119548eb703f1919a9d30af7e'
          '840789d1bc8ad20b39c698fa7700953b025c7423'
          '73da9b0c22642707295edfcb2ed37864ac534d2a'
          '1b13dcd033744baa6dfa14f734e553f510d9614f'
          'df47f6cbf94ad49434c766bdbefb6d2aa726d82c'
          'c845966ddebbc06b0c2b57340f0b3b7f41af4a75'
          '7de8fd42fa4239f9a349d5725712e396a81dd272'
          '0429a542ddabbb47f007556b544a7bc276254f29'
          '879bc387351ac69bcc18d4e0e605fafcb9f57832'
          'b2eba5b6eb265d3e9f8ca297b859182181967ac5'
          '05a5730d931473a817863325830097816cfa6f5f'
          '7ee465d7eb3a0fa97f69b299a27eec0ca78b5db6'
          '36b1bbf716e8dfee210ddcb4a05cf37a95789aa6'
          '3ac188750e7aa1e86915c958f1697e669079b31a'
          '5afeef3856f3045d55feab64fa569a715c8bd4d6'
          'b7d964bd73ed0fca62be7b4c72a7db580a6ff0d5'
          'decca1086965818a52a1fa097fedb33499a49de6'
          'f5d2bb7f11d7fd5e50e702b0c3649536be043ffb'
          '61375564a5df2b55423d5fe18299d0707b846acf'
          '9e063661b3d3c5e57914f2d3ed83e816ea8411a1'
          'ebb9e9840bb18d67aba192fee9d484da100e5f14'
          'bd82d74ce8d652d6a5bd0c53b1a43f6d83ad43cf'
          '68f3c7251d38bbed337eed7b090e2af2dc525e5c'
          '46e0c8665b3e48d69b3c366876cfe77369b7caea'
          '33e3a8a3eed033ad44bf1f21fb91243971fed941'
          '4a35926e2d9140f4d1b6627648e7188ff3e853e1'
          'e5750e328fc1764003b27ad577ffbcae3dd3c1f7'
          'd826f5f6d05377fcab8f4f6c3a0bf687dcd0e7f8'
          '6ac03c348600f29d404bb13aa252c5ecd6b3987c'
          '82ebf2a084337d541683d050f646788ee80b047e'
          'c4c764de9b88f919d5958a0d5a51580118d6ebe7'
          '98bf94c2e4267f7bf4fbb4bbf687682b1fdfeb33'
          '2536780cadbee00b69d2c09d45bbedb71add573e'
          '5c03fce6027fce0e82cf132515ed9c7455646757'
          'd73f36875a692f1cb3268d9fc71bf269b465497e'
          '4cd925f418da26be4144db27d9099407993c24fe'
          '096a72aadf4be28307cfca735d6e1dc4f7f4aa72'
          '0b28996c1b11b3862b3ceb293e3c7a152a260628'
          '84b720dbac03e498f4ea7f5e7629ab732076e383'
          '3dc19374dba4fe240a4c96188a43c8d03e20b6d0'
          '9d90a7df693771d0597c3a7fbedc13c1487be78e'
          '8cfd80b108226a8571dd2e7a2db13fd9746854a4'
          '601a68afaa037197818dc7465b37dc4b56b3e40a'
          '87eb4c94af2bd2eca6d28544bc09f6580dfdabe7')
