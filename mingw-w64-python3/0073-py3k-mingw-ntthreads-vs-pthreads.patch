diff -urN a/configure.ac b/configure.ac
--- a/configure.ac	2013-04-24 23:35:32.604697941 +0100
+++ b/configure.ac	2013-04-24 23:35:32.948700223 +0100
@@ -1661,7 +1660,7 @@
 CPPFLAGS="$CPPFLAGS -I/usr/include/ncursesw"
 AC_CHECK_HEADERS(asm/types.h conio.h curses.h direct.h dlfcn.h errno.h \
 fcntl.h grp.h \
-ieeefp.h io.h langinfo.h libintl.h ncurses.h process.h pthread.h \
+ieeefp.h io.h langinfo.h libintl.h ncurses.h process.h \
 sched.h shadow.h signal.h stdint.h stropts.h termios.h \
 unistd.h utime.h \
 poll.h sys/devpoll.h sys/epoll.h sys/poll.h \
@@ -1693,6 +1692,14 @@
 ])
 
 
+# If using nt threads, don't look for pthread.h or thread.h
+if test "x$ac_cv_ntthread" = xno ; then
+AC_HEADER_STDC
+AC_CHECK_HEADERS(pthread.h thread.h)
+AC_HEADER_DIRENT
+AC_HEADER_MAJOR
+fi
+
 # On Solaris, term.h requires curses.h
 AC_CHECK_HEADERS(term.h,,,[
 #ifdef HAVE_CURSES_H
@@ -2318,9 +2325,11 @@
   ;;
   *)
 if test "$with_threads" = "yes" -o -z "$with_threads"; then
-    AC_SEARCH_LIBS(sem_init, pthread rt posix4) # 'Real Time' functions on Solaris
-						# posix4 on Solaris 2.6
-						# pthread (first!) on Linux
+    if test "$ac_cv_ntthread" = "no" -o -z "$ac_cv_ntthread"; then
+		AC_SEARCH_LIBS(sem_init, pthread rt posix4) # 'Real Time' functions on Solaris
+							# posix4 on Solaris 2.6
+							# pthread (first!) on Linux
+    fi
 fi
   ;;
 esac
diff -urN a/Python/condvar.h b/Python/condvar.h
--- a/Python/condvar.h	2013-04-24 23:35:32.532697463 +0100
+++ b/Python/condvar.h	2013-04-24 23:35:32.947700217 +0100
@@ -42,6 +42,12 @@
 
 #include "Python.h"
 
+#ifdef __MINGW32__
+# if !defined(HAVE_PTHREAD_H) || defined(NT_THREADS)
+#  undef _POSIX_THREADS
+# endif
+#endif
+
 #ifndef _POSIX_THREADS
 /* This means pthreads are not implemented in libc headers, hence the macro
    not present in unistd.h. But they still can be implemented as an external
diff -urN a/Python/thread.c b/Python/thread.c
--- a/Python/thread.c	2013-04-24 23:35:32.533697469 +0100
+++ b/Python/thread.c	2013-04-24 23:35:32.947700217 +0100
@@ -15,6 +15,12 @@
 
 #include "Python.h"

+#ifdef __MINGW32__
+# if !defined(HAVE_PTHREAD_H) || defined(NT_THREADS)
+#  undef _POSIX_THREADS
+# endif
+#endif
+
 #ifndef _POSIX_THREADS
 /* This means pthreads are not implemented in libc headers, hence the macro
    not present in unistd.h. But they still can be implemented as an external
