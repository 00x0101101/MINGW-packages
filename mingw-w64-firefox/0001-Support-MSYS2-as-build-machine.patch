diff -urN firefox-38.0.5.orig/config/baseconfig.mk firefox-38.0.5/config/baseconfig.mk
--- firefox-38.0.5.orig/config/baseconfig.mk	2015-05-25 22:28:44.000000000 +0100
+++ firefox-38.0.5/config/baseconfig.mk	2015-06-28 23:29:12.430351300 +0100
@@ -31,9 +31,6 @@
 $(error Pymake is no longer supported. Please upgrade to MozillaBuild 1.9 or newer and build with 'mach' or 'mozmake')
 endif
 
-ifeq (a,$(firstword a$(subst /, ,$(abspath .))))
-$(error MSYS make is not supported)
-endif
 # 4.0- happens to be greater than 4.0, lower than the mozmake version,
 # and lower than 4.0.1 or 4.1, whatever next version of gnu make will
 # be released.
diff -urN firefox-38.0.5.orig/mach firefox-38.0.5/mach
--- firefox-38.0.5.orig/mach	2015-05-25 22:28:46.000000000 +0100
+++ firefox-38.0.5/mach	2015-06-28 23:27:16.616644800 +0100
@@ -6,7 +6,7 @@
 # The beginning of this script is both valid shell and valid python,
 # such that the script starts with the shell and is reexecuted with
 # the right python.
-'''which' python2.7 > /dev/null && exec python2.7 "$0" "$@" || exec python "$0" "$@"
+'''which' ${PYTHON} > /dev/null && exec ${PYTHON} "$0" "$@" || exec python2.7 "$0" "$@" || exec python "$0" "$@"
 '''
 
 from __future__ import print_function, unicode_literals
diff -urN firefox-38.0.5.orig/python/virtualenv/virtualenv.py firefox-38.0.5/python/virtualenv/virtualenv.py
--- firefox-38.0.5.orig/python/virtualenv/virtualenv.py	2015-05-25 22:28:56.000000000 +0100
+++ firefox-38.0.5/python/virtualenv/virtualenv.py	2015-07-03 18:05:22.708700600 +0100
@@ -45,6 +45,7 @@
 is_pypy = hasattr(sys, 'pypy_version_info')
 is_win = (sys.platform == 'win32')
 is_cygwin = (sys.platform == 'cygwin')
+is_msys = (sys.platform == 'msys')
 is_darwin = (sys.platform == 'darwin')
 abiflags = getattr(sys, 'abiflags', '')
 
@@ -1276,7 +1277,7 @@
         executable = sys.executable
         shutil.copyfile(executable, py_executable)
         make_exe(py_executable)
-        if is_win or is_cygwin:
+        if is_win or is_cygwin or is_msys:
             pythonw = os.path.join(os.path.dirname(sys.executable), 'pythonw.exe')
             if os.path.exists(pythonw):
                 logger.info('Also created pythonw.exe')
@@ -1291,10 +1292,18 @@
                 os.unlink(python_d_dest)
             # we need to copy the DLL to enforce that windows will load the correct one.
             # may not exist if we are cygwin.
-            py_executable_dll = 'python%s%s.dll' % (
-                sys.version_info[0], sys.version_info[1])
-            py_executable_dll_d = 'python%s%s_d.dll' % (
-                sys.version_info[0], sys.version_info[1])
+            cygwin_msys_dll = None
+            python_dll_prefix = ''
+            if is_cygwin:
+                cygwin_msys_dll = 'cygwin1.dll'
+                python_dll_prefix = 'cygwin-'
+            if is_msys:
+                cygwin_msys_dll = 'msys-2.0.dll'
+                python_dll_prefix = 'msys-'
+            py_executable_dll = '%spython%s%s.dll' % (
+                python_dll_prefix, sys.version_info[0], sys.version_info[1])
+            py_executable_dll_d = '%spython%s%s_d.dll' % (
+                python_dll_prefix, sys.version_info[0], sys.version_info[1])
             pythondll = os.path.join(os.path.dirname(sys.executable), py_executable_dll)
             pythondll_d = os.path.join(os.path.dirname(sys.executable), py_executable_dll_d)
             pythondll_d_dest = os.path.join(os.path.dirname(py_executable), py_executable_dll_d)
@@ -1307,6 +1316,12 @@
             elif os.path.exists(pythondll_d_dest):
                 logger.info('Removed %s as the source does not exist' % pythondll_d_dest)
                 os.unlink(pythondll_d_dest)
+            if cygwin_msys_dll:
+                cygwin_msys_dll_dest = os.path.join(os.path.dirname(py_executable), cygwin_msys_dll)
+                cygwin_msys_dll = os.path.join(os.path.dirname(sys.executable), cygwin_msys_dll)
+                if os.path.exists(cygwin_msys_dll):
+                    logger.info('Also copied Cygwin/MSYS2 core system dll %s' % cygwin_msys_dll)
+                    shutil.copyfile(cygwin_msys_dll, cygwin_msys_dll_dest)
         if is_pypy:
             # make a symlink python --> pypy-c
             python_executable = os.path.join(os.path.dirname(py_executable), 'python')
