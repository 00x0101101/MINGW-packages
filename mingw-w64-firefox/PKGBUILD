# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=firefox
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=38.0.5
pkgrel=1
pkgdesc='Mozilla Firefox (mingw-w64)'
groups=("${MINGW_PACKAGE_PREFIX}")
arch=('any')
url='https://www.mozilla.org/firefox/'
license=('MPL2')
source=("http://ftp.mozilla.org/pub/mozilla.org/${_realname}/releases/${pkgver}/source/${_realname}-${pkgver}.source.tar.bz2"
        "0001-Support-MSYS2-as-build-machine.patch"
        ".mozconfig.x86_64"
        ".mozconfig.i686"
        "config.sub"
        "config.guess")
noextract=("${_realname}-${pkgver}.source.tar.bz2")
sha1sums=('74da3e225d5b542e784549be63475802c45e1b02'
          'dd46cd0b491d8f1f3103bb9557f788c3ce041499'
          '9405456c0383b22255a494e0131cd3ea8f33b15d'
          'dd68b964cceb9dbd632b24659871093803522f6e'
          '17c4f8628ea435c999be66ee4c2967fdaf3b2955'
          'ffb6644dbad00413c668c833e3f3680d1d73aa53')

prepare() {
  tar -xf "${srcdir}"/${_realname}-${pkgver}.source.tar.bz2 || true
  if [ -d "${srcdir}"/mozilla-beta ]; then
    mv "${srcdir}"/mozilla-beta "${srcdir}"/${_realname}-${pkgver}
  elif [ -d "${srcdir}"/mozilla-release ]; then
    mv "${srcdir}"/mozilla-release "${srcdir}"/${_realname}-${pkgver}
  else
    echo "Can't find sources!"
    exit 1
  fi
  cd "${srcdir}"/${_realname}-${pkgver}
  patch -p1 -i "${srcdir}"/0001-Support-MSYS2-as-build-machine.patch
  find . -name config.sub -exec cp "${srcdir}"/config.sub {} \;
  find . -name config.guess -exec cp "${srcdir}"/config.guess {} \;
}

build() {
  cd "${srcdir}"/${_realname}-${pkgver}
  [ -d "${srcdir}"/build-${CARCH} ] && rm -rf "${srcdir}"/build-${CARCH}
  mkdir "${srcdir}"/build-${CARCH}
  cd "${srcdir}"/build-${CARCH}
  cp "${srcdir}"/.mozconfig.${CARCH} ${PWD}/.mozconfig
  export PYTHON=/usr/bin/python2.7.exe
  export MOZCONFIG=${PWD}/.mozconfig
  make -f ../${_realname}-${pkgver}/client.mk configure
  make -f ../${_realname}-${pkgver}/client.mk build
}

check() {
  cd "${srcdir}"/build-${CARCH}
  make check
}

package() {
  cd "${srcdir}"/build-${CARCH}
  make -C mozilla-mingw.${CARCH} package INNER_MAKE_PACKAGE=true
}
