# Maintainer: Ray Donnelly <mingw.android@gmail.com>

# pushd /c/repo/mingw-w64-firefox/src
# PATH=/mingw64/bin:$PATH /mingw64/bin/python2.7.exe $PWD/firefox-39.0/python/virtualenv/virtualenv.py /tmp/test
# PATH=/mingw64/bin:$PATH PYTHONPATH="C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support/setuptools-11.0-py2.py3-none-any.whl;C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support/pip-6.0.6-py2.py3-none-any.whl" PIP_FIND_LINKS=". C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support C:/repo/mingw-w64-firefox/src/firefox-39.0/python/virtualenv/virtualenv_support" PIP_USE_WHEEL=1 PIP_PRE=1 PIP_NO_INDEX=1 C:/msys64t/tmp/test/bin/python2.7.exe -c 'import sys, pip; sys.exit(pip.main(["install", "--ignore-installed"] + sys.argv[1:]))' setuptools pip

_realname=firefox
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=39.0
pkgrel=1
pkgdesc='Mozilla Firefox (mingw-w64)'
groups=("${MINGW_PACKAGE_PREFIX}")
arch=('any')
url='https://www.mozilla.org/firefox/'
license=('MPL2')
makedepends=('unzip'
             'zip'
             "${MINGW_PACKAGE_PREFIX}-yasm")
source=("http://ftp.mozilla.org/pub/mozilla.org/${_realname}/releases/${pkgver}/source/${_realname}-${pkgver}.source.tar.bz2"
        "0001-Allow-MSYS2-shell.patch"
        "0002-Allow-MSYS2-make.patch"
        "0003-Use-PYTHON-env-var.patch"
        "0004-Allow-MSYS2-python.patch"
        "0005-Allow-mingw-w64-python.patch"
        "debugging.patch"
        "mozconfig.x86_64"
        "mozconfig.i686"
        "config.sub"
        "config.guess")
noextract=("${_realname}-${pkgver}.source.tar.bz2")
sha1sums=('32785daee7ddb9da8d7509ef095258fc58fe838e'
          '1c0810fbfd6f336eec81e236c89c6c9ca0e79290'
          'b59591f2ead727f6fcd3836305ece3ed6184544a'
          '2fd8904f036d2515e314b3d7510d8358add298d2'
          '12e2360c2d6abad989dbc996fa4940fd6a6e830e'
          'bd2bb1270373703447db5f0f9bcd6a558621a0f7'
          '60e51c33dd5eeaeaa1c38c7b575d183f27bb61a7'
          '36da1863d7f1f5ea7faa50f773a6dbdda405d7f5'
          '3861e9d68ee67aa2dc6a087158054c29466cd4da'
          '17c4f8628ea435c999be66ee4c2967fdaf3b2955'
          'ffb6644dbad00413c668c833e3f3680d1d73aa53')

prepare() {
  [ -d "${srcdir}"/${_realname}-${pkgver} ] && rm -rf ${_realname}-${pkgver}
  tar -xf "${srcdir}"/${_realname}-${pkgver}.source.tar.bz2 || true
  if [ -d "${srcdir}"/mozilla-beta ]; then
    mv "${srcdir}"/mozilla-beta "${srcdir}"/${_realname}-${pkgver}
  elif [ -d "${srcdir}"/mozilla-release ]; then
    mv "${srcdir}"/mozilla-release "${srcdir}"/${_realname}-${pkgver}
  else
    echo "Can't find sources!"
    exit 1
  fi
  cd "${srcdir}"/${_realname}-${pkgver}
  # Mostly this patch is about msys2-python and mingw-w64-python not
  # working with virtualenv. Really it needs splitting into two, one
  # adding support for each of them. Most of the "is_win or True:"
  # and "is_win and False:" stuff relates to mingw-w64-python and is
  # to be replaced with proper detection and a variable "is_mingw".
  patch -p1 -i "${srcdir}"/0001-Allow-MSYS2-shell.patch
  patch -p1 -i "${srcdir}"/0002-Allow-MSYS2-make.patch
  patch -p1 -i "${srcdir}"/0003-Use-PYTHON-env-var.patch
  patch -p1 -i "${srcdir}"/0004-Allow-MSYS2-python.patch
  patch -p1 -i "${srcdir}"/0005-Allow-mingw-w64-python.patch
  patch -p1 -i "${srcdir}"/debugging.patch

  find . -name config.sub -exec cp "${srcdir}"/config.sub {} \;
  find . -name config.guess -exec cp "${srcdir}"/config.guess {} \;
  (autoconf-2.13 && cd js/src && autoconf-2.13)
}

build() {
  cd "${srcdir}"/${_realname}-${pkgver}
  if [ "${CARCH}" = "i686" ]; then
    _builddir=obj-i686-w64-mingw32
  else
    _builddir=obj-x86_64-w64-mingw32
  fi
  [ -d ${_builddir} ] && rm -rf "${_builddir}"
  mkdir ${_builddir}
  cp "${srcdir}"/mozconfig.${CARCH} ${_builddir}/.mozconfig
  export PYTHON=/usr/bin/python2.7.exe
#  export PYTHON=${MINGW_PREFIX}/bin/python2.7.exe
  export MOZCONFIG=${PWD}/${_builddir}/.mozconfig
  export MIDL=${MINGW_PREFIX}/bin/widl.exe
  export MOZ_TOOLS=${MINGW_PREFIX}

  set |awk '
            BEGIN { _p = 1; }
            $0~/^[^ ]+ \(\)/ { _p = 0; }
            _p == 1
            $0 == "}" { _p = 1; }
            ' |sed -r -e '/^BASH_(ARGC|ARGV|LINENO|SOURCE|VERSINFO)=/d;
                          /^(UID|EUID)=/d;
                          /^(FUNCNAME|GROUPS|PPID|SHELLOPTS|BASHOPTS)=/d;' > ./env-${CARCH}.sh

  make -f client.mk configure
  make -f client.mk build
}

check() {
  cd "${srcdir}"/build-${CARCH}
  make check
}

package() {
  cd "${srcdir}"/build-${CARCH}
  make -C mozilla-mingw.${CARCH} package INNER_MAKE_PACKAGE=true
}
