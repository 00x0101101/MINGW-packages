# Maintainer (MSYS2): Ray Donnelly <mingw.android@gmail.com>

_variant=-static
#_variant=-shared
source "$(dirname ${BASH_SOURCE[0]})"/../mingw-w64-PKGBUILD-common/kde-frameworks5
_kde_f5_init_package "${_variant}" "kidletime"
pkgver=5.3.0
pkgrel=1
arch=('any')
url=('https://projects.kde.org/projects/frameworks/${_basename}')
pkgdesc="Reporting of idle time of user and system (mingw-w64-qt5${_namesuff})"
license=('LGPL')
makedepends=("${MINGW_PACKAGE_PREFIX}-extra-cmake-modules")
depends=()
_kde_f5_add_depends "${_variant}" "${MINGW_PACKAGE_PREFIX}-qt5${_namesuff}" "${MINGW_PACKAGE_PREFIX}-bzip2"
groups=('kf5')
source=("http://download.kde.org/stable/frameworks/${pkgver}/${_basename}-${pkgver}.tar.xz")
md5sums=('f6bd02d851313f4b136b80c105703003')

prepare() {
  cd "${srcdir}"/${_basename}-${pkgver}
}

build() {
  local -a extra_config
  mkdir -p build-${CARCH}${_variant}
  cd build-${CARCH}${_variant}
  if [ "${_variant}" = "-static" ]; then
    extra_config+=( -DBUILD_SHARED_LIBS=NO )
    QT5_PREFIX=${MINGW_PREFIX}/qt5-static
    export PATH=${QT5_PREFIX}/bin:"$PATH"
  else
    QT5_PREFIX=${MINGW_PREFIX}
  fi

  cmake ../${_basename}-${pkgver} \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${QT5_PREFIX} \
    -DLIB_INSTALL_DIR=lib \
    -DECM_MKSPECS_INSTALL_DIR=${QT5_PREFIX} \
    -DQt5_DIR=${QT5_PREFIX}/lib/cmake/Qt5 \
    -DBUILD_TESTING=OFF \
    -DECM_DIR=${MINGW_PREFIX}/share/ECM \
    "${extra_config[@]}" \
    -G'MSYS Makefiles' --debug-output --trace
  make VERBOSE=1
}

package() {
  cd build-${CARCH}${_variant}
  make DESTDIR="${pkgdir}" install
}

# Please leave the following information here until this package builds and works.
return 0

# Need to modify Qt5GuiConfigExtras.cmake, adding at the end, something like:
get_target_property(_libType Qt5::Gui TYPE)
if(_libType STREQUAL "STATIC_LIBRARY" AND CMAKE_HOST_WIN32)
    set(_isExe $<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>)
#   set(_isWin32 $<BOOL:$<TARGET_PROPERTY:WIN32_EXECUTABLE>>)
    set(_isWin32 1)
    # INTERFACE_LINK_LIBRARIES is used to pass a linker flag (-static)
    #                                      and a library (ws2_32)
    set_target_properties(Qt5::Gui PROPERTIES "INTERFACE_LINK_LIBRARIES" "$<$<AND:${_isExe},${_isWin32}>:opengl32;${_qt5Gui_install_prefix}/lib/libqtharfbuzzng.a;${_qt5Gui_install_prefix}/share/qt5/plugins/platforms/libqwindows.a>")
    unset(_isExe)
    unset(_isWin32)
endif()

# Despite linking to libqwindows.a, still get the following error:

# Fails to run the test executable:

---------------------------
kidletime_example
---------------------------
This application failed to start because it could not find or load the Qt platform plugin "windows".

Reinstalling the application may fix this problem.
---------------------------
OK   
---------------------------

# kidletime_example, linked like this doesn't work:
PATH=/mingw64/bin:$PATH g++.exe -static  -march=x86-64 -mtune=generic -O2 -pipe  -std=c++0x -fno-exceptions -Wall -Wextra -Wcast-align -Wchar-subscripts -Wformat-security -Wno-long-long -Wpointer-arith -Wundef -Wnon-virtual-dtor -Woverloaded-virtual -Werror=return-type -O3 -DNDEBUG   -pipe -mwindows \
 "CMakeFiles/kidletime_example.dir/main.cpp.obj" "CMakeFiles/kidletime_example.dir/KIdleTest.cpp.obj" "CMakeFiles/kidletime_example.dir/kidletime_example_automoc.cpp.obj"   -o ../bin/kidletime_example.exe \
  /C/msys64/mingw64/qt5-static/share/qt5/plugins/platforms/libqwindows.a /C/msys64/mingw64/qt5-static/lib/libQt5PlatformSupport.a \
 ../lib/libKF5IdleTime.a /C/msys64/mingw64/qt5-static/lib/libQt5Widgets.a /C/msys64/mingw64/qt5-static/lib/libQt5Gui.a \
 -lopengl32 \
 /C/msys64/mingw64/qt5-static/lib/libqtharfbuzzng.a /C/msys64/mingw64/qt5-static/lib/libQt5Core.a \
 -lws2_32 -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32

# Octopi, linked like this runs fine:
g++ -Wl,-s -static -Wl,-subsystem,windows -mthreads -o bin/octopi.exe object_script.octopi.Release \
-lmingw32 -LC:/msys64/mingw32/qt5-static/lib -lqtmain -lwtsapi32 -lQt5QuickWidgets -lQt5DBus -lnetapi32 -lQt5Xml \
-LC:/msys64/mingw32/qt5-static/share/qt5/qml/QtQuick.2 -lqtquick2plugin -LC:/msys64/mingw32/qt5-static/share/qt5/qml/QtQuick/Controls \
-lqtquickcontrolsplugin -LC:/msys64/mingw32/qt5-static/share/qt5/qml/QtQuick/Window.2 -lwindowplugin \
-LC:/msys64/mingw32/qt5-static/share/qt5/qml/QtQuick/Layouts -lqquicklayoutsplugin \
-LC:/msys64/mingw32/qt5-static/share/qt5/plugins/accessible -lqtaccessiblequick -lqtaccessiblewidgets \
-lQt5Widgets -LC:/msys64/mingw32/qt5-static/share/qt5/plugins/qmltooling -lqmldbg_qtquick2 \
-lQt5Quick -lqmldbg_tcp -lQt5Qml -LC:/msys64/mingw32/qt5-static/share/qt5/plugins/bearer -lqgenericbearer -lqnativewifibearer \
-lQt5Network -ldnsapi -lssl -lcrypto -lcrypt32 \
-LC:/msys64/mingw32/qt5-static/share/qt5/plugins/platforms -lqwindows \
-lwinspool -lshlwapi -lQt5PlatformSupport \
-LC:/msys64/mingw32/qt5-static/share/qt5/plugins/imageformats -lqdds -lqicns -lqico -lqjp2 -ljasper -lqmng -lqtga -lqtiff -lqwbmp -lqwebp -lwebp \
-lQt5Gui -lcomdlg32 -loleaut32 -limm32 -lwinmm -lglu32 -lopengl32 -lgdi32 -lqtharfbuzzng -lQt5Core -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32 
