# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Sebastian Nowicki <sebnow@gmail.com>
# Contributor: Devin Cofer <ranguvar{AT]archlinux[DOT}us>
# Contributor: Tobias Kieslich <tobias@justdreams.de>
# Contributor: Geoffroy Carrier <geoffroy.carrier@aur.archlinux.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Gerardo Exequiel Pozzi <vmlinuz386@yahoo.com.ar>

# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=clang
_mingw_suff=mingw-w64-${CARCH}
pkgname=("${_mingw_suff}-${_realname}-33" "${_mingw_suff}-clang-analyzer-33" "${_mingw_suff}-llvm-33") # "${_mingw_suff}-compiler-rt-33"
pkgver=3.3
pkgrel=1
pkgdesc="LC language family frontend for LLVM (mingw-w64)"
arch=('any')
url="http://llvm.org/"
license=("custom:University of Illinois/NCSA Open Source License")
makedepends=("${_mingw_suff}-gcc" "${_mingw_suff}-pkg-config")
depends=("${_mingw_suff}-gcc")
options=('staticlibs' 'strip')
source=(http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.gz
        http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.gz
        http://llvm.org/releases/$pkgver/compiler-rt-$pkgver.src.tar.gz
        http://llvm.org/releases/$pkgver/test-suite-$pkgver.src.tar.gz
        llvm-3.3-tests-ulimit-mingw32-fix.patch
        llvm-3.3-tests-hack-remove-ocamlopt_executable.patch
        llvm-3.3-hack-dont-call-register_frame-when_SEH.patch)
sha256sums=('68766b1e70d05a25e2f502e997a3cb3937187a3296595cf6e0977d5cd6727578'
             'b1b55de4ab3a57d3e0331a83e0284610191c77d924e3446498d9113d08dfb996'
             '0e2f3180d6316e6c43f064fdd406c5c6515e682c5f31c57c28335b68c7525423'
             '557a94cc8f66d08e003fbcb31070304150174fa9aab0f0b3ad1e2366cfe131c8'
             'e444e4390ceb6280f4e610b2ef39aed68c032adaea5c545dd850c0956ed29bdd'
             '03b87bde0a630ec89f848b05aa4008c3d59616eccfaaad7a87e1980e4dfb98ce'
             'b06c74c0adcab34e4fee1dbf8a02ac67661d59eb1b5adca9b8b2b94d0f1cd180')
prepare() {
  cd "$srcdir/llvm-$pkgver.src"
  [ -d "build-${MINGW_CHOST}" ] && rm -rf "build-${MINGW_CHOST}"
  mkdir "build-${MINGW_CHOST}"
  # At the present, clang must reside inside the LLVM source code tree to build
  # See http://llvm.org/bugs/show_bug.cgi?id=4840
  [ -d tools/clang ] && rm -rf tools/clang
  mv "$srcdir/cfe-$pkgver.src" tools/clang
  [ -d projects/compiler-rt ] && rm -rf projects/compiler-rt
  mv "$srcdir/compiler-rt-$pkgver.src" projects/compiler-rt
#  [ -d projects/test-suite ] && rm -rf projects/test-suite
#  mv "$srcdir/test-suite-$pkgver.src" projects/test-suite

  # Fix docs installation directory
  sed -i 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in

  # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
  # sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

  # Make -flto work; use ld.gold instead of the default linker
  # patch -d tools/clang -Np1 -i "$srcdir/clang-3.3-use-gold-linker.patch"

  # Prevent various ulimit failures on MSYS2.
  patch -p1 -i ${srcdir}/llvm-3.3-tests-ulimit-mingw32-fix.patch
  patch -p1 -i ${srcdir}/llvm-3.3-tests-hack-remove-ocamlopt_executable.patch
  patch -p1 -i ${srcdir}/llvm-3.3-hack-dont-call-register_frame-when_SEH.patch
}

build() {
    cd "$srcdir/llvm-$pkgver.src/build-${MINGW_CHOST}"
	echo 'ac_cv_have_decl_strerror_s=${ac_cv_have_decl_strerror_s=no}' > config.cache

	# Include location of libffi headers in CPPFLAGS
	CPPFLAGS+=" $(pkg-config --cflags libffi)"

    ../configure \
	  -C \
	  --prefix=${MINGW_PREFIX} \
	  --build=${MINGW_CHOST} \
	  --host=${MINGW_CHOST} \
	  --with-sysroot=${MINGW_PREFIX} \
	  --enable-targets=x86,x86_64 \
	  --enable-optimized \
	  --disable-assertions \
	  --disable-pthreads \
	  --with-python=${MINGW_PREFIX}/bin/python2 \
	  --enable-libffi \
	  --enable-docs
	#--enable-shared
	#--enable-embed-stdcxx
	#--enable-libcpp
	#--enable-cxx11
	#
	#--enable-ltdl-install
	#
	#--with-c-include-dir
	#--with-gcc-toolchain
	#--with-default-sysroot
	#--with-binutils-include
	#--with-bug-report-url
    make

}

check() {
        plain "skipping make check..."
#	cd "$srcdir/llvm-$pkgver.src"
#	make check
}

setup() {
	cd "$srcdir/llvm-$pkgver.src/build-${MINGW_CHOST}"
	#make -j1 DESTDIR="$pkgdir" install

	cd "$srcdir/llvm-$pkgver.src/build-${MINGW_CHOST}/tools/clang"
	make -j1 DESTDIR="$destdir/clang" install

	install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/{bin,lib/clang-analyzer}
	for _tool in scan-{build,view}; do
		cp -r $srcdir/llvm-$pkgver.src/tools/clang/tools/$_tool ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/
		ln -s ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/$_tool/$_tool ${destdir}/clang-analyzer${MINGW_PREFIX}/bin/
	done

	# scan-build looks for clang within the same directory
	install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/
	ln -s ${destdir}/clang${MINGW_PREFIX}/bin/clang.exe ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/

	# Relocate man page
	install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/share/man/man1
	mv ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/scan-build.1 \
		${destdir}/clang-analyzer${MINGW_PREFIX}/share/man/man1/

	# Use Python 2
	#sed -i \
	#  -e 's|env python$|&2|' \
	#  -e 's|/usr/bin/python$|&2|' \
	#  "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-view/scan-view" \
	#  "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/set-xcode-analyzer"

	# Compile Python scripts
	python2 -m compileall "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer"
	python2 -O -m compileall "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer"
	install -Dm644 $srcdir/llvm-$pkgver.src/tools/clang/LICENSE.TXT "${destdir}/clang-analyzer${MINGW_PREFIX}/share/licenses/clang-analyzer/LICENSE"
	mv "$srcdir/llvm-$pkgver.src/tools/clang"          "$srcdir/cfe-$pkgver.src"

	cd "$srcdir/llvm-$pkgver.src/build-${MINGW_CHOST}"
	make -j1 DESTDIR="$destdir/llvm" install

	mv "$srcdir/llvm-$pkgver.src/projects/compiler-rt" "$srcdir/compiler-rt-$pkgver.src" 
#	mv "$srcdir/llvm-$pkgver.src/projects/test-suite"  "$srcdir/test-suite-$pkgver.src" 
}

package_clang(){
	pkgdesc="C language family frontend for LLVM"
	depend=("${_mingw_suff}-llvm-33")
	provides=("${_mingw_suff}-clang-33")
	conflicts=("${_mingw_suff}-clang-33")

	mv $destdir/clang/* $pkgdir
}

# package_compiler-rt(){
	# cd ${srcdir}/compiler-rt
	# local ver="$(git rev-parse HEAD)"
	# pkgver="r$(git svn find-rev ${ver})"
# }

package_llvm(){
	pkgdesc="Low Level Virtual Machine"
	depends=("${_mingw_suff}-gcc") # "${_mingw_suff}-compiler-rt"
	provides=("${_mingw_suff}-llvm-33")
	conflicts=("${_mingw_suff}-llvm-33")

	mv $destdir/llvm/* $pkgdir
}

package_clang-analyzer() {
	pkgdesc="A source code analysis framework"
	url="http://clang-analyzer.llvm.org/"
	depends=("${_mingw_suff}-clang-33" "${_mingw_suff}-python2")
	provides=("${_mingw_suff}-clang-analyzer-33")
	conflicts=("${_mingw_suff}-clang-analyzer-33")

	mv $destdir/clang-analyzer/* $pkgdir
}

package_mingw-w64-i686-clang-33(){
	package_clang
}

package_mingw-w64-i686-clang-analyzer-33(){
	package_clang-analyzer
}
# package_mingw-w64-i686-compiler-rt-33(){
# 	package_compiler-rt
# }

package_mingw-w64-i686-llvm-33(){
	package_llvm
}

package_mingw-w64-x86_64-clang-33(){
	package_clang
}

package_mingw-w64-x86_64-clang-analyzer-33(){
	package_clang-analyzer
}

# package_mingw-w64-x86_64-compiler-rt-333(){
# 	package_compiler-rt
# }

package_mingw-w64-x86_64-llvm-33(){
	package_llvm
}
