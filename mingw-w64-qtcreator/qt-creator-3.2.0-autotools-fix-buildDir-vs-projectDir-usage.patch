diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autogenstep.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autogenstep.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autogenstep.cpp	2014-08-18 08:52:02.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autogenstep.cpp	2014-08-23 23:32:23.478337700 +0100
@@ -158,8 +158,9 @@
     ProcessParameters *pp = processParameters();
     pp->setMacroExpander(bc->macroExpander());
     pp->setEnvironment(bc->environment());
-    pp->setWorkingDirectory(bc->buildDirectory().toString());
-    pp->setCommand(QLatin1String("autogen.sh"));
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    pp->setWorkingDirectory(projectDir);
+    pp->setCommand(QLatin1String("./autogen.sh"));
     pp->setArguments(additionalArguments());
     pp->resolveAll();
 
@@ -171,10 +172,10 @@
     BuildConfiguration *bc = buildConfiguration();
 
     // Check whether we need to run autogen.sh
-    const QString buildDir = bc->buildDirectory().toString();
-    const QFileInfo configureInfo(buildDir + QLatin1String("/configure"));
-    const QFileInfo configureAcInfo(buildDir + QLatin1String("/configure.ac"));
-    const QFileInfo makefileAmInfo(buildDir + QLatin1String("/Makefile.am"));
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    const QFileInfo configureInfo(projectDir + QLatin1String("/configure"));
+    const QFileInfo configureAcInfo(projectDir + QLatin1String("/configure.ac"));
+    const QFileInfo makefileAmInfo(projectDir + QLatin1String("/Makefile.am"));
 
     if (!configureInfo.exists()
         || configureInfo.lastModified() < configureAcInfo.lastModified()
@@ -276,8 +277,9 @@
     ProcessParameters param;
     param.setMacroExpander(bc->macroExpander());
     param.setEnvironment(bc->environment());
-    param.setWorkingDirectory(bc->buildDirectory().toString());
-    param.setCommand(QLatin1String("autogen.sh"));
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    param.setWorkingDirectory(projectDir);
+    param.setCommand(QLatin1String("./autogen.sh"));
     param.setArguments(m_autogenStep->additionalArguments());
     m_summaryText = param.summary(displayName());
     emit updateSummary();
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp	2014-08-18 08:52:02.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autoreconfstep.cpp	2014-08-23 23:32:23.495840000 +0100
@@ -157,7 +157,8 @@
     ProcessParameters *pp = processParameters();
     pp->setMacroExpander(bc->macroExpander());
     pp->setEnvironment(bc->environment());
-    pp->setWorkingDirectory(bc->buildDirectory().toString());
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    pp->setWorkingDirectory(projectDir);
     pp->setCommand(QLatin1String("autoreconf"));
     pp->setArguments(additionalArguments());
     pp->resolveAll();
@@ -170,8 +171,8 @@
     BuildConfiguration *bc = buildConfiguration();
 
     // Check whether we need to run autoreconf
-    const QString buildDir = bc->buildDirectory().toString();
-    const QFileInfo configureInfo(buildDir + QLatin1String("/configure"));
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    const QFileInfo configureInfo(projectDir + QLatin1String("/configure"));
 
     if (!configureInfo.exists())
         m_runAutoreconf = true;
@@ -270,7 +271,8 @@
     ProcessParameters param;
     param.setMacroExpander(bc->macroExpander());
     param.setEnvironment(bc->environment());
-    param.setWorkingDirectory(bc->buildDirectory().toString());
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    param.setWorkingDirectory(projectDir);
     param.setCommand(QLatin1String("autoreconf"));
     param.setArguments(m_autoreconfStep->additionalArguments());
     m_summaryText = param.summary(displayName());
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.cpp	2014-08-18 08:52:02.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.cpp	2014-08-23 23:33:55.231989000 +0100
@@ -223,3 +223,18 @@
     // TODO: Should I return something different from Unknown?
     return Unknown;
 }
+
+void AutotoolsBuildConfiguration::setBuildDirectory(const Utils::FileName &directory)
+{
+    if (directory == buildDirectory())
+        return;
+    BuildConfiguration::setBuildDirectory(directory);
+    ProjectExplorer::BuildStepList *bsl = stepList(ProjectExplorer::Constants::BUILDSTEPS_BUILD);
+    foreach (BuildStep *bs, bsl->steps()) {
+        ConfigureStep *cs = qobject_cast<ConfigureStep *>(bs);
+        if (cs) {
+            cs->notifyBuildDirectoryChanged();
+        }
+    }
+}
+
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.h qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.h
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.h	2014-08-18 08:52:02.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.h	2014-08-23 23:34:41.611878500 +0100
@@ -60,6 +60,9 @@
     AutotoolsBuildConfiguration(ProjectExplorer::Target *parent, AutotoolsBuildConfiguration *source);
 
     friend class AutotoolsBuildSettingsWidget;
+
+private:
+    void setBuildDirectory(const Utils::FileName &directory);    
 };
 
 class AutotoolsBuildConfigurationFactory : public ProjectExplorer::IBuildConfigurationFactory
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/configurestep.cpp qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/configurestep.cpp
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/configurestep.cpp	2014-08-18 08:52:02.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/configurestep.cpp	2014-08-23 23:36:56.335986300 +0100
@@ -54,6 +54,23 @@
 const char CONFIGURE_ADDITIONAL_ARGUMENTS_KEY[] = "AutotoolsProjectManager.ConfigureStep.AdditionalArguments";
 const char CONFIGURE_STEP_ID[] = "AutotoolsProjectManager.ConfigureStep";
 
+/////////////////////
+// Helper Function
+/////////////////////
+
+namespace {
+    QString projectDirRelativeToBuildDir(BuildConfiguration *bc) {
+        const QDir buildDir(bc->buildDirectory().toString());
+        QString projDirToBuildDir = buildDir.relativeFilePath(bc->target()->project()->projectDirectory().toString());
+        if (projDirToBuildDir == QLatin1String("")) {
+            return QLatin1String("./");
+        }
+        if (!projDirToBuildDir.endsWith(QLatin1Char('/')))
+            projDirToBuildDir.append(QLatin1Char('/'));
+        return projDirToBuildDir;
+    }
+}
+
 ////////////////////////////////
 // ConfigureStepFactory Class
 ////////////////////////////////
@@ -159,7 +176,7 @@
     pp->setMacroExpander(bc->macroExpander());
     pp->setEnvironment(bc->environment());
     pp->setWorkingDirectory(bc->buildDirectory().toString());
-    pp->setCommand(QLatin1String("configure"));
+    pp->setCommand(projectDirRelativeToBuildDir(bc) + QLatin1String("configure"));
     pp->setArguments(additionalArguments());
     pp->resolveAll();
 
@@ -171,9 +188,9 @@
     BuildConfiguration *bc = buildConfiguration();
 
     //Check whether we need to run configure
-    QString buildDir = bc->buildDirectory().toString();
-    const QFileInfo configureInfo(buildDir +QLatin1String("/configure"));
-    const QFileInfo configStatusInfo(buildDir + QLatin1String("/config.status"));
+    const QString projectDir(bc->target()->project()->projectDirectory().toString());
+    const QFileInfo configureInfo(projectDir + QLatin1String("/configure"));
+    const QFileInfo configStatusInfo(projectDir + QLatin1String("/config.status"));
 
     if (!configStatusInfo.exists()
         || configStatusInfo.lastModified() < configureInfo.lastModified()) {
@@ -212,6 +229,11 @@
     emit additionalArgumentsChanged(list);
 }
 
+void ConfigureStep::notifyBuildDirectoryChanged()
+{
+    emit buildDirectoryChanged();
+}
+
 QString ConfigureStep::additionalArguments() const
 {
     return m_additionalArguments;
@@ -255,6 +277,8 @@
             configureStep, SLOT(setAdditionalArguments(QString)));
     connect(configureStep, SIGNAL(additionalArgumentsChanged(QString)),
             this, SLOT(updateDetails()));
+    connect(configureStep, SIGNAL(buildDirectoryChanged(void)),
+            this, SLOT(updateDetails()));
 }
 
 QString ConfigureStepConfigWidget::displayName() const
@@ -275,7 +299,7 @@
     param.setMacroExpander(bc->macroExpander());
     param.setEnvironment(bc->environment());
     param.setWorkingDirectory(bc->buildDirectory().toString());
-    param.setCommand(QLatin1String("configure"));
+    param.setCommand(projectDirRelativeToBuildDir(bc) + QLatin1String("configure"));
     param.setArguments(m_configureStep->additionalArguments());
     m_summaryText = param.summary(displayName());
     emit updateSummary();
diff -urN qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/configurestep.h qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/configurestep.h
--- qt-creator-opensource-src-3.2.0.orig/src/plugins/autotoolsprojectmanager/configurestep.h	2014-08-18 08:52:02.000000000 +0100
+++ qt-creator-opensource-src-3.2.0/src/plugins/autotoolsprojectmanager/configurestep.h	2014-08-23 23:37:13.568174500 +0100
@@ -103,9 +103,11 @@
 
 public slots:
     void setAdditionalArguments(const QString &list);
+    void notifyBuildDirectoryChanged(void);
 
 signals:
     void additionalArgumentsChanged(const QString &);
+    void buildDirectoryChanged(void);
 
 protected:
     ConfigureStep(ProjectExplorer::BuildStepList *bsl, ConfigureStep *bs);
