diff -Naur orig/LiteEditor/app.cpp patched/LiteEditor/app.cpp
--- orig/LiteEditor/app.cpp	2014-09-06 02:28:43.965400000 +0400
+++ patched/LiteEditor/app.cpp	2014-09-06 02:35:37.794400000 +0400
@@ -491,18 +491,18 @@
     if(!wxXmlResource::Get()->Load(DoFindMenuFile(ManagerST::Get()->GetInstallDir(), wxT("2.0")))) return false;
 
     // keep the startup directory
-    ManagerST::Get()->SetStarupDirectory(::wxGetCwd());
+    ManagerST::Get()->SetStartupDirectory(::wxGetCwd());
 
     // set the performance output file name
     PERF_OUTPUT(wxString::Format(wxT("%s/codelite.perf"), wxGetCwd().c_str()).mb_str(wxConvUTF8));
 
     // Initialize the configuration file locater
-    ConfFileLocator::Instance()->Initialize(ManagerST::Get()->GetInstallDir(), ManagerST::Get()->GetStarupDirectory());
+    ConfFileLocator::Instance()->Initialize(ManagerST::Get()->GetInstallDir(), ManagerST::Get()->GetStartupDirectory());
 
     Manager* mgr = ManagerST::Get();
 
     // set the CTAGS_REPLACEMENT environment variable
-    wxSetEnv(wxT("CTAGS_REPLACEMENTS"), ManagerST::Get()->GetStarupDirectory() + wxT("/ctags.replacements"));
+    wxSetEnv(wxT("CTAGS_REPLACEMENTS"), ManagerST::Get()->GetStartupDirectory() + wxT("/ctags.replacements"));
 
     long style = wxSIMPLE_BORDER;
 #if defined(__WXMSW__) || defined(__WXGTK__)
@@ -664,7 +664,7 @@
     }
 
     wxLogMessage(wxString::Format(wxT("Install path: %s"), ManagerST::Get()->GetInstallDir().c_str()));
-    wxLogMessage(wxString::Format(wxT("Startup Path: %s"), ManagerST::Get()->GetStarupDirectory().c_str()));
+    wxLogMessage(wxString::Format(wxT("Startup Path: %s"), ManagerST::Get()->GetStartupDirectory().c_str()));
 
 #ifdef __WXGTK__
     // Needed on GTK
@@ -740,12 +740,12 @@
             }
 
             if(files.IsEmpty() == false) {
-                Mkdir(ManagerST::Get()->GetStarupDirectory() + wxT("/ipc"));
+                Mkdir(ManagerST::Get()->GetStartupDirectory() + wxT("/ipc"));
 
                 wxString file_name, tmp_file;
-                tmp_file << ManagerST::Get()->GetStarupDirectory() << wxT("/ipc/command.msg.tmp");
+                tmp_file << ManagerST::Get()->GetStartupDirectory() << wxT("/ipc/command.msg.tmp");
 
-                file_name << ManagerST::Get()->GetStarupDirectory() << wxT("/ipc/command.msg");
+                file_name << ManagerST::Get()->GetStartupDirectory() << wxT("/ipc/command.msg");
 
                 // write the content to a temporary file, once completed,
                 // rename the file to the actual file name
diff -Naur orig/LiteEditor/fileview.cpp patched/LiteEditor/fileview.cpp
--- orig/LiteEditor/fileview.cpp	2014-09-06 02:28:44.885800000 +0400
+++ patched/LiteEditor/fileview.cpp	2014-09-06 02:35:51.210400000 +0400
@@ -1202,7 +1202,7 @@
                 desc = desc.Trim().Trim(false);
 
                 if ( newName.IsEmpty() == false ) {
-                    wxString tmplateDir = ManagerST::Get()->GetStarupDirectory() + wxT ( "/templates/projects/" ) + newName + wxT ( "/" );
+                    wxString tmplateDir = ManagerST::Get()->GetStartupDirectory() + wxT ( "/templates/projects/" ) + newName + wxT ( "/" );
                     Mkdir ( tmplateDir );
 
                     Project newProj( *proj );
diff -Naur orig/LiteEditor/frame.cpp patched/LiteEditor/frame.cpp
--- orig/LiteEditor/frame.cpp	2014-09-06 02:28:44.901400000 +0400
+++ patched/LiteEditor/frame.cpp	2014-09-06 02:36:35.077600000 +0400
@@ -678,7 +678,7 @@
     JobQueueSingleton::Instance()->Start(6);
 
     // the single instance job is a presisstent job, so the pool will contain only 4 available threads
-    JobQueueSingleton::Instance()->PushJob(new SingleInstanceThreadJob(this, ManagerST::Get()->GetStarupDirectory()));
+    JobQueueSingleton::Instance()->PushJob(new SingleInstanceThreadJob(this, ManagerST::Get()->GetStartupDirectory()));
 
     // start the editor creator thread
     m_timer = new wxTimer(this, FrameTimerId);
@@ -895,7 +895,7 @@
     // we show splash only when using Release builds of codelite
     if(inf.GetFlags() & CL_SHOW_SPLASH) {
         wxBitmap bitmap;
-        wxString splashName(ManagerST::Get()->GetStarupDirectory() + wxT("/images/splashscreen.png"));
+        wxString splashName(ManagerST::Get()->GetStartupDirectory() + wxT("/images/splashscreen.png"));
         if(bitmap.LoadFile(splashName, wxBITMAP_TYPE_PNG)) {
             wxString mainTitle = CODELITE_VERSION_STR;
             clMainFrame::m_splashScreen = new clSplashScreen(NULL, bitmap);
@@ -970,7 +970,7 @@
 
     // initialize debugger configuration tool
     DebuggerConfigTool::Get()->Load(wxT("config/debuggers.xml"), wxT("5.4"));
-    WorkspaceST::Get()->SetStartupDir(ManagerST::Get()->GetStarupDirectory());
+    WorkspaceST::Get()->SetStartupDir(ManagerST::Get()->GetStartupDirectory());
 
 #if wxCHECK_VERSION(2, 9, 5)
     m_mgr.GetArtProvider()->SetMetric(wxAUI_DOCKART_PANE_BORDER_SIZE, 0);
@@ -3189,7 +3189,7 @@
     long updatePaths(1);
 
     wxLogMessage(wxString::Format(wxT("Install path: %s"), ManagerST::Get()->GetInstallDir().c_str()));
-    wxLogMessage(wxString::Format(wxT("Startup Path: %s"), ManagerST::Get()->GetStarupDirectory().c_str()));
+    wxLogMessage(wxString::Format(wxT("Startup Path: %s"), ManagerST::Get()->GetStartupDirectory().c_str()));
     wxLogMessage("Using " + wxStyledTextCtrl::GetLibraryVersionInfo().ToString());
     if(::clIsCygwinEnvironment()) {
         wxLogMessage("Running under Cygwin environment");
@@ -3501,7 +3501,7 @@
     /*
     Manager *mgr = ManagerST::Get();
     //load the template
-    wxFileName fn(mgr->GetStarupDirectory(), wxT("index.html"));
+    wxFileName fn(mgr->GetStartupDirectory(), wxT("index.html"));
     wxFFile file(fn.GetFullPath(), wxT("r"));
     if (!file.IsOpened()) {
         return;
@@ -3513,7 +3513,7 @@
     file.Close();
 
     //replace $(InstallPath)
-    content.Replace(wxT("$(InstallPath)"), mgr->GetStarupDirectory());
+    content.Replace(wxT("$(InstallPath)"), mgr->GetStartupDirectory());
 
     //replace the $(FilesTable) & $(WorkspaceTable)
     wxString workspaceTable = CreateWorkspaceTable();
diff -Naur orig/LiteEditor/manager.cpp patched/LiteEditor/manager.cpp
--- orig/LiteEditor/manager.cpp	2014-09-06 02:28:45.260200000 +0400
+++ patched/LiteEditor/manager.cpp	2014-09-06 02:36:55.482400000 +0400
@@ -428,7 +428,7 @@
 #ifdef __WXMSW__
     // Under Windows, and in order to avoid locking the directory set the working directory back to the start up
     // directory
-    wxSetWorkingDirectory(GetStarupDirectory());
+    wxSetWorkingDirectory(GetStartupDirectory());
 #endif
 
     /////////////////////////////////////////////////////////////////
diff -Naur orig/LiteEditor/manager.h patched/LiteEditor/manager.h
--- orig/LiteEditor/manager.h	2014-09-06 02:28:45.260200000 +0400
+++ patched/LiteEditor/manager.h	2014-09-06 02:37:15.029200000 +0400
@@ -148,10 +148,10 @@
         m_originalCwd = path;
     }
 
-    const wxString &GetStarupDirectory() const {
+    const wxString &GetStartupDirectory() const {
         return m_startupDir;
     }
-    void SetStarupDirectory(const wxString &path) {
+    void SetStartupDirectory(const wxString &path) {
         m_startupDir = path;
     }
 
diff -Naur orig/LiteEditor/pluginmanager.cpp patched/LiteEditor/pluginmanager.cpp
--- orig/LiteEditor/pluginmanager.cpp	2014-09-06 02:28:45.509800000 +0400
+++ patched/LiteEditor/pluginmanager.cpp	2014-09-06 02:37:35.933200000 +0400
@@ -351,7 +351,7 @@
     return false;
 }
 
-wxString PluginManager::GetStartupDirectory() const { return ManagerST::Get()->GetStarupDirectory(); }
+wxString PluginManager::GetStartupDirectory() const { return ManagerST::Get()->GetStartupDirectory(); }
 
 void PluginManager::AddProject(const wxString& path) { ManagerST::Get()->AddProject(path); }
 
diff -Naur orig/LiteEditor/pluginmgrdlg.cpp patched/LiteEditor/pluginmgrdlg.cpp
--- orig/LiteEditor/pluginmgrdlg.cpp	2014-09-06 02:28:45.509800000 +0400
+++ patched/LiteEditor/pluginmgrdlg.cpp	2014-09-06 02:37:48.584800000 +0400
@@ -152,7 +152,7 @@
         } else {
             status = wxT("<img src=\"$(InstallPath)/images/plugin_not_ok.png\" > </img>");
         }
-        status.Replace(wxT("$(InstallPath)"), ManagerST::Get()->GetStarupDirectory());
+        status.Replace(wxT("$(InstallPath)"), ManagerST::Get()->GetStartupDirectory());
 
         content << wxT("<td ALIGN=\"LEFT\" ><font size=\"2\" face=\"Verdana\">") << status << wxT("</font></td>");
         content << wxT("</tr>");
