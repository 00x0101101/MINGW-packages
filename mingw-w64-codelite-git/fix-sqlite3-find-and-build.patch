--- codelite/CMakeLists.txt.orig	2015-03-11 00:04:27.169200000 +0300
+++ codelite/CMakeLists.txt	2015-03-11 00:05:10.755600000 +0300
@@ -496,7 +496,7 @@
     add_definitions( -mmacosx-version-min=10.8 )
 endif()
 
-if(APPLE)
+if(NOT SQLITE3_FOUND)
     # On Linux, we use the distro's libsqlite3
     add_subdirectory(sqlite3)
 endif()
@@ -574,8 +574,11 @@
     if ( USE_PCH )
         add_dependencies(sqlite3lib ${CL_PCH_TARGET})
     endif ( USE_PCH )
-    add_dependencies(wxsqlite3 sqlite3lib)
 endif()
+
+if(NOT SQLITE3_FOUND)
+    add_dependencies(wxsqlite3 sqlite3lib)
+endif()
 
 add_dependencies(databaselayersqlite wxsqlite3)
 add_dependencies(wxshapeframework wxsqlite3)
--- codelite/cmake/Modules/FindSqlite3.cmake.orig	2015-12-24 15:02:52.639852500 +0300
+++ codelite/cmake/Modules/FindSqlite3.cmake	2015-12-24 15:07:28.933929700 +0300
@@ -1,18 +1,21 @@
-if(UNIX AND NOT APPLE)
+if(NOT APPLE)
     find_library(SQLITE3_LIBRARY
-                 NAMES libsqlite3.so
+                 NAMES libsqlite3.so sqlite3
                  HINTS
-                 /usr/local/lib
-                 /usr/lib
-                 /usr/lib/x86_64-linux-gnu
-                 /usr/lib/i386-linux-gnu
+                 ENV SQLITE3DIR
+                 PATH_SUFFIXES lib lib/x86_64-linux-gnu lib/i386-linux-gnu
+                 PATHS
+                 /usr/local
+                 /usr
                  )
                  
     find_path(SQLITE3_INCLUDE_DIR NAMES sqlite3.h
               HINTS 
-              /usr/local/include
-              /usr/include
-              /usr/include/sqlite3
+              ENV SQLITE3DIR
+              PATH_SUFFIXES include/sqlite3 include
+              PATHS
+              /usr/local
+              /usr
               )
     if (SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY)
        set(SQLITE3_FOUND TRUE)
--- codelite/sdk/databaselayer/CMakeLists.txt.orig	2015-12-24 15:15:22.810929700 +0300
+++ codelite/sdk/databaselayer/CMakeLists.txt	2015-12-24 15:16:23.103929700 +0300
@@ -12,7 +12,7 @@
 include( "${wxWidgets_USE_FILE}" )
 
 # Include paths
-include_directories(./include/wx/dblayer/include src/sqlite3)
+include_directories(./include/wx/dblayer/include ${SQLITE3_INCLUDE_DIR})
 
 if ( USE_PCH )
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -include ${CL_PCH_FILE} -Winvalid-pch ")
@@ -60,7 +60,7 @@
 
 # Define the output
 add_library(databaselayersqlite SHARED ${SRCS} ${MYSQL_SRCS})
-target_link_libraries(databaselayersqlite ${LINKER_OPTIONS} ${wxWidgets_LIBRARIES})
+target_link_libraries(databaselayersqlite ${LINKER_OPTIONS} ${wxWidgets_LIBRARIES} -L"${CL_LIBPATH}" ${SQLITE3_LIBRARY})
 
 if(APPLE)
     install(TARGETS databaselayersqlite DESTINATION ${CMAKE_BINARY_DIR}/codelite.app/Contents/MacOS/)
--- codelite/CodeLite/CMakeLists.txt.orig	2015-12-24 15:15:22.810929700 +0300
+++ codelite/CodeLite/CMakeLists.txt	2015-12-24 15:16:23.103929700 +0300
@@ -100,16 +100,16 @@
 
 # Define the output
 add_library(libcodelite SHARED ${SRCS})
-if (UNIX AND NOT APPLE )
+if ( NOT APPLE )
     target_link_libraries(libcodelite 
                          ${LINKER_OPTIONS} 
                          ${wxWidgets_LIBRARIES} 
                          -L"${CL_LIBPATH}" 
                          ${SQLITE3_LIBRARY}
                          wxsqlite3 
                          ${LIBSSH_LIB} 
                          ${ADDITIONAL_LIBRARIES})
-else (UNIX AND NOT APPLE)
+else ( NOT APPLE)
     target_link_libraries(libcodelite 
                           ${LINKER_OPTIONS} 
                           ${wxWidgets_LIBRARIES} 
