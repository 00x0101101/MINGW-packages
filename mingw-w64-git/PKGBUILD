# Maintainer: Martell Malone <martellmalone@gmail.com>

_realname=git

pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.9.4
pkgrel=1
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
url="http://git-scm.com/"
license=('GPL2')

makedepends=('python2' 'less' 'openssh' 'rsync')

depends=("${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-expat>=2.0"
         "${MINGW_PACKAGE_PREFIX}-openssl" 
         "${MINGW_PACKAGE_PREFIX}-tcl"
         "perl-Error"
         "perl>=5.14.0"
         "perl-Authen-SASL"
         "perl-libwww"
         "perl-MIME-tools"
         "perl-Net-SMTP-SSL"
         "perl-TermReadKey"
         "winpty-git")

options=(!libtool strip staticlibs)

_sillyname=$pkgver.msysgit.1

source=("https://github.com/msysgit/git/archive/v$_sillyname.tar.gz"
        "0001-Don-t-redefine-_ReadWriteBarrier-in-malloc.c.h.patch"
        "0002-Undefine-FORCEINLINE-on-MinGW-w64-in-malloc.c.h.patch"
        "0003-Fix-BASIC_LDFLAGS-and-COMPAT_CFLAGS-for-64bit-MinGW-.patch"
        "0004-Also-look-in-winsock2.h-for-sockaddr_storage-and-loo.patch"
        "0005-Don-t-redefine-some-things-MinGW-w64-provides.patch"
        "0006-Include-ntdef.h-on-MinGW-w64-for-REPARSE_DATA_BUFFER.patch"
        "0007-Include-winsock2.h-and-not-netdb.h-on-MinGW-w64.patch"
        "0008-fix-mingw64-compat-wide-char.patch"
        "0009-fix-fork-for-mingw64.patch"
        "0010-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch"
        "0011-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch"
        "0012-Use-system-dirent.h-on-MinGW-w64.patch"
        "0013-Remove-custom-pthread-layer.patch"
        "0014-Do-not-compile-dirent-on-mingw64.patch"
        "0015-Alter-fscache-for-mingw64.patch")

md5sums=('SKIP'
         'cd1574d3529aac3f0c9f4194939ac23f'
         '2383167c26c29fe7af9b3c73758a8b55'
         '04f800e290884b8d4659f5ebdc9456ca'
         '3e986d42aa12f0b54c59d02638aa4068'
         '14ff828b1d7c771d2da2977dbb018f09'
         'b2a58b49e186aa43758584b77a8b47e1'
         '970e1ee0021779dd646a81536d42bcef'
         '62b8a45fa280082bb73be75a82aa44c7'
         'fd874a1c65f2e2040d486054e46d252c'
         '43d160e878841cb5642683a060c39c1f'
         '157fb4de7db3b3b53025c103780da2f2'
         '1aacf732e02da4cb6604b4496ba24ff9'
         'c6a4066fb670e95ed102b543e7d67c01'
         'c594da89c1d029abdc2d85eb61fc6bea'
         '185c2096bf376b056445d57d92dbe3a0')

prepare() {

  export PYTHON_PATH='/usr/bin/python2'
  cd "$srcdir/$_realname-$_sillyname"

  patch -p1 < "${srcdir}"/0001-Don-t-redefine-_ReadWriteBarrier-in-malloc.c.h.patch
  patch -p1 < "${srcdir}"/0002-Undefine-FORCEINLINE-on-MinGW-w64-in-malloc.c.h.patch
  patch -p1 < "${srcdir}"/0003-Fix-BASIC_LDFLAGS-and-COMPAT_CFLAGS-for-64bit-MinGW-.patch
  patch -p1 < "${srcdir}"/0004-Also-look-in-winsock2.h-for-sockaddr_storage-and-loo.patch
  patch -p1 < "${srcdir}"/0005-Don-t-redefine-some-things-MinGW-w64-provides.patch
  patch -p1 < "${srcdir}"/0006-Include-ntdef.h-on-MinGW-w64-for-REPARSE_DATA_BUFFER.patch
  patch -p1 < "${srcdir}"/0007-Include-winsock2.h-and-not-netdb.h-on-MinGW-w64.patch
  patch -p1 < "${srcdir}"/0008-fix-mingw64-compat-wide-char.patch
  patch -p1 < "${srcdir}"/0009-fix-fork-for-mingw64.patch
  patch -p1 < "${srcdir}"/0010-Use-GIT_CHECK_FUNC-for-socket-and-basename.patch
  patch -p1 < "${srcdir}"/0011-Use-GIT_CHECK_FUNC-for-regcomp-regex.patch
  patch -p1 < "${srcdir}"/0012-Use-system-dirent.h-on-MinGW-w64.patch
  patch -p1 < "${srcdir}"/0013-Remove-custom-pthread-layer.patch
  patch -p1 < "${srcdir}"/0014-Do-not-compile-dirent-on-mingw64.patch
  patch -p1 < "${srcdir}"/0015-Alter-fscache-for-mingw64.patch

  autoreconf -fi
}

build() {

  export PYTHON_PATH='/usr/bin/python2'
  cd "$srcdir/$_realname-$_sillyname"
  
  ./configure \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --prefix=${MINGW_PREFIX} \
    --libexecdir=${MINGW_PREFIX} \
    --with-editor=vim \
    --with-shell=/usr/bin/sh \
    --with-perl=/usr/bin/perl \
    --htmldir=${MINGW_PREFIX}/share/doc/git/html \
    --mandir=${MINGW_PREFIX}/share/man \
    --with-curl \
    --with-openssl \
    --with-expat \
    --with-iconv

  make INSTALLDIRS=vendor -j1 all V=1
  make -C contrib/subtree prefix=/usr all V=1

}

package() {

  # winpty-git script to invoke console
  mkdir -p "${pkgdir}${MINGW_PREFIX}/bin"
  _exename="git"
  echo "#!/usr/bin/env bash" > "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"
  echo '/usr/bin/winpty "$( dirname ${BASH_SOURCE[0]} )/'${_exename}'.exe" "$@"' >> "${pkgdir}${MINGW_PREFIX}/bin/${_exename}"

  export PYTHON_PATH='/usr/bin/python2'
  cd "$srcdir/$_realname-$_sillyname"
  make INSTALLDIRS=vendor DESTDIR="$pkgdir" install

}
