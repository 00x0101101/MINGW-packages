--- configure.ac.orig	2014-10-26 19:46:38.327260000 +0000
+++ configure.ac	2014-10-26 20:26:20.580767800 +0000
@@ -103,16 +103,16 @@
  fi)])# GIT_PARSE_WITH_SET_MAKE_VAR
 
 #
-# GIT_CHECK_FUNC(FUNCTION, IFTRUE, IFFALSE)
-# -----------------------------------------
+# GIT_CHECK_FUNC(FUNCTION, SEARCH_LIBS, IFTRUE, IFFALSE)
+# ------------------------------------------------------
 # Similar to AC_CHECK_FUNC, but on systems that do not generate
 # warnings for missing prototypes (e.g. FreeBSD when compiling without
 # -Wall), it does not work.  By looking for function definition in
 # libraries, this problem can be worked around.
 AC_DEFUN([GIT_CHECK_FUNC],[AC_CHECK_FUNC([$1],[
-  AC_SEARCH_LIBS([$1],,
-  [$2],[$3])
-],[$3])])
+  AC_SEARCH_LIBS([$1],[$2],
+  [$3],[$4])
+],[$4])])
 
 #
 # GIT_STASH_FLAGS(BASEPATH_VAR)
@@ -790,7 +790,7 @@
 #
 # Define NO_IPV6 if you lack IPv6 support and getaddrinfo().
 AC_CHECK_TYPE([struct addrinfo],[
- GIT_CHECK_FUNC([getaddrinfo],
+ GIT_CHECK_FUNC([getaddrinfo],,
   [NO_IPV6=],
   [NO_IPV6=YesPlease])
 ],[NO_IPV6=YesPlease],[
@@ -920,13 +920,13 @@
 GIT_CONF_SUBST([CHARSET_LIB])
 #
 # Define NO_STRCASESTR if you don't have strcasestr.
-GIT_CHECK_FUNC(strcasestr,
+GIT_CHECK_FUNC(strcasestr,,
 [NO_STRCASESTR=],
 [NO_STRCASESTR=YesPlease])
 GIT_CONF_SUBST([NO_STRCASESTR])
 #
 # Define NO_FNMATCH if you don't have fnmatch
-GIT_CHECK_FUNC(fnmatch,
+GIT_CHECK_FUNC(fnmatch,,
 [NO_FNMATCH=],
 [NO_FNMATCH=YesPlease])
 GIT_CONF_SUBST([NO_FNMATCH])
@@ -954,13 +954,13 @@
 GIT_CONF_SUBST([NO_FNMATCH_CASEFOLD])
 #
 # Define NO_MEMMEM if you don't have memmem.
-GIT_CHECK_FUNC(memmem,
+GIT_CHECK_FUNC(memmem,,
 [NO_MEMMEM=],
 [NO_MEMMEM=YesPlease])
 GIT_CONF_SUBST([NO_MEMMEM])
 #
 # Define NO_STRLCPY if you don't have strlcpy.
-GIT_CHECK_FUNC(strlcpy,
+GIT_CHECK_FUNC(strlcpy,,
 [NO_STRLCPY=],
 [NO_STRLCPY=YesPlease])
 GIT_CONF_SUBST([NO_STRLCPY])
@@ -974,37 +974,37 @@
 GIT_CONF_SUBST([NO_UINTMAX_T])
 #
 # Define NO_STRTOUMAX if you don't have strtoumax in the C library.
-GIT_CHECK_FUNC(strtoumax,
+GIT_CHECK_FUNC(strtoumax,,
 [NO_STRTOUMAX=],
 [NO_STRTOUMAX=YesPlease])
 GIT_CONF_SUBST([NO_STRTOUMAX])
 #
 # Define NO_SETENV if you don't have setenv in the C library.
-GIT_CHECK_FUNC(setenv,
+GIT_CHECK_FUNC(setenv,,
 [NO_SETENV=],
 [NO_SETENV=YesPlease])
 GIT_CONF_SUBST([NO_SETENV])
 #
 # Define NO_UNSETENV if you don't have unsetenv in the C library.
-GIT_CHECK_FUNC(unsetenv,
+GIT_CHECK_FUNC(unsetenv,,
 [NO_UNSETENV=],
 [NO_UNSETENV=YesPlease])
 GIT_CONF_SUBST([NO_UNSETENV])
 #
 # Define NO_MKDTEMP if you don't have mkdtemp in the C library.
-GIT_CHECK_FUNC(mkdtemp,
+GIT_CHECK_FUNC(mkdtemp,,
 [NO_MKDTEMP=],
 [NO_MKDTEMP=YesPlease])
 GIT_CONF_SUBST([NO_MKDTEMP])
 #
 # Define NO_MKSTEMPS if you don't have mkstemps in the C library.
-GIT_CHECK_FUNC(mkstemps,
+GIT_CHECK_FUNC(mkstemps,,
 [NO_MKSTEMPS=],
 [NO_MKSTEMPS=YesPlease])
 GIT_CONF_SUBST([NO_MKSTEMPS])
 #
 # Define NO_INITGROUPS if you don't have initgroups in the C library.
-GIT_CHECK_FUNC(initgroups,
+GIT_CHECK_FUNC(initgroups,,
 [NO_INITGROUPS=],
 [NO_INITGROUPS=YesPlease])
 GIT_CONF_SUBST([NO_INITGROUPS])
