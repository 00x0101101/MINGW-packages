--- x86_64/qtbase/src/widgets/dialogs/qwizard_win.cpp.orig	2015-02-17 04:56:39.000000000 +0000
+++ x86_64/qtbase/src/widgets/dialogs/qwizard_win.cpp	2015-06-26 12:50:04.817655600 +0100
@@ -288,7 +288,8 @@
         // The dynamic property takes effect when creating the platform window.
         window->setProperty("_q_windowsCustomMargins", customMarginsV);
         // If a platform window exists, change via native interface.
-        if (QPlatformWindow *platformWindow = window->handle()) {
+        if (QPlatformWindow *platformWindow = window->handle()
+            && QGuiApplication::platformNativeInterface()) {
             QGuiApplication::platformNativeInterface()->
                 setWindowProperty(platformWindow, QStringLiteral("WindowsCustomMargins"),
                                   customMarginsV);
@@ -666,6 +667,8 @@
 // wizard is a child window.
 HDC QVistaHelper::backingStoreDC(const QWidget *wizard, QPoint *offset)
 {
+    if (!QGuiApplication::platformNativeInterface())
+        return static_cast<HDC>0;
     HDC hdc = static_cast<HDC>(QGuiApplication::platformNativeInterface()->nativeResourceForBackingStore(QByteArrayLiteral("getDC"), wizard->backingStore()));
     *offset = QPoint(0, 0);
     if (!wizard->windowHandle())
@@ -680,7 +683,7 @@
     // Do not use winId() as this enforces native children of the parent
     // widget when called before show() as happens when calling setWizardStyle().
     if (QWindow *window = wizard->windowHandle())
-        if (window->handle())
+        if (window->handle() && QGuiApplication::platformNativeInterface())
             if (void *vHwnd = QGuiApplication::platformNativeInterface()->nativeResourceForWindow(QByteArrayLiteral("handle"), window))
                 return static_cast<HWND>(vHwnd);
     qWarning().nospace() << "Failed to obtain HWND for wizard.";
--- x86_64/qtbase/src/widgets/dialogs/qmessagebox.cpp.orig	2015-02-17 04:56:39.000000000 +0000
+++ x86_64/qtbase/src/widgets/dialogs/qmessagebox.cpp	2015-06-26 12:52:31.468777900 +0100
@@ -68,7 +68,8 @@
 #if defined(Q_OS_WIN) && !defined(Q_OS_WINRT)
 HMENU qt_getWindowsSystemMenu(const QWidget *w)
 {
-    if (QWindow *window = QApplicationPrivate::windowForWidget(w))
+    if (QWindow *window = QApplicationPrivate::windowForWidget(w)
+        && QGuiApplication::platformNativeInterface())
         if (void *handle = QGuiApplication::platformNativeInterface()->nativeResourceForWindow("handle", window))
             return GetSystemMenu(reinterpret_cast<HWND>(handle), false);
     return 0;
