# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=opencv
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.4.10
pkgrel=1
pkgdesc="Open Source Computer Vision Library (mingw-w64)"
arch=('any')
url="http://opencv.org/"
depends=(#"${MINGW_PACKAGE_PREFIX}-gst-plugins-base0.10"
        "${MINGW_PACKAGE_PREFIX}-libjpeg"
        "${MINGW_PACKAGE_PREFIX}-libpng"
        "${MINGW_PACKAGE_PREFIX}-libtiff"
        "${MINGW_PACKAGE_PREFIX}-jasper"
        "${MINGW_PACKAGE_PREFIX}-ffmpeg"
        "${MINGW_PACKAGE_PREFIX}-openexr"
        "${MINGW_PACKAGE_PREFIX}-intel-tbb"
        "${MINGW_PACKAGE_PREFIX}-zlib"
        #"${MINGW_PACKAGE_PREFIX}-qt5"
        #"${MINGW_PACKAGE_PREFIX}-gtkglext"
        #"${MINGW_PACKAGE_PREFIX}-gtk2"
        )
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
            #"${MINGW_PACKAGE_PREFIX}-qt5"
            "${MINGW_PACKAGE_PREFIX}-eigen3"
            "${MINGW_PACKAGE_PREFIX}-python2-numpy"
            "${MINGW_PACKAGE_PREFIX}-vtk"
            )
optdepends=("${MINGW_PACKAGE_PREFIX}-eigen3"
            "${MINGW_PACKAGE_PREFIX}-python2-numpy: Python 2.x interface"
            "${MINGW_PACKAGE_PREFIX}-vtk: opencv_viz module")
source=(#"http://downloads.sourceforge.net/opencvlibrary/${_realname}-$pkgver.zip"
        https://github.com/Itseez/opencv/archive/$pkgver.tar.gz
        'mingw-w64-cmake.patch'
        'free-tls-keys-on-dll-unload.patch'
        'solve_deg3-underflow.patch')
md5sums=('3346a59310d788d3845f4fd6043a108a'
         '3b4bc1c4b03c5c8eb1a69aaf7a37a12c'
         '91fcecdc23a870cafad6f51c2a45e647'
         'ae03a59cf1202d5eafa94c2aac419ae6')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  patch -Np1 -i "$srcdir/mingw-w64-cmake.patch"
  patch -Np1 -i "$srcdir/free-tls-keys-on-dll-unload.patch"
  patch -Np1 -i "$srcdir/solve_deg3-underflow.patch"
}

build() {
  # SSE only available from Pentium 3 onwards (i686 is way older)
  [[ "$CARCH" = 'i686' ]] && {
    _cmakeopts=('-D ENABLE_SSE=OFF'
      '-DENABLE_SSE2=OFF'
      '-DENABLE_SSE3=OFF')
    CXXFLAGS+=" -DEIGEN_DONT_VECTORIZE"
  }

  # all x64 CPUs support SSE2 but not SSE3
  [[ "$CARCH" = 'x86_64' ]] && _cmakeopts+=('-DENABLE_SSE3=OFF')

  [[ -d ${srcdir}/build-${CARCH} ]] && rm -rf ${srcdir}/build-${CARCH}
  mkdir -p ${srcdir}/build-${CARCH} && cd ${srcdir}/build-${CARCH}
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${pkgdir}${MINGW_PREFIX} \
    -DWITH_OPENCL=ON \
    -DWITH_OPENGL=ON \
    -DWITH_TBB=ON \
    -DWITH_XINE=OFF \
    -DBUILD_WITH_DEBUG_INFO=OFF \
    -DBUILD_DOCS=OFF \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_EXAMPLES=ON \
    -DINSTALL_C_EXAMPLES=ON \
    -DINSTALL_PYTHON_EXAMPLES=ON \
    -DWITH_GTK=OFF \
    -DWITH_QT=OFF \
    -DWITH_VTK=ON \
    -DWITH_GSTREAMER=OFF \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=ON \
    -DENABLE_PRECOMPILED_HEADERS=OFF \
    ${_cmakeopts[@]} \
    ../${_realname}-${pkgver}

  make
}

package() {
  cd "${srcdir}/build-${CARCH}"
  make -j1 install

  pushd ${pkgdir}${MINGW_PREFIX} > /dev/null
  export PREFIX_WIN=`pwd -W`
  popd > /dev/null
  sed -s "s|${PREFIX_WIN}|${MINGW_PREFIX}|g" \
    -i ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/opencv.pc
}
