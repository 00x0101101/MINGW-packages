# Maintainer: Renato Silva <br.renatosilva@gmail.com>

_realname='nsis'
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.0b1
pkgrel=1
url='http://nsis.sourceforge.net'
pkgdesc='Windows installer development tool (mingw-w64)'
license=(ZLIB)
arch=(any)
depends=(${MINGW_PACKAGE_PREFIX}-zlib
         ${MINGW_PACKAGE_PREFIX}-gcc-libs
         ${MINGW_PACKAGE_PREFIX}-libwinpthread)
makedepends=(${MINGW_PACKAGE_PREFIX}-gcc
             'scons>=2.3.4-3')
source=("http://sourceforge.net/projects/nsis/files/NSIS%203%20Pre-release/${pkgver}/nsis-${pkgver}-src.tar.bz2"
        001-fhs-directory-structure.patch
        002-compile-fixes.patch
        003-fixes-for-64-bit.patch
        004-remove-redundant-architecture-suffix.patch
        005-fix-entry-point-in-64-bit.patch)
md5sums=('93f6719b933366c08016a4a0fd2af91d'
         '21816ca18271cc8d5af683b45a73b902'
         'ea04f7ae8b31477234abb8306c2996ff'
         'e71131ced072dda8b45593cc2a2b0b6c'
         'd505471649e0e7053343a86a4eb7f77b'
         'f44c0e8124eef3ba57f9d9f95923d2a2')

# Circumvent problem where makepkg will add the exe extension to some files
# when compressing the 64-bit package
options=('!strip')

prepare() {
    cd "${srcdir}/${_realname}-${pkgver}-src"

    # Linker script
    [[ "${CARCH}" = x86_64 ]] && sed -i 's/pei-i386/pei-x86-64/' SCons/config/linker_script
    #case "${CARCH}" in
    #    x86_64) cp -v /mingw64/x86_64-w64-mingw32/lib/ldscripts/i386pep.x SCons/config/linker_script ;;
    #    i686)   cp -v /mingw32/i686-w64-mingw32/lib/ldscripts/i386pe.x    SCons/config/linker_script ;;
    #esac
    #sed -i 's/\.rsrc BLOCK/.ndata BLOCK(__section_alignment__) : { *(.ndata) }\n.rsrc BLOCK/' SCons/config/linker_script

    patch -p1 < "${startdir}"/001-fhs-directory-structure.patch
    patch -p1 < "${startdir}"/002-compile-fixes.patch
    patch -p1 < "${startdir}"/003-fixes-for-64-bit.patch
    patch -p1 < "${startdir}"/004-remove-redundant-architecture-suffix.patch
    patch -p1 < "${startdir}"/005-fix-entry-point-in-64-bit.patch
}

_build() {
    local target_arch="${CARCH/i686/x86}"
    target_arch="${target_arch/x86_64/amd64}"
    cd "${srcdir}/build-${CARCH}-${_realname}-${pkgver}"
    scons \
        TARGET_ARCH="${target_arch}" \
        PREFIX="${MINGW_PREFIX}" \
        VERSION="${pkgver}" \
        UNICODE='yes' \
        NSIS_MAX_STRLEN='8192' \
        NSIS_CONFIG_CONST_DATA_PATH='no' \
        SKIPUTILS='NSIS Menu,SubStart' \
        PREFIX_DEST="${PREFIX_DEST}" \
        ${target}
}

build() {
    msg2 'Synchronizing build directory'
    rsync --recursive --times "${srcdir}/${_realname}-${pkgver}-src"/* "${srcdir}/build-${CARCH}-${_realname}-${pkgver}"
    _build
}

package() {
    PREFIX_DEST="${pkgdir}" target='install' _build
    install -Dm644 "${pkgdir}${MINGW_PREFIX}/share/doc/nsis/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
    rm "${pkgdir}${MINGW_PREFIX}/share/doc/nsis/COPYING"
}
