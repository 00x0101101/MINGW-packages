# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Ray Donnelly <mingw.android@gmail.com>

_realname=nodejs

pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.10.29
pkgrel=1
pkgdesc="Evented I/O for V8 javascript (mingw-w64)"
arch=('any')
url="http://nodejs.org/"
license=("MIT")
makedepends=("python2" "make" "gyp-svn")
depends=("${MINGW_PACKAGE_PREFIX}-c-ares"
         "${MINGW_PACKAGE_PREFIX}-http-parser"
         "${MINGW_PACKAGE_PREFIX}-v8"
         "${MINGW_PACKAGE_PREFIX}-libuv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-zlib")
options=('!emptydirs !strip')
source=("http://nodejs.org/dist/v${pkgver}/node-v${pkgver}.tar.gz"
        "0001-Fixing-for-python2-name.patch"
        "0002-node_mingw64.patch"
        "0003-Add-forced-flavor-configure-option.patch"
        "0004-Use-system-gyp.patch"
        "0005-Add-gyp-debug-option-to-configure.patch"
        "0000-v8-3.26.33-Disable-USING_V8_SHARED-for-v8_snapshot-static-lib.patch"
        "0001-v8-3.26.33-Include-win32-headers-h-then-undef-MemoryBarrier.patch"
        "0003-v8-3.26.33-Use-soname_version.dll-not-so.soname_version-on-Windows.patch")

md5sums=('e14ea9f46f9beecdf4e9423fb626c70b'
         '6632f58240f9bc13e344f749c12a9058'
         'bf767503ce3effcbfaac35c8f2025a31'
         '650fe8b654765087a8f2d23b55888450'
         '3ab64bc4799931c9596e0eacce8dd828'
         'cab1da71ccf0bad23babf4f7978ac7db'
         'dd82d12b16a416470bf73b56f0684163'
         '9828f204d7068faa656b83c738b67f5e'
         '0be71da4648801fba9aef222919cf611')

prepare() {
  cd ${srcdir}/node-v${pkgver}
  patch -p1 -i ${srcdir}/0001-Fixing-for-python2-name.patch
  patch -p1 -i ${srcdir}/0002-node_mingw64.patch
  patch -p1 -i ${srcdir}/0003-Add-forced-flavor-configure-option.patch
  patch -p1 -i ${srcdir}/0004-Use-system-gyp.patch
  patch -p1 -i ${srcdir}/0005-Add-gyp-debug-option-to-configure.patch
  cd deps/v8
  patch -p1 -i ${srcdir}/0000-v8-3.26.33-Disable-USING_V8_SHARED-for-v8_snapshot-static-lib.patch
  patch -p1 -i ${srcdir}/0001-v8-3.26.33-Include-win32-headers-h-then-undef-MemoryBarrier.patch
  patch -p1 -i ${srcdir}/0003-v8-3.26.33-Use-soname_version.dll-not-so.soname_version-on-Windows.patch
}

build() {
  # todo: out of source build doesn't work atm.
  # export PATH="${srcdir}/node-v${pkgver}:$PATH"
  # mkdir -p "${srcdir}/build-${MINGW_CHOST}"
  # cd "${srcdir}/build-${MINGW_CHOST}"
  # dirty hack to find 'tools/*.py' in out of source build with love from martell
  # cp -r ${srcdir}/node-v${pkgver}/tools ${srcdir}/build-${MINGW_CHOST}
  # cp -r ${srcdir}/node-v${pkgver}/node.gyp ${srcdir}/build-${MINGW_CHOST}

  cd ${srcdir}/node-v${pkgver}

# node.js uses a patched version of v8 3.26.33. If/when they upgrade
# we might be able to use this:
#    --shared-v8 \
#    --shared-v8-includes=$(pkgconf --variable=includedir v8) \
#    --shared-v8-libpath=$(pkgconf --variable=libdir v8) \
#    --shared-v8-libname=v8.$(pkgconf --modversion v8) \

  ./configure \
    --prefix=${MINGW_PREFIX} \
    --shared-http-parser \
    --shared-cares \
    --shared-cares-libpath=${MINGW_PREFIX}/lib \
    --shared-cares-includes=${MINGW_PREFIX}/include \
    --shared-openssl \
    --shared-libuv \
    --shared-zlib \
    --forced-flavor=win32 \
    --dest-os=win \
    --gyp-debug=all

  make -j1
}

package() {
  cd "${srcdir}/node-v${pkgver}"
  make DESTDIR="${pkgdir}" install

  install -d "$pkgdir"/${MINGW_PREFIX}/share/doc/nodejs
  cp -r doc/api/{*.html,assets} \
    "$pkgdir"/${MINGW_PREFIX}/share/doc/nodejs

  install -D -m644 LICENSE \
    "$pkgdir"/${MINGW_PREFIX}/share/licenses/nodejs/LICENSE

  # Why the hell wasn't this installed?! FS#40221
  ln -s /${MINGW_PREFIX}/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js "$pkgdir"/${MINGW_PREFIX}/bin/node-gyp
}
