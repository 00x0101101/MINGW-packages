diff -Naur --strip-trailing-cr source-orig/cmake/Modules/plugin.cmake source/cmake/Modules/plugin.cmake
--- source-orig/cmake/Modules/plugin.cmake	2014-05-06 13:12:17.732200000 +0400
+++ source/cmake/Modules/plugin.cmake	2014-05-06 22:36:19.649000000 +0400
@@ -19,7 +19,7 @@
         ## Windows
         set( MINGW 1 )
         set( CMAKE_FIND_LIBRARY_PREFIXES lib)
-        set( CMAKE_FIND_LIBRARY_SUFFIXES .a)
+        set( CMAKE_FIND_LIBRARY_SUFFIXES .a .dll.a)
         find_package(wxWidgets COMPONENTS std aui propgrid stc richtext ribbon REQUIRED)
         
     else( NOT UNIX )
diff -Naur --strip-trailing-cr source-orig/CMakeLists.txt source/CMakeLists.txt
--- source-orig/CMakeLists.txt	2014-05-06 13:12:14.315800000 +0400
+++ source/CMakeLists.txt	2014-05-07 09:25:35.950800000 +0400
@@ -52,9 +52,11 @@
 
 if ( UNIX )
     execute_process(COMMAND pwd OUTPUT_VARIABLE BUILD_DIRECTORY OUTPUT_STRIP_TRAILING_WHITESPACE)
-else ( UNIX)
+elseif(MINGW)
+    set ( BUILD_DIRECTORY ${CMAKE_BINARY_DIR} )
+else()
     set ( BUILD_DIRECTORY $ENV{CD} )
-endif ( UNIX )
+endif()
 
 message( "-- BUILD_DIRECTORY is set to ${BUILD_DIRECTORY}")
 
@@ -78,14 +80,14 @@
 
 set( CL_WX_CONFIG wx-config )
 
-if (UNIX)
+if (UNIX OR MINGW)
     execute_process(COMMAND which ${CL_WX_CONFIG} OUTPUT_VARIABLE WX_TOOL OUTPUT_STRIP_TRAILING_WHITESPACE)
     if (NOT WX_TOOL)
         message(FATAL_ERROR
 "\nNo functional wx_config script was found in your PATH.\nIs the wxWidgets development package installed?"
              )
     else()
-        execute_process(COMMAND ${WX_TOOL} --version OUTPUT_VARIABLE WX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
+        execute_process(COMMAND sh ${WX_TOOL} --version OUTPUT_VARIABLE WX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
         string(SUBSTRING "${WX_VERSION}" "0" "1" wxMAJOR_VERSION)
         string(SUBSTRING "${WX_VERSION}" "2" "1" wxMINOR_VERSION)
         string(SUBSTRING "${WX_VERSION}" "4" "1" wxRELEASE_NUMBER)
@@ -94,16 +96,19 @@
 "\nI'm afraid your wxWidgets version is too old.\nBuilding CodeLite requires at least wxWidgets-3.0.0"
              )
         endif()
+        if (MINGW)
+          add_definitions(-D__WXMSW__)
+        endif (MINGW)
     endif()
     message("-- wx-config used is: ${WX_TOOL}")
     message("-- wxWidgets version is: ${WX_VERSION}")
-    if (NOT APPLE)
+    if (NOT APPLE AND NOT MINGW)
         # Is the wx we are using built on gtk2 or 3?
         execute_process(COMMAND ${WX_TOOL} --selected_config OUTPUT_VARIABLE WX_GTK_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
         string(SUBSTRING "${WX_GTK_VERSION}" "3" "1" GTK_VERSION)
         message("-- gtk version is: ${GTK_VERSION}")
     endif()
-endif (UNIX)
+endif (UNIX OR MINGW)
 
 ########################################
 ## Override defaults with user input
@@ -130,10 +135,15 @@
 unset(ENABLE_SFTP CACHE)
 
 if ( WITH_SFTP )
-    if (UNIX AND NOT APPLE )
+    if (UNIX AND NOT APPLE OR MINGW)
         ## Linux
+        if (MINGW)
+        find_library(LIBSSH_LIB NAMES ssh PATH_SUFFIXES lib)
+        find_path(LIBSSH_INCLUDE_DIR NAMES libssh.h PATH_SUFFIXES include/libssh)
+        else()
         find_library(LIBSSH_LIB NAMES libssh.so HINTS /usr/local/lib /usr/lib ${CMAKE_INSTALL_LIBDIR})
         find_path(LIBSSH_INCLUDE_DIR NAMES libssh.h HINTS /usr/local/include /usr/include PATH_SUFFIXES libssh)
+        endif()
         string(FIND ${LIBSSH_INCLUDE_DIR} "NOTFOUND" LIBSSH_NOT_FOUND_POS)
         if ( LIBSSH_NOT_FOUND_POS GREATER -1 )
             if (UNIX AND NOT APPLE )
@@ -146,12 +156,12 @@
             message(FATAL_ERROR "-- Could not find libssh")
         endif( LIBSSH_NOT_FOUND_POS GREATER -1 )
 
-    else ( UNIX AND NOT APPLE )
+    else ( UNIX AND NOT APPLE OR MINGW )
         ## OSX
         set( LIBSSH_INCLUDE_DIR ${CL_SRC_ROOT}/sdk/libssh/include)
         set( LIBSSH_LIB ${CL_SRC_ROOT}/sdk/libssh/lib/osx/libssh.a)
         include_directories(${LIBSSH_INCLUDE_DIR})
-    endif ( UNIX AND NOT APPLE )
+    endif ( UNIX AND NOT APPLE OR MINGW )
     message("-- LIBSSH_LIB is set to ${LIBSSH_LIB}")
 endif ( WITH_SFTP )
 
diff -Naur --strip-trailing-cr source-orig/CodeLite/CMakeLists.txt source/CodeLite/CMakeLists.txt
--- source-orig/CodeLite/CMakeLists.txt	2014-05-06 13:12:14.565400000 +0400
+++ source/CodeLite/CMakeLists.txt	2014-05-07 09:18:02.408000000 +0400
@@ -28,7 +28,7 @@
         set(ADDITIONAL_LIBRARIES "-ldl")
     endif ( )
 else (UNIX)
-    ## Windows??
+    set(ADDITIONAL_LIBRARIES "-lws2_32")
 endif (UNIX)
 
 ## Macros
diff -Naur --strip-trailing-cr source-orig/codelite_make/CMakeLists.txt source/codelite_make/CMakeLists.txt
--- source-orig/codelite_make/CMakeLists.txt	2014-05-06 13:12:19.838200000 +0400
+++ source/codelite_make/CMakeLists.txt	2014-05-07 09:05:29.019600000 +0400
@@ -20,7 +20,7 @@
 
 # we need wxWidgets flags to be set only for the c++ files, so we do it like this
 # by setting the CMAKE_CXX_FLAGS
-execute_process(COMMAND ${CL_WX_CONFIG} --cxxflags OUTPUT_VARIABLE WX_CXX_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
+execute_process(COMMAND sh ${CL_WX_CONFIG} --cxxflags OUTPUT_VARIABLE WX_CXX_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
 set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WX_CXX_FLAGS}")
 
 # prepare list of files
diff -Naur --strip-trailing-cr source-orig/codelite_terminal/CMakeLists.txt source/codelite_terminal/CMakeLists.txt
--- source-orig/codelite_terminal/CMakeLists.txt	2014-05-06 13:12:19.838200000 +0400
+++ source/codelite_terminal/CMakeLists.txt	2014-05-07 09:06:09.751200000 +0400
@@ -18,7 +18,7 @@
 
 # we need wxWidgets flags to be set only for the c++ files, so we do it like this
 # by setting the CMAKE_CXX_FLAGS
-execute_process(COMMAND ${CL_WX_CONFIG} --debug=no --cxxflags OUTPUT_VARIABLE WX_CXX_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
+execute_process(COMMAND sh ${CL_WX_CONFIG} --debug=no --cxxflags OUTPUT_VARIABLE WX_CXX_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
 set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WX_CXX_FLAGS}")
 
 add_definitions(-DNDEBUG)
diff -Naur --strip-trailing-cr source-orig/Plugin/CMakeLists.txt source/Plugin/CMakeLists.txt
--- source-orig/Plugin/CMakeLists.txt	2014-05-06 13:12:15.953800000 +0400
+++ source/Plugin/CMakeLists.txt	2014-05-07 10:01:43.168200000 +0400
@@ -59,7 +59,9 @@
     else ( )
         set(ADDITIONAL_LIBRARIES "-ldl")
     endif ( )
-endif (UNIX)
+elseif (WIN32)
+    set(ADDITIONAL_LIBRARIES "-luxtheme")
+endif ( )
 
 add_definitions(-DWXUSINGDLL_WXSQLITE3)
 add_definitions(-DWXUSINGDLL_CL)
diff -Naur --strip-trailing-cr source-orig/sdk/codelite_cppcheck/CMakeLists.txt source/sdk/codelite_cppcheck/CMakeLists.txt
--- source-orig/sdk/codelite_cppcheck/CMakeLists.txt	2014-05-06 13:12:23.504200000 +0400
+++ source/sdk/codelite_cppcheck/CMakeLists.txt	2014-05-07 08:08:09.334600000 +0400
@@ -8,10 +8,16 @@
 # Include paths
 include_directories("${CL_SRC_ROOT}/sdk/codelite_cppcheck/lib" "${CL_SRC_ROOT}/sdk/codelite_cppcheck/cli")
 
+set( ADDITIONAL_LIBRARIES "" )
+
 # Add RPATH
 if(UNIX)
 set (LINKER_OPTIONS -Wl,-rpath,"${PLUGINS_DIR}")
 endif (UNIX)
+
+if(WIN32)
+set(ADDITIONAL_LIBRARIES "-lshlwapi")
+endif(WIN32)
 
 include_directories("${CL_SRC_ROOT}/sdk/codelite_cppcheck/externals/tinyxml")
 FILE(GLOB SRCS "cli/*.cpp" "lib/*.cpp" "externals/*/*.cpp")
@@ -21,7 +29,7 @@
 
 # Define the output
 add_executable(codelite_cppcheck ${SRCS})
-target_link_libraries(codelite_cppcheck ${LINKER_OPTIONS})
+target_link_libraries(codelite_cppcheck ${LINKER_OPTIONS} ${ADDITIONAL_LIBRARIES})
 
 install(TARGETS codelite_cppcheck DESTINATION ${CL_PREFIX}/bin)
 
diff -Naur --strip-trailing-cr source-orig/sdk/codelite_indexer/CMakeLists.txt source/sdk/codelite_indexer/CMakeLists.txt
--- source-orig/sdk/codelite_indexer/CMakeLists.txt	2014-05-06 13:12:29.369800000 +0400
+++ source/sdk/codelite_indexer/CMakeLists.txt	2014-05-07 09:13:40.107600000 +0400
@@ -21,14 +21,16 @@
 
 # we need wxWidgets flags to be set only for the c++ files, so we do it like this
 # by setting the CMAKE_CXX_FLAGS
-execute_process(COMMAND ${CL_WX_CONFIG} --cxxflags OUTPUT_VARIABLE WX_CXX_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
+execute_process(COMMAND sh ${CL_WX_CONFIG} --cxxflags OUTPUT_VARIABLE WX_CXX_FLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
 set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WX_CXX_FLAGS}")
 
 # prepare list of files
 FILE(GLOB SRCS "*.cpp" "libctags/*.c" "network/*.cpp")
 
+if (UNIX)
 # we require this macro to be set to true
 add_definitions(-DHAVE_CONFIG_H)
+endif (UNIX)
 
 # and finally prepare list of includes directories
 include_directories("${CL_SRC_ROOT}/sdk/codelite_indexer/libctags")
diff -Naur --strip-trailing-cr source-orig/sdk/codelite_indexer/libctags/read.c source/sdk/codelite_indexer/libctags/read.c
--- source-orig/sdk/codelite_indexer/libctags/read.c	2014-05-06 13:12:29.635000000 +0400
+++ source/sdk/codelite_indexer/libctags/read.c	2014-05-07 08:30:37.057000000 +0400
@@ -602,7 +602,7 @@
 	size_t count     = 0;
 	long sizeToRead  = -1;
 
-#if defined(__WXMSW__) || defined(__APPLE__)||defined(__FreeBSD__)
+#if defined(__WXMSW__) || defined(__APPLE__) || defined(__FreeBSD__)
 	if(location < 0)
 		return 0;
 #else
@@ -617,7 +617,7 @@
 
 	memset(buffer, 0, bufferSize);
 
-#if defined(__WXMSW__) || defined(__APPLE__)||defined(__FreeBSD__)
+#if defined(__WXMSW__) || defined(__APPLE__) || defined(__FreeBSD__)
 	sizeToRead = endPos - location;
 #else
 	sizeToRead = endPos.__pos - location.__pos;
diff -Naur --strip-trailing-cr source-orig/sdk/codelite_indexer/workerthread.h source/sdk/codelite_indexer/workerthread.h
--- source-orig/sdk/codelite_indexer/workerthread.h	2014-05-06 13:12:29.853400000 +0400
+++ source/sdk/codelite_indexer/workerthread.h	2014-05-07 07:57:07.776600000 +0400
@@ -1,9 +1,9 @@
 #ifndef __workerthread__
 #define __workerthread__
 
+#include "network/named_pipe.h"
 #include "ethread.h"
 #include "equeue.h"
-#include "network/named_pipe.h"
 
 // ---------------------------------------------
 // parsing thread
--- codelite/sdk/databaselayer/CMakeLists.txt.orig	2014-07-03 07:27:38.603000000 +0400
+++ codelite/sdk/databaselayer/CMakeLists.txt	2014-07-03 21:47:43.582200000 +0400
@@ -31,8 +31,8 @@
 FILE(GLOB SRCS "src/dblayer/Sqlite*.cpp" "src/dblayer/Database*.cpp" "src/dblayer/Prepared*.cpp" "src/sqlite3/*.c")
 
 if ( WITH_MYSQL )
-    find_library(LIBMYSQLCLIENT NAMES libmysqlclient.so)
-    find_path(MYSQLCLIENT_INCLUDE NAMES mysql.h PATH_SUFFIXES mysql)
+    find_library(LIBMYSQLCLIENT NAMES mysql)
+    find_path(MYSQLCLIENT_INCLUDE NAMES mysql.h PATH_SUFFIXES mysql mariadb)
     
     if (  ${LIBMYSQLCLIENT} STREQUAL "LIBMYSQLCLIENT-NOTFOUND") 
         message( FATAL_ERROR "-- Could not locate libmysqlclient.so" )
