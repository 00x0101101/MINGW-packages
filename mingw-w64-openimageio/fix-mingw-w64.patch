--- src/include/osdep.h.orig	2013-12-29 01:19:44.031000000 +0400
+++ src/include/osdep.h	2013-12-29 01:20:16.557000000 +0400
@@ -33,7 +33,9 @@
 #ifdef _WIN32
 # define WIN32_LEAN_AND_MEAN
 # define VC_EXTRALEAN
-# define NOMINMAX
+# ifndef __MINGW64_VERSION_MAJOR
+#  define NOMINMAX
+# endif
 # include <windows.h>
 #endif
 
--- src/libutil/filesystem.cpp.orig	2013-12-29 12:16:42.366000000 +0400
+++ src/libutil/filesystem.cpp	2013-12-29 12:18:18.649200000 +0400
@@ -288,7 +288,7 @@
 FILE*
 Filesystem::fopen (const std::string &path, const std::string &mode)
 {
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW64_VERSION_MAJOR)
     // on Windows fopen does not accept UTF-8 paths, so we convert to wide char
     std::wstring wpath = Strutil::utf8_to_utf16 (path);
     std::wstring wmode = Strutil::utf8_to_utf16 (mode);
@@ -307,7 +307,7 @@
                   const std::string &path,
                   std::ios_base::openmode mode)
 {
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW64_VERSION_MAJOR)
     // Windows std::ifstream accepts non-standard wchar_t* 
     std::wstring wpath = Strutil::utf8_to_utf16(path);
     stream.open (wpath.c_str(), mode);
@@ -324,7 +324,7 @@
                   const std::string &path,
                   std::ios_base::openmode mode)
 {
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW64_VERSION_MAJOR)
     // Windows std::ofstream accepts non-standard wchar_t*
     std::wstring wpath = Strutil::utf8_to_utf16 (path);
     stream.open (wpath.c_str(), mode);
--- src/libutil/plugin.cpp.orig	2013-12-29 19:46:53.954000000 +0400
+++ src/libutil/plugin.cpp	2013-12-29 19:46:57.854000000 +0400
@@ -93,7 +93,7 @@
 void *
 dlsym (Handle plugin_handle, const char *symbol_name)
 {
-    return GetProcAddress ((HMODULE)plugin_handle, symbol_name);
+    return (void *)GetProcAddress ((HMODULE)plugin_handle, symbol_name);
 }
 
 
--- src/dds.imageio/ddsinput.cpp.orig	2013-12-03 05:54:59.000000000 +0400
+++ src/dds.imageio/ddsinput.cpp	2013-12-29 23:08:37.903000000 +0400
@@ -667,7 +667,7 @@
         lastx = x;
         lasty = y;
         lastz = z;
-        unsigned int w, h, d;
+        unsigned int w=0, h=0, d=0;
 #ifdef DDS_3X2_CUBE_MAP_LAYOUT
         internal_seek_subimage (((x / m_spec.tile_width) << 1)
                                 + y / m_spec.tile_height,
--- src/include/fmath.h.orig	2013-12-03 05:54:59.000000000 +0400
+++ src/include/fmath.h	2013-12-29 23:33:55.819400000 +0400
@@ -46,6 +46,9 @@
 #include <limits>
 #include <typeinfo>
 #include <algorithm>
+#ifdef __MINGW64_VERSION_MAJOR
+#include <float.h>
+#endif
 
 #if defined(_MSC_VER) && _MSC_VER < 1600
    typedef __int8  int8_t;
@@ -852,7 +855,7 @@
 
 
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__MINGW64_VERSION_MAJOR)
 // Windows doesn't define these functions from math.h
 #define hypotf _hypotf
 #define copysign(x,y) _copysign(x,y)
--- src/libOpenImageIO/CMakeLists.txt.orig	2013-12-29 23:44:34.117400000 +0400
+++ src/libOpenImageIO/CMakeLists.txt	2013-12-29 23:49:43.658600000 +0400
@@ -258,7 +261,7 @@
 
 
 if (WIN32)
-    target_link_libraries (OpenImageIO psapi.lib)
+    target_link_libraries (OpenImageIO psapi ws2_32)
 endif ()
 link_ilmbase (OpenImageIO)
 add_dependencies (OpenImageIO "${CMAKE_CURRENT_SOURCE_DIR}/libOpenImageIO.map")
--- src/cmake/modules/FindOpenJpeg.cmake.orig	2013-12-29 23:51:59.071600000 +0400
+++ src/cmake/modules/FindOpenJpeg.cmake	2013-12-29 23:52:34.998400000 +0400
@@ -78,7 +78,9 @@
        ${OPENJPEG_HOME}/lib64)
   set (OpenJpeg_include_paths
        ${OpenJpeg_include_paths}
-       ${OPENJPEG_HOME}/include)
+       ${OPENJPEG_HOME}/include
+       ${OPENJPEG_HOME}/include/openjpeg
+       ${OPENJPEG_HOME}/include/openjpeg-1.5)
 endif()
 
 
--- CMakeLists.txt.orig	2013-12-30 01:06:13.042400000 +0400
+++ CMakeLists.txt	2013-12-30 01:06:22.293200000 +0400
@@ -423,7 +423,7 @@
     set (CPACK_GENERATOR "TGZ;STGZ;PackageMaker")
     set (CPACK_SOURCE_GENERATOR "TGZ")
 endif ()
-if (WIN32)
+if (WIN32 AND NOT MINGW)
     set (CPACK_GENERATOR "NSIS")
     set(CPACK_PACKAGE_EXECUTABLES "iv" "iv - Image Viewer")
 #    set(CPACK_CREATE_DESCTOP_LINKS "iv" "iv - Image Viewer")
