# Maintainer: Martell Malone <martellmalone@gmail.com>
# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=clang
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-clang-analyzer"
         "${MINGW_PACKAGE_PREFIX}-clang-tools-extra"
         "${MINGW_PACKAGE_PREFIX}-llvm"
         #"${MINGW_PACKAGE_PREFIX}-compiler-rt"
         )
pkgver=3.6.2
pkgrel=1
pkgdesc="LC language family frontend for LLVM (mingw-w64)"
arch=('any')
url="http://llvm.org"
license=("custom:University of Illinois/NCSA Open Source License")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-python3-sphinx"
             "python2" "tar" "groff")
depends=("${MINGW_PACKAGE_PREFIX}-gcc")
options=('staticlibs' 'strip')
source=(http://llvm.org/releases/${pkgver}/llvm-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/cfe-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/compiler-rt-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/test-suite-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/libcxx-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/clang-tools-extra-${pkgver}.src.tar.xz{,.sig}
        http://llvm.org/releases/${pkgver}/lldb-${pkgver}.src.tar.xz{,.sig}
        asminfo-for-mingw-arm-and-cygwin-arm.patch
        clang-mingw-driver.patch
        mingw-arm-and-cygwin-arm-target.patch
        llvm-3.5.0-fix-cmake-llvm-exports.patch
        0002-Fix-GetHostTriple-for-mingw-w64-in-msys.patch
        0013-Set-the-x86-arch-name-to-i686-for-mingw-w64.patch
        )
sha256sums=('f60dc158bfda6822de167e87275848969f0558b3134892ff54fced87e4667b94'
            'SKIP'
            'ae9180466a23acb426d12444d866b266ff2289b266064d362462e44f8d4699f3'
            'SKIP'
            '0f2ff37d80a64575fecd8cf0d5c50f7ac1f837ddf700d1855412bb7547431d87'
            'SKIP'
            '66f2e07eea910563d294ef09fc71f8e79d4b6001dc0944b1da265c2e50a5c08a'
            'SKIP'
            '52f3d452f48209c9df1792158fdbd7f3e98ed9bca8ebb51fcd524f67437c8b81'
            'SKIP'
            '6a0ec627d398f501ddf347060f7a2ccea4802b2494f1d4fd7bda3e0442d04feb'
            'SKIP'
            '940dc96b64919b7dbf32c37e0e1d1fc88cc18e1d4b3acf1e7dfe5a46eb6523a9'
            'SKIP'
            'b37ad0edb84ef13e0750c7f8d41441363859928cb9133d05f248afa41f44fc93'
            '7c9366df58b27378c104d37466caa761873440e5fbee707d3d22693add5d2cdb'
            '5727fb67902b9cb3ef4e1c57bf16128076911b8bf58357f65e5c5201a6b59629'
            '841a153d0e9d2d196ea5318388ff295e69c41547eb73b24edf92a1b2cc3cccdd'
            '0804146b32138d55c611336cc81e1783c29a8fab0fe62f248ba1ad7acc711c4d'
            '13a95a61e9c1c44c18a69947734e07515332a549446394f48b86b52511d221de')

validpgpkeys=('B6C8F98282B944E3B0D5C2530FC3042E345AD05D')
noextract=(cfe-${pkgver}.src.tar.xz
           libcxx-${pkgver}.src.tar.xz
           lldb-${pkgver}.src.tar.xz
           test-suite-${pkgver}.src.tar.xz)

prepare() {
  plain "Extracting clang-${pkgver}.src.tar.xz due to symlink(s) without pre-existing target(s)"
  [[ -d ${srcdir}/cfe-${pkgver} ]] && rm -rf ${srcdir}/cfe-${pkgver}
  [[ -d ${srcdir}/cfe-${pkgver} ]] || tar -xJvf ${srcdir}/cfe-${pkgver}.src.tar.xz -C ${srcdir} || true

  cd "${srcdir}/llvm-${pkgver}.src"
  patch -p1 -i ${srcdir}/asminfo-for-mingw-arm-and-cygwin-arm.patch
  patch -p1 -i ${srcdir}/0002-Fix-GetHostTriple-for-mingw-w64-in-msys.patch

  cd "${srcdir}/cfe-${pkgver}.src"
  patch -p1 -i ${srcdir}/clang-mingw-driver.patch
  patch -p1 -i ${srcdir}/mingw-arm-and-cygwin-arm-target.patch
  patch -p1 -i ${srcdir}/0013-Set-the-x86-arch-name-to-i686-for-mingw-w64.patch

  mv "${srcdir}/llvm-${pkgver}.src" "$srcdir/llvm-${pkgver}"
  cd "${srcdir}/llvm-${pkgver}"

  # Fix docs installation directory
  sed -i 's:$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in

  # Fix definition of LLVM_CMAKE_DIR in LLVMConfig.cmake
  sed -i '/@LLVM_CONFIG_CMAKE_DIR@/s:$(PROJ_cmake):$(PROJ_prefix)/share/llvm/cmake:' \
    cmake/modules/Makefile

  # At the present, clang must reside inside the LLVM source code tree to build
  # See http://llvm.org/bugs/show_bug.cgi?id=4840
  [[ -d tools/clang ]] && rm -rf tools/clang
  mv "${srcdir}/cfe-${pkgver}.src" tools/clang

  [[ -d projects/compiler-rt ]] && rm -rf projects/compiler-rt
  mv "${srcdir}/compiler-rt-${pkgver}.src" projects/compiler-rt

  # [ -d projects/test-suite ] && rm -rf projects/test-suite
  # mv "${srcdir}/test-suite-${pkgver}.src" projects/test-suite

  [[ -d tools/clang/tools/extra ]] && rm -rf tools/clang/tools/extra
  mv "${srcdir}/clang-tools-extra-${pkgver}.src" tools/clang/tools/extra

  #[ -d tools/lldb ] && rm -rf tools/lldb
  #mv "${srcdir}/lldb-${pkgver}.src" tools/lldb
  #sed -i -e "s|python-config|python2-config|" tools/lldb/lib/Makefile
  #sed -i -e "s|python-config|python2-config|" tools/lldb/Makefile
  #sed -i -e "s|/usr/bin/env python|&2|" tools/lldb/scripts/Python/build-swig-Python.sh
  #sed -i -e "s|/usr/bin/env python|&2|" tools/lldb/scripts/Python/finish-swig-Python-LLDB.sh

  #[ -d projects/libcxx-${pkgver} ] && rm -rf projects/libcxx
  #mv "${srcdir}/libcxx-${pkgver}.src" projects/libcxx

}

build() {
  cd "$srcdir"
  mkdir -p build-${MINGW_CHOST}
  cd build-${MINGW_CHOST}
  echo 'ac_cv_have_decl_strerror_s=${ac_cv_have_decl_strerror_s=no}' > config.cache

  # Include location of libffi headers in CPPFLAGS
  CPPFLAGS+=" $(pkg-config --cflags libffi)"

  ../llvm-${pkgver}/configure \
    -C \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --with-sysroot=${MINGW_PREFIX} \
    --enable-targets=all \
    --enable-optimized \
    --disable-assertions \
    --disable-pthreads \
    --disable-bindings \
    --with-python=/usr/bin/python2 \
    --enable-libffi \
    --enable-docs

  make
  make -C ../llvm-${pkgver}/docs -f Makefile.sphinx man
  make -C ../llvm-${pkgver}/docs -f Makefile.sphinx html
  make -C ../llvm-${pkgver}/tools/clang/docs -f Makefile.sphinx html
  setup
}

check() {
  plain "skipping make check..."
  #cd "$srcdir/build-${MINGW_CHOST}"
  #make check
}

setup() {
  local destdir=${srcdir}/dest
  [[ -d ${destdir} ]] && rm -rf ${destdir}
  mkdir -p ${destdir}

  # CLANG-TOOLS-EXTRA
  cd "$srcdir/build-${MINGW_CHOST}/tools/clang/tools/extra"
  make DESTDIR="$destdir/clang-tools-extra" install
  # Fix permissions of static libs
  chmod -x ${destdir}/clang-tools-extra${MINGW_PREFIX}/lib/*.a
  install -Dm644 ${srcdir}/llvm-${pkgver}/tools/clang/tools/extra/LICENSE.TXT "$destdir/clang-tools-extra${MINGW_PREFIX}/share/licenses/clang-tools-extra/LICENSE"
  cd ${srcdir}
  mv ${srcdir}/build-${MINGW_CHOST}/tools/clang/tools/extra ${srcdir}/clang-tools-extra-${MINGW_CHOST}
  mv ${srcdir}/llvm-${pkgver}/tools/clang/tools/extra ${srcdir}/clang-tools-extra-${pkgver}

  # CLANG
  cd "$srcdir/build-${MINGW_CHOST}/tools/clang"
  make -j1 DESTDIR="$destdir/clang" install
  # Fix mis-named clang doc folder (is llvm, should be clang)
  mv ${destdir}/clang${MINGW_PREFIX}/share/doc/llvm ${destdir}/clang${MINGW_PREFIX}/share/doc/clang

  # Install html docs
  install -d "${destdir}"/clang${MINGW_PREFIX}/share/doc/clang/html
  cp -rf ${srcdir}/llvm-${pkgver}/tools/clang/docs/_build/html/* "${destdir}"/clang${MINGW_PREFIX}/share/doc/clang/html/
  rm -r "${destdir}"/clang${MINGW_PREFIX}/share/doc/clang/html/_sources

  # CLANG-ANAYLYSER
  install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/{bin,lib/clang-analyzer}
  for _tool in scan-{build,view}; do
    cp -r ${srcdir}/llvm-${pkgver}/tools/clang/tools/${_tool} ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/
    ln -s ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/${_tool}/${_tool} ${destdir}/clang-analyzer${MINGW_PREFIX}/bin/
  done

  # scan-build looks for clang within the same directory
  install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/
  ln -s ${destdir}/clang${MINGW_PREFIX}/bin/clang.exe ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/

  # Relocate man page
  install -d ${destdir}/clang-analyzer${MINGW_PREFIX}/share/man/man1
  mv ${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer/scan-build/scan-build.1 \
    ${destdir}/clang-analyzer${MINGW_PREFIX}/share/man/man1/

  # Compile Python scripts
  python2 -m compileall "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer"
  python2 -O -m compileall "${destdir}/clang-analyzer${MINGW_PREFIX}/lib/clang-analyzer"
  install -Dm644 ${srcdir}/llvm-${pkgver}/tools/clang/LICENSE.TXT "${destdir}/clang-analyzer${MINGW_PREFIX}/share/licenses/clang-analyzer/LICENSE"

  # LLVM
  cd ${srcdir}
  # Move clang out of the way *before* installing llvm, both src and build. We'll put build back afterwards to allow re-packaging.
  # but the src move is undoing what prepare() did.
  mv "$srcdir/build-${MINGW_CHOST}/tools/clang"   "${srcdir}/clang-${MINGW_CHOST}"
  mv "$srcdir/llvm-${pkgver}/tools/clang"         "${srcdir}/clang-${pkgver}"       # Put src back where it was (clang)
  cd "$srcdir/build-${MINGW_CHOST}"
  make -j1 DESTDIR="${destdir}/llvm" install

  # Install man pages
  install -d "${destdir}"/llvm${MINGW_PREFIX}/share/man/man1
  cp ${srcdir}/llvm-${pkgver}/docs/_build/man/*.1 "${destdir}"/llvm${MINGW_PREFIX}/share/man/man1/

  # Install html docs
  install -d "${destdir}"/llvm${MINGW_PREFIX}/share/doc/llvm/html
  cp -rf ${srcdir}/llvm-${pkgver}/docs/_build/html/* "${destdir}"/llvm${MINGW_PREFIX}/share/doc/llvm/html/
  rm -r "${destdir}"/llvm${MINGW_PREFIX}/share/doc/llvm/html/_sources

  # Install CMake stuff
  install -d "${destdir}"/llvm${MINGW_PREFIX}/share/llvm/cmake/{modules,platforms}
  install -Dm644 ${srcdir}/llvm-${pkgver}/cmake/modules/*.cmake "${destdir}"/llvm${MINGW_PREFIX}/share/llvm/cmake/modules/
  install -Dm644 ${srcdir}/llvm-${pkgver}/cmake/platforms/*.cmake "${destdir}"/llvm${MINGW_PREFIX}/share/llvm/cmake/platforms/

  # Move all back
  mv "${srcdir}/clang-${MINGW_CHOST}"                "${srcdir}/build-${MINGW_CHOST}/tools/clang"
  mv "${srcdir}/clang-${pkgver}"                     "${srcdir}/llvm-${pkgver}/tools/clang"
  mv "${srcdir}/clang-tools-extra-${MINGW_CHOST}"    "${srcdir}/build-${MINGW_CHOST}/tools/clang/tools/extra"
  mv "${srcdir}/clang-tools-extra-${pkgver}"         "${srcdir}/llvm-${pkgver}/tools/clang/tools/extra"

  # Undo more prepare() moves.
  #mv "${srcdir}/llvm-${pkgver}/projects/compiler-rt"      "${srcdir}/compiler-rt-${pkgver}.src" # Put src back where it was (the rest)
  #mv "${srcdir}/llvm-${pkgver}/projects/test-suite"       "${srcdir}/test-suite-${pkgver}.src"
  #mv "${srcdir}/llvm-${pkgver}/projects/libcxx"           "${srcdir}/libcxx-${pkgver}.src"
  #mv "${srcdir}/llvm-${pkgver}/tools/clang/tools/extra"   "${srcdir}/clang-tools-extra-${pkgver}.src"
  #mv "${srcdir}/llvm-${pkgver}/tools/clang"               "${srcdir}/clang-${pkgver}.src"
}

package_clang(){
  pkgdesc="C language family frontend for LLVM"
  depends=("${MINGW_PACKAGE_PREFIX}-llvm=${pkgver}-${pkgrel}")

  mv ${srcdir}/dest/clang/* ${pkgdir}
}

# package_compiler-rt(){
#   cd ${srcdir}/compiler-rt
# }

package_llvm(){
  pkgdesc="Low Level Virtual Machine"
  depends=("${MINGW_PACKAGE_PREFIX}-gcc") # "${MINGW_PACKAGE_PREFIX}-compiler-rt"
  install=llvm-${CARCH}.install

  mv ${srcdir}/dest/llvm/* ${pkgdir}
}

package_clang-analyzer() {
  pkgdesc="A source code analysis framework"
  url="http://clang-analyzer.llvm.org/"
  depends=("${MINGW_PACKAGE_PREFIX}-clang=${pkgver}-${pkgrel}" "${MINGW_PACKAGE_PREFIX}-python2")

  mv ${srcdir}/dest/clang-analyzer/* ${pkgdir}
}

package_clang-tools-extra() {
  pkgdesc="Extra tools built using Clang's tooling APIs"
  url="http://clang.llvm.org/"
  depends=("${MINGW_PACKAGE_PREFIX}-clang=${pkgver}-${pkgrel}")

  mv ${srcdir}/dest/clang-tools-extra/* ${pkgdir}
}

package_mingw-w64-i686-clang(){
  package_clang
}

package_mingw-w64-i686-clang-analyzer(){
  package_clang-analyzer
}

package_mingw-w64-i686-clang-tools-extra(){
  package_clang-tools-extra
}

# package_mingw-w64-i686-compiler-rt(){
#   package_compiler-rt
# }

package_mingw-w64-i686-llvm(){
  package_llvm
}

package_mingw-w64-x86_64-clang(){
  package_clang
}

package_mingw-w64-x86_64-clang-analyzer(){
  package_clang-analyzer
}

package_mingw-w64-x86_64-clang-tools-extra(){
  package_clang-tools-extra
}

# package_mingw-w64-x86_64-compiler-rt(){
#   package_compiler-rt
# }

package_mingw-w64-x86_64-llvm(){
  package_llvm
}
