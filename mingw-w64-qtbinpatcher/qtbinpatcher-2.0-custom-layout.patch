diff -Naur qtbinpatcher-2.0.0-src/Functions.cpp qtbinpatcher-2.0.0-src-p/Functions.cpp
--- qtbinpatcher-2.0.0-src/Functions.cpp	2014-06-09 12:59:24.000000000 +0400
+++ qtbinpatcher-2.0.0-src-p/Functions.cpp	2014-06-10 11:05:37.287200000 +0400
@@ -164,6 +164,18 @@
     }
 }
 
+//------------------------------------------------------------------------------
+// Check if fullString ends with ending.
+
+bool Functions::hasEnding (const string& fullString, const string& ending)
+{
+    if (fullString.length() >= ending.length()) {
+        return (0 == fullString.compare (fullString.length() - ending.length(), ending.length(), ending));
+    } else {
+        return false;
+    }
+}
+
 //------------------------------------------------------------------------------
 
 string Functions::absolutePath(const string& relativePath)
diff -Naur qtbinpatcher-2.0.0-src/Functions.hpp qtbinpatcher-2.0.0-src-p/Functions.hpp
--- qtbinpatcher-2.0.0-src/Functions.hpp	2014-06-06 13:29:52.000000000 +0400
+++ qtbinpatcher-2.0.0-src-p/Functions.hpp	2014-06-10 11:05:56.709200000 +0400
@@ -46,6 +46,7 @@
     std::string toNormalSeparators(const std::string& path);
     bool hasOnlyNormalSeparators(const char* path);
     void replace(std::string* pS, char before, const char* after);
+    bool hasEnding (const std::string& fullString, const std::string& ending);
     std::string absolutePath(const std::string& relativePath);
     std::string currentDir();
     bool isFileExists(const char* fileName);
diff -Naur qtbinpatcher-2.0.0-src/QtBinPatcher.cpp qtbinpatcher-2.0.0-src-p/QtBinPatcher.cpp
--- qtbinpatcher-2.0.0-src/QtBinPatcher.cpp	2014-06-09 15:43:50.000000000 +0400
+++ qtbinpatcher-2.0.0-src-p/QtBinPatcher.cpp	2014-06-10 11:08:33.364400000 +0400
@@ -146,6 +146,8 @@
         m_NewQtDir = absolutePath(m_NewQtDir);
     else
         m_NewQtDir = m_QtDir;
+    if (hasEnding(m_NewQtDir, "/bin"))
+      m_NewQtDir.erase(m_NewQtDir.length() - 4, m_NewQtDir.length());
     m_NewQtDir = toNormalSeparators(m_NewQtDir);
     LOG_V("Path to new Qt directory: \"%s\".\n", m_NewQtDir.c_str());
 
@@ -204,23 +206,23 @@
 
     static const TParam Params[] = {
         { "QT_INSTALL_PREFIX",       "qt_prfxpath=", NULL           },
-        { "QT_INSTALL_ARCHDATA",     "qt_adatpath=", NULL           },
-        { "QT_INSTALL_DOCS",         "qt_docspath=", "doc"          },
+        { "QT_INSTALL_ARCHDATA",     "qt_adatpath=", "share/qt5"           },
+        { "QT_INSTALL_DOCS",         "qt_docspath=", "share/qt5/doc"          },
         { "QT_INSTALL_HEADERS",      "qt_hdrspath=", "include"      },
         { "QT_INSTALL_LIBS",         "qt_libspath=", "lib"          },
-        { "QT_INSTALL_LIBEXECS",     "qt_lbexpath=", "libexec"      },
+        { "QT_INSTALL_LIBEXECS",     "qt_lbexpath=", "share/qt5/libexec"      },
         { "QT_INSTALL_BINS",         "qt_binspath=", "bin"          },
-        { "QT_INSTALL_PLUGINS",      "qt_plugpath=", "plugins"      },
-        { "QT_INSTALL_IMPORTS",      "qt_impspath=", "imports"      },
-        { "QT_INSTALL_QML",          "qt_qml2path=", "qml"          },
-        { "QT_INSTALL_DATA",         "qt_datapath=", NULL           },
-        { "QT_INSTALL_TRANSLATIONS", "qt_trnspath=", "translations" },
-        { "QT_INSTALL_EXAMPLES",     "qt_xmplpath=", "examples"     },
-        { "QT_INSTALL_DEMOS",        "qt_demopath=", "demos"        },
-        { "QT_INSTALL_TESTS",        "qt_tstspath=", "tests"        },
+        { "QT_INSTALL_PLUGINS",      "qt_plugpath=", "share/qt5/plugins"      },
+        { "QT_INSTALL_IMPORTS",      "qt_impspath=", "share/qt5/imports"      },
+        { "QT_INSTALL_QML",          "qt_qml2path=", "share/qt5/qml"          },
+        { "QT_INSTALL_DATA",         "qt_datapath=", "share/qt5"           },
+        { "QT_INSTALL_TRANSLATIONS", "qt_trnspath=", "share/qt5/translations" },
+        { "QT_INSTALL_EXAMPLES",     "qt_xmplpath=", "share/qt5/examples"     },
+        { "QT_INSTALL_DEMOS",        "qt_demopath=", "share/qt5/demos"        },
+        { "QT_INSTALL_TESTS",        "qt_tstspath=", "share/qt5/tests"        },
         { "QT_HOST_PREFIX",          "qt_hpfxpath=", NULL           },
         { "QT_HOST_BINS",            "qt_hbinpath=", "bin"          },
-        { "QT_HOST_DATA",            "qt_hdatpath=", NULL           },
+        { "QT_HOST_DATA",            "qt_hdatpath=", "share/qt5"           },
         { "QT_HOST_LIBS",            "qt_hlibpath=", "lib"          }
     };
 
@@ -285,7 +287,8 @@
         { "/demos/shared/",    "libdemo_shared.prl", false },
 #if defined(OS_WINDOWS)
         { "/mkspecs/default/", "qmake.conf",         false },
-        { "/",                 ".qmake.cache",       false }
+        { "/",                 ".qmake.cache",       false },
+        { "/lib/pkgconfig/",   "*.pc",               false },
 #elif defined(OS_LINUX)
         { "/lib/",             "*.la",               false },
         { "/lib/pkgconfig/",   "*.pc",               false },
