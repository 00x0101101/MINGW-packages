# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=angleproject
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}-git"
pkgver=1.2.0.r2453
pkgrel=1
pkgdesc='Angle project built from git source (mingw-w64)'
arch=('any')
url='http://code.google.com/p/angleproject/'
license=('LGPLv2+')
groups=('mingw-w64')
depends=()
makedepends=("${_mingw_suff}-gcc" 'gyp-svn' 'git')
provides=("${_mingw_suff}-angleproject")
conflicts=("${_mingw_suff}-angleproject")
options=('!strip' 'staticlibs')
source=('angleproject::git+https://chromium.googlesource.com/angle/angle'
		'angleproject-include-import-library-and-use-def-file.patch'
		'angleproject-fix-mingw-compatibility.patch'
		'angleproject-export-shader-symbols.patch'
		'angleproject-fix-trace_event.patch'
		'angleproject-fix-renderer9-stencilformat.patch'
		'0001-Untangle-OS-from-GENERATOR-a-bit-for-MSYS2.patch'
		'0002-Move-event_tracer-.cpp-.h-to-libGLESv2-instead-of-co.patch')
md5sums=('SKIP'
         '0f22b6926da662f812606c12d15643d5'
         '10b197b483a543fcf7e1ae5ec379848f'
         '079e79c52e83d4f91b7eebf4d350980c'
         '59a3d60f5b1b6676056444db8a7883fe'
         '5f30f3a3c668e4a76920a71e0dddc87d'
         'd680608c3826af8ed61292ed693a6776'
         '992b68a3e691467e8f067d2a01cc5e8a')

pkgver() {
	cd "$srcdir/angleproject"
	head -n 4 src/common/version.h | sed -e 's/BUILD_REVISION /BUILD_REVISION r/' -e 's/.* //' | tr '\n' '.' | sed 's/.$/\n/'
}

build() {
	cd "${srcdir}"/angleproject

	export PYTHON=/usr/bin/python2
	# Make sure an import library is created and the correct .def file is used during the build
	patch -p0 -i "${srcdir}"/angleproject-include-import-library-and-use-def-file.patch

	# .def pieces taken from http://qt.gitorious.org/qt/qtbase/commit/b2c44985e740d0a0ea86b7b9f4cc849258ac2340
	patch -p0 -i "${srcdir}"/angleproject-fix-mingw-compatibility.patch

	# WebKit depends on symbols which are used in the static library called translator
	# This static library is linked into the libGLESv2 shared library
	# To allow building WebKit export the required symbols in the libGLESv2 shared library
	patch -p0 -i "${srcdir}"/angleproject-export-shader-symbols.patch

	# Fix missing methods in trace_event.h
	patch -p0 -i "${srcdir}"/angleproject-fix-trace_event.patch

	# Fix stencil format method in renderer9_utils.cpp
	patch -p0 -i "${srcdir}"/angleproject-fix-renderer9-stencilformat.patch

	# Untangle OS and GENERATOR some.
	patch -p1 -i "${srcdir}"/0001-Untangle-OS-from-GENERATOR-a-bit-for-MSYS2.patch

	# Fix multiply defined 'SetTraceFunctionPointers'
	patch -p1 -i "${srcdir}"/0002-Move-event_tracer-.cpp-.h-to-libGLESv2-instead-of-co.patch

	export CFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
	export CXXFLAGS="-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions --param=ssp-buffer-size=4"
	
	sed -i -e 's_python _python2 _g' -e 's_"python"_"python2"_g' -e "s_'python'_'python2'_g" -e 's_/usr/bin/python_/usr/bin/python2_g' $(find -type f)
	sed -i -e 's|vsprintf_s|vsprintf|g' $(find . \( -name '*.h' -or -name '*.cpp' \) -and -type f)

	mkdir -p build-${MINGW_CHOST} && pushd build-${MINGW_CHOST}

	if [ "${MINGW_CHOST}" = "i686-w64-mingw32" ]
	then
		_target="win32"
	else
		_target="win64"
	fi

	gyp -D OS=win --format make -D TARGET=$_target --depth . -I ../build/common.gypi ../src/build_angle.gyp

	# Fix linking of libtranslator.a
	sed -i \
		-e s@'$(obj).target/$(TARGET)/../src/common/event_tracer.o'@@g \
		-e s@'$(obj).target/$(TARGET)/../src/common/RefCountObject.o'@@g \
		-e s@'$(obj).target/$(TARGET)/../src/common/debug.o'@@g \
		"${srcdir}"/angleproject/src/translator{,_static}.target.mk

	# LINK=g++ is to prevent using flock to serialize linking.
	LINK=g++ make V=1 CXXFLAGS="-std=c++11 -msse2 -DUNICODE -D_UNICODE"

	${MINGW_PREFIX}/bin/ar rcs libGLESv2.a \
		out/Debug/obj.target/libGLESv2/../src/common/*.o \
		out/Debug/obj.target/libGLESv2/../src/libGLESv2/renderer/*.o \
		out/Debug/obj.target/libGLESv2/../src/libGLESv2/renderer/d3d9/*.o \
		out/Debug/obj.target/libGLESv2/../src/libGLESv2/renderer/d3d11/*.o \
		out/Debug/obj.target/libGLESv2/../src/libGLESv2/*.o \
		#out/Debug/obj.target/../src/libtranslator.a \
		#out/Debug/obj.target/../src/libpreprocessor.a
	${MINGW_PREFIX}/bin/ar rcs libEGL.a \
		out/Debug/obj.target/libEGL/../src/common/*.o \
		out/Debug/obj.target/libEGL/../src/libEGL/*.o

	popd
}

package() {
	cd "${srcdir}"/angleproject
	pushd build-${MINGW_CHOST}

	mkdir -p "${pkgdir}${MINGW_PREFIX}"/{bin,lib,include}

	install out/Debug/src/libGLESv2.dll "${pkgdir}${MINGW_PREFIX}"/bin/libGLESv2.dll
	install out/Debug/src/libEGL.dll "${pkgdir}${MINGW_PREFIX}"/bin/libEGL.dll

	${MINGW_PREFIX}/bin/strip --strip-unneeded "${pkgdir}${MINGW_PREFIX}"/bin/*.dll

	install libGLESv2.a "${pkgdir}${MINGW_PREFIX}"/lib/
	install libEGL.a "${pkgdir}${MINGW_PREFIX}"/lib/

	${MINGW_PREFIX}/bin/strip --strip-debug "${pkgdir}${MINGW_PREFIX}"/lib/libEGL.a
	install libEGL.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/
	install libGLESv2.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/
	${MINGW_PREFIX}/bin/strip --strip-unneeded "${pkgdir}${MINGW_PREFIX}"/lib/*.dll.a

	cp -Rv ../include/* "${pkgdir}${MINGW_PREFIX}"/include/

	popd
}
