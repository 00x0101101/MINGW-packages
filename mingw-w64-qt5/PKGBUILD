# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=qt5
_mingw_suff=mingw-w64-${CARCH}
pkgname="${_mingw_suff}-${_realname}"
pkgver=5.2.1
pkgrel=2
arch=('any')
url='http://qt-project.org/'
install=qt5-${CARCH}.install
license=('GPL3' 'LGPL' 'FDL' 'custom')
depends=("${_mingw_suff}-gcc-libs"
			"${_mingw_suff}-icu"
			"${_mingw_suff}-openssl"
			"${_mingw_suff}-libxml2"
			"${_mingw_suff}-libxslt"
			"${_mingw_suff}-fontconfig"
			"${_mingw_suff}-qtbinpatcher"
			"${_mingw_suff}-freetype"
			"${_mingw_suff}-harfbuzz"
			"${_mingw_suff}-libpng"
			"${_mingw_suff}-zlib"
			"${_mingw_suff}-libjpeg"
			"${_mingw_suff}-pcre"
			"${_mingw_suff}-sqlite3"
			"${_mingw_suff}-libwebp"
			"${_mingw_suff}-xpm-nox"
			"${_mingw_suff}-dbus")
makedepends=("${_mingw_suff}-gcc"
			"${_mingw_suff}-postgresql"
			"${_mingw_suff}-libmariadbclient"
			"${_mingw_suff}-libfbclient"
			"${_mingw_suff}-python2"
			"${_mingw_suff}-ruby"
			"perl"
			"gperf"
			"m4"
			"flex"
			"${_mingw_suff}-make"
			"${_mingw_suff}-pkg-config")
groups=("${_mingw_suff}-qt" "${_mingw_suff}-qt5")
options=('!strip' 'staticlibs')
_pkgfqn="qt-everywhere-opensource-src-${pkgver}"
source=(#"http://download.qt-project.org/development_releases/qt/5.2/${pkgver}/single/${_pkgfqn}.tar.xz"
		http://download.qt-project.org/official_releases/qt/${pkgver%.*}/${pkgver}/single/${_pkgfqn}.tar.xz
		qt-5.0.0-oracle-driver-prompt.patch
		qt-5.0.0-use-fbclient-instead-of-gds32.patch
		qt-5.1.0-win32-g++-mkspec-optimization.patch
		qt-5.1.x-fix-configure-tests.patch
		qt-5.1.x-syncqt-fix.patch
		qt-5.1.x-win_flex-replace.patch
		qt-5.2.1-win32-g-Enable-static-builds.patch
		qt-5.2.1-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
		qt-5.2.1-qmlimportscanner-Ensure-the-correct-variant-is-run.patch)
md5sums=('0c8d2aa45f38be9c3f7c9325eb059d9d'
         '10790f1672b5f2b83e5473ad6cd48cd3'
         '86899e8f2858c48d4827282c04696b76'
         'd675dbbe15d275c84f2792c75212ace0'
         '2488e70329d9bc71f8f4619ddfb8522a'
         '2235d876133956a788c393310fa8a526'
         'cc5fdd2eebc8d2d747271de091942336'
         '6c6496de7e57e9e5b8a89b306fab37a8'
         'ec33aabe4f7f55f729c686ec523ebe99'
         'd7d745b5915cff6a7e7f4cc4e9760de0')

prepare() {
  cd ${_pkgfqn}

  patch -p1 -i ${srcdir}/qt-5.0.0-oracle-driver-prompt.patch
  patch -p1 -i ${srcdir}/qt-5.0.0-use-fbclient-instead-of-gds32.patch
  patch -p1 -i ${srcdir}/qt-5.1.0-win32-g++-mkspec-optimization.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-syncqt-fix.patch
  patch -p1 -i ${srcdir}/qt-5.1.x-win_flex-replace.patch

  # My qt-5.2.1 win32-g++ static patches are against qtbase's dev branch.
  pushd qtbase
  patch -p1 -i ${srcdir}/qt-5.2.1-win32-g-Enable-static-builds.patch
  patch -p1 -i ${srcdir}/qt-5.2.1-win32-g-Add-QMAKE_EXTENSION_IMPORTLIB-defaulting-to-.patch
  patch -p1 -i ${srcdir}/qt-5.2.1-qmlimportscanner-Ensure-the-correct-variant-is-run.patch
  popd

  local _optim=
  case ${MINGW_CHOST} in
	i686*)
		_optim="-march=i686 -mtune=core2"
	;;
	x86_64*)
		_optim="-march=nocona -mtune=core2"
	;;
  esac

  sed -i "s|%OPTIMIZE_OPT%|${_optim}|g" qtbase/mkspecs/win32-g++/qmake.conf
  sed -i "s|%STATICFLAGS%||g" qtbase/mkspecs/win32-g++/qmake.conf # -static-libstdc++ -static-libgcc
  sed -i "s|-O2|${CXXFLAGS}|" qtbase/mkspecs/common/{g++,gcc}-base.conf
  sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" qtbase/mkspecs/common/gcc-base-unix.conf
  sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS}|g" qtbase/mkspecs/common/gcc-base.conf

  # Use python2 for Python 2.x
  #patch -p1 -i "${srcdir}"/use-python2.patch
  #sed -i -e "s|#![ ]*/usr/bin/python$|#!/usr/bin/python2|" \
  #  -e "s|#![ ]*/usr/bin/env python$|#!/usr/bin/env python2|" \
  #  $(find . -name '*.py')
}

build() {
  # To keep the build folder name quite small (MAXPATH limit)
  # the source folder (long) is renamed to $CARCH (i686 or x86_64)
  [ -d ${CARCH} ] && rm -rf ${CARCH}
  mv ${_pkgfqn} ${CARCH}
  cd ${CARCH}
  touch qtbase/.gitignore
  #BUILD_WIN=$(pwd -W)
  #echo "BUILD_WIN $BUILD_WIN"

  #export QTDIR="${srcdir}"/${CARCH}
  #export LD_LIBRARY_PATH="${QTDIR}"/qtbase/lib:"${QTDIR}"/qttools/lib:"${LD_LIBRARY_PATH}"
  #export QT_PLUGIN_PATH="${QTDIR}"/qtbase/plugins

  mkdir -p ${pkgdir}${MINGW_PREFIX}
  pushd ${pkgdir}${MINGW_PREFIX} > /dev/null
  QTDIR_WIN=$(pwd -W)
  echo "QTDIR_WIN $QTDIR_WIN"
  popd > /dev/null

  #pushd ${MINGW_PREFIX} > /dev/null
  #MINGW_WIN=$(pwd -W)
  #echo "MINGW_WIN $MINGW_WIN"
  #popd > /dev/null

  _extra_inc=$(pkg-config --cflags dbus-1 libxml-2.0)
  _extra_inc=${_extra_inc//-I/:}
  _extra_inc=${_extra_inc// /}
  #_extra_inc="${MINGW_PREFIX}/include/dbus-1.0:${MINGW_PREFIX}/lib/dbus-1.0/include:${MINGW_PREFIX}/include/libxml2"
  export INCLUDE="${MINGW_PREFIX}/${MINGW_CHOST}/include:${MINGW_PREFIX}/include:${MINGW_PREFIX}/include/mysql:${MINGW_PREFIX}/include/noX:${_extra_inc}"
  export LIB="${MINGW_PREFIX}/${MINGW_CHOST}/lib:${MINGW_PREFIX}/lib"
  export CPATH="${MINGW_PREFIX}/${MINGW_CHOST}/include:${MINGW_PREFIX}/include:${MINGW_PREFIX}/include/mysql:${MINGW_PREFIX}/include/noX:${_extra_inc}"
  export LIBRARY_PATH="${MINGW_PREFIX}/${MINGW_CHOST}/lib:${MINGW_PREFIX}/lib"
  export PATH=${srcdir}/${CARCH}/qtbase/bin:${srcdir}/${CARCH}/qtbase/lib:${PATH}

  ./configure.bat \
        -prefix ${QTDIR_WIN} \
        -opengl desktop \
        -opensource \
        -confirm-license \
        -device-option QMAKE_EXTENSION_IMPORTLIB="dll.a" \
        -platform win32-g++ \
        -shared \
        -debug-and-release \
        -fontconfig \
        -no-iconv \
        -icu \
        -plugin-sql-ibase \
        -plugin-sql-mysql \
        -plugin-sql-psql \
        -plugin-sql-odbc \
        -openssl \
        -dbus \
        -system-harfbuzz \
        -nomake examples \
        -nomake tests

  ${MINGW_PREFIX}/bin/mingw32-make ${MAKEFLAGS}

  # Fix paths
  #find "${QTDIR}" -name Makefile -exec sed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  #find "${QTDIR}" -name Makefile.qmake-docs -exec sed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  #find "${QTDIR}" -name Makefile -exec sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  #find "${QTDIR}" -name Makefile.qmake-docs -exec sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  #sed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" qtwebkit/Source/Makefile.api
}

package() {

  cd ${CARCH}
  
  export PATH=${pkgdir}${MINGW_PREFIX}/bin:${srcdir}/${CARCH}/qtbase/bin:${srcdir}/${CARCH}/qtbase/lib:${PATH}
  
  ${MINGW_PREFIX}/bin/mingw32-make ${MAKEFLAGS} install #INSTALL_ROOT="${pkgdir}"
  ${MINGW_PREFIX}/bin/mingw32-make ${MAKEFLAGS} docs
  ${MINGW_PREFIX}/bin/mingw32-make ${MAKEFLAGS} install_qch_docs

  install -D -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}${MINGW_PREFIX}"/share/licenses/qt5/LGPL_EXCEPTION.txt

  # Remove dll's from lib
  rm -f "${pkgdir}${MINGW_PREFIX}/lib"/*.dll
  
  # Workaround for installing empty .pc files
  plain "---> Fix pkgconfig files..."
  local _pc_files=( $(find ${srcdir}/${CARCH} -type f -name Qt5*.pc) )
  cp -f ${_pc_files[@]} ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/
  
  # Fix wrong path in prl files
  #find "${pkgdir}${MINGW_PREFIX}/lib" -type f -name '*.prl' \
  #  -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Fix wrong qmake path in pri file
  #sed -i "s|${srcdir}/${CARCH}/qtbase|/usr|" \
  #  "${pkgdir}"/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri
}

# Despite qt-5.2.1-use-.dll.a-as-MINGW_IMPORT_LIB-extension.patch the following static libraries end up being made:
# ActiveQt is always built statically, so should we include it in shared or static? Disable it for static.
# Apart from that there's libQt5OpenGLExtensions{d}.a, libQt5PlatformSupport{d}.a and libQt5QmlDevTools.a libQt5UiTools{d}.a libqtmain{d}.a