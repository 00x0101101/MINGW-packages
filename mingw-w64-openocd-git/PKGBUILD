# Maintainer: Andrew Leech <andrew@alelec.net>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=openocd
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=r6612.1663a17
pkgrel=1
pkgdesc="OpenOCD - Open On-Chip Debugger (mingw-w64)"
arch=('any')
url="http://openocd.sourceforge.net"
options=('!ccache')
# What about ftdi?
depends=("${MINGW_PACKAGE_PREFIX}-hidapi"
         "${MINGW_PACKAGE_PREFIX}-libusb"
         "${MINGW_PACKAGE_PREFIX}-libusb-compat")
makedepends=("pkg-config"
             "git")
source=("${_realname}::git+http://git.code.sf.net/p/openocd/code"
        "0001-Win32-Define-WIN32_LEAN_AND_MEAN-in-config.h.patch"
        "0002-Makefile.am-link-libusb-1.0-after-libusb-0.1-to-fix-.patch")
md5sums=('SKIP'
         '4c56994d66389afeb8a942514a1f7628'
         '1a7bc00cd8d7ecea09130a52af66d916')

pkgver() {
  cd "${srcdir}"/${_realname}
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}"/${_realname}
  git am "${srcdir}"/0001-Win32-Define-WIN32_LEAN_AND_MEAN-in-config.h.patch
  git am "${srcdir}"/0002-Makefile.am-link-libusb-1.0-after-libusb-0.1-to-fix-.patch
  ./bootstrap
}

build() {
  [ -d "${srcdir}"/build-${CARCH} ] && rm -rf "${srcdir}"/build-${CARCH}
  mkdir -p "${srcdir}"/build-${CARCH}
  cd "${srcdir}"/build-${CARCH}

  local -a myconf
  myconf+=(--prefix=${MINGW_PREFIX}
           --{build,host}=${MINGW_CHOST}
           --disable-dependency-tracking
           --disable-werror
           --enable-dummy
           --enable-jtag_vpi
           --enable-remote-bitbang
           --enable-amtjtagaccel
           --enable-gw16012
           --enable-parport
           --enable-parport-giveio)

  ../${_realname}/configure ${myconf[@]}
  make
}

package() {
  cd "${srcdir}"/build-${CARCH}
  make DESTDIR="${pkgdir}" install

  # bsdtar doesn't like (some?) utf-8 in filenames
  # rename the known problematic utf-8 substrings.
  declare -A _renames
  _renames[be1t]=BE1T
  _renames[к]=k
  _renames[xб1я]=XB1R
  for _renamekey in ${!_renames[@]}; do
    _filenames=$(find . -name "*${_renamekey}*")
    _renameto=${_renames[${_renamekey}]}
    for _filename in ${_filenames}; do
      mv ${_filename} ${_filename//${_renamekey}/${_renameto}}
    done
  done
}
