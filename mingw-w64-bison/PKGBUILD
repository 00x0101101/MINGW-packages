# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

_realname=bison
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=3.0.2
pkgrel=1
pkgdesc="The GNU general-purpose parser generator"
arch=('any')
license=('GPL3')
url="http://www.gnu.org/software/bison/bison.html"
depends=("${MINGW_PACKAGE_PREFIX}-m4")
options=('debug' '!strip')
source=(http://ftp.gnu.org/gnu/bison/${_realname}-${pkgver}.tar.xz
        001-use-gnu_printf.patch
        002-add-relocation-support.patch
        003-create_pipe-uses-O_TEXT-not-O_BINARY-mode.patch)
md5sums=('146be9ff9fbd27497f0bf2286a5a2082'
         '817bbd1f0de3d7f2ab1287b67b267895'
         '7bb3dac2a01d7f78bb6038f953a42b39'
         'cc720e2a9fc8f7849b0cfb165caf80fa')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver}

  patch -p1 -i "${srcdir}"/001-use-gnu_printf.patch
  patch -p1 -i "${srcdir}"/002-add-relocation-support.patch
  patch -p1 -i "${srcdir}"/003-create_pipe-uses-O_TEXT-not-O_BINARY-mode.patch
}

build() {
  cd ${srcdir}/${_realname}-${pkgver}
  M4=$(cygpath -wm ${MINGW_PREFIX})/bin/m4.exe \
    ./configure \
      --prefix=${MINGW_PREFIX} \
      --build=${MINGW_CHOST} \
      --host=${MINGW_CHOST} \
      --target=${MINGW_CHOST}
  make
}

check() {
  cd ${srcdir}/${_realname}-${pkgver}
  rm -f tests/testsuite
  make tests/testsuite
  make check
}

package() {
  cd ${srcdir}/${_realname}-${pkgver}
  make DESTDIR=${pkgdir} install
}

# BISON_PKGDATADIR=$PWD/data PATH=/mingw64/bin:"$PATH" ./src/bison.exe -o y.tab.c -d -v -Werror -Wall -Wno-yacc --report=all  -o examples/calc++/calc++-parser.cc examples/calc++/calc++-parser.yy
# .. falls down in m4 somewhere, write error .. probably read end got closed?
# ./doc/bison.texi: fatal error: invalid @ in skeleton: @
# C:/msys64/mingw64/bin/m4.exe: write error: Invalid argument
# At the time it's in scan-skel.c somewhere, but that's generated by flex, so the line numbers don't work
# need to replace all #line with //#line in scan-skel.c
# PATH=/mingw64/bin:"$PATH" x86_64-w64-mingw32-gcc -std=gnu99 -I. -Ilib -I. -I./lib -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -I/mingw64/include   -march=x86-64 -mtune=generic -O2 -pipe -ggdb -Og -ggdb -Og -MT src/bison-scan-skel-c.o -MD -MP -MF src/.deps/bison-scan-skel-c.Tpo -c -o src/bison-scan-skel-c.o src/scan-skel-c.c
# PATH=/mingw64/bin:"$PATH" make src/bison.exe
# PATH=/mingw64/bin:"$PATH" x86_64-w64-mingw32-gcc -std=gnu99    -I. -Ilib -I. -I./lib -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -I/mingw64/include  -march=x86-64 -mtune=generic -O2 -pipe -ggdb -Og -ggdb -Og -MT lib/spawn-pipe.o -MD -MP -MF $depbase.Tpo -c -o lib/spawn-pipe.o lib/spawn-pipe.c
# PATH=/mingw64/bin:"$PATH" x86_64-w64-mingw32-gcc -std=gnu99    -I. -Ilib -I. -I./lib -D_FORTIFY_SOURCE=2 -D__USE_MINGW_ANSI_STDIO=1 -I/mingw64/include   -march=x86-64 -mtune=generic -O2 -pipe -ggdb -Og -ggdb -Og -MT src/bison-main.o -MD -MP -MF src/.deps/bison-main.Tpo -c -o src/bison-main.o src/main.c
# PATH=/mingw64/bin:"$PATH" make
