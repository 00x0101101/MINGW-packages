--- gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/tools/g-ir-scanner.in.orig	2013-05-09 19:52:37 +0400
+++ gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/tools/g-ir-scanner.in	2013-05-09 20:06:38 +0400
@@ -23,7 +23,48 @@
 import sys
 import __builtin__
 
-__builtin__.__dict__['DATADIR'] = "@datarootdir@"
+prefix = "@prefix@"
+datarootdir = "@datarootdir@"
+libdir = "@libdir@"
+
+def pathtolist (path):
+  dirs = []
+
+  while True:
+    path, dir = os.path.split (path)
+
+    if dir != "":
+      dirs.append (dir)
+    else:
+      if path != "":
+        dirs.append (path)
+      break
+
+  dirs.reverse ()
+  return dirs
+
+def getroot ():
+  if os.name != 'nt':
+    return prefix
+
+  full_script_file_name = os.path.abspath (sys.argv[0])
+  dirs = pathtolist (full_script_file_name)[:-1]
+
+  found = False
+  for i, dir in reversed (list (enumerate (dirs))):
+    if dir in ['bin', 'lib', 'share', 'libexec', 'var', 'sbin', 'lib64', 'lib32', 'etc']:
+      return os.path.join (*dirs[:i])
+ 
+  return os.path.join (*dirs)
+
+runtime_prefix = getroot ()
+
+if datarootdir.startswith (prefix):
+  datarootdir = runtime_prefix + datarootdir[len (prefix):]
+if libdir.startswith (prefix):
+  libdir = runtime_prefix + libdir[len (prefix):]
+
+__builtin__.__dict__['DATADIR'] = datarootdir
 
 if 'GI_SCANNER_DEBUG' in os.environ:
     def on_exception(exctype, value, tb):
@@ -38,7 +79,7 @@
 else:
     # This is a private directory, we don't want to pollute the global
     # namespace.
-    path = os.path.join('@libdir@', 'gobject-introspection')
+    path = os.path.join(libdir, 'gobject-introspection')
 sys.path.insert(0, path)
 
 from giscanner.scannermain import scanner_main
--- gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/tools/g-ir-annotation-tool.in.orig	2013-05-09 19:52:37 +0400
+++ gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/tools/g-ir-annotation-tool.in	2013-05-09 20:07:06 +0400
@@ -23,7 +23,48 @@
 import sys
 import __builtin__
 
-__builtin__.__dict__['DATADIR'] = "@datarootdir@"
+prefix = "@prefix@"
+datarootdir = "@datarootdir@"
+libdir = "@libdir@"
+
+def pathtolist (path):
+  dirs = []
+
+  while True:
+    path, dir = os.path.split (path)
+
+    if dir != "":
+      dirs.append (dir)
+    else:
+      if path != "":
+        dirs.append (path)
+      break
+
+  dirs.reverse ()
+  return dirs
+
+def getroot ():
+  if os.name != 'nt':
+    return prefix
+
+  full_script_file_name = os.path.abspath (sys.argv[0])
+  dirs = pathtolist (full_script_file_name)[:-1]
+
+  found = False
+  for i, dir in reversed (list (enumerate (dirs))):
+    if dir in ['bin', 'lib', 'share', 'libexec', 'var', 'sbin', 'lib64', 'lib32', 'etc']:
+      return os.path.join (*dirs[:i])
+ 
+  return os.path.join (*dirs)
+
+runtime_prefix = getroot ()
+
+if datarootdir.startswith (prefix):
+  datarootdir = runtime_prefix + datarootdir[len (prefix):]
+if libdir.startswith (prefix):
+  libdir = runtime_prefix + libdir[len (prefix):]
+
+__builtin__.__dict__['DATADIR'] = datarootdir
 
 if 'GI_SCANNER_DEBUG' in os.environ:
     def on_exception(exctype, value, tb):
@@ -38,7 +79,7 @@
 else:
     # This is a private directory, we don't want to pollute the global
     # namespace.
-    path = os.path.join('@libdir@', 'gobject-introspection')
+    path = os.path.join(libdir, 'gobject-introspection')
 sys.path.insert(0, path)
 
 from giscanner.annotationmain import annotation_main
--- gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/tools/g-ir-doc-tool.in.orig	2013-05-09 19:52:37 +0400
+++ gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/tools/g-ir-doc-tool.in	2013-05-09 20:06:51 +0400
@@ -23,7 +23,48 @@
 import sys
 import __builtin__
 
-__builtin__.__dict__['DATADIR'] = "@datarootdir@"
+prefix = "@prefix@"
+datarootdir = "@datarootdir@"
+libdir = "@libdir@"
+
+def pathtolist (path):
+  dirs = []
+
+  while True:
+    path, dir = os.path.split (path)
+
+    if dir != "":
+      dirs.append (dir)
+    else:
+      if path != "":
+        dirs.append (path)
+      break
+
+  dirs.reverse ()
+  return dirs
+
+def getroot ():
+  if os.name != 'nt':
+    return prefix
+
+  full_script_file_name = os.path.abspath (sys.argv[0])
+  dirs = pathtolist (full_script_file_name)[:-1]
+
+  found = False
+  for i, dir in reversed (list (enumerate (dirs))):
+    if dir in ['bin', 'lib', 'share', 'libexec', 'var', 'sbin', 'lib64', 'lib32', 'etc']:
+      return os.path.join (*dirs[:i])
+ 
+  return os.path.join (*dirs)
+
+runtime_prefix = getroot ()
+
+if datarootdir.startswith (prefix):
+  datarootdir = runtime_prefix + datarootdir[len (prefix):]
+if libdir.startswith (prefix):
+  libdir = runtime_prefix + libdir[len (prefix):]
+
+__builtin__.__dict__['DATADIR'] = datarootdir
 
 if 'GI_SCANNER_DEBUG' in os.environ:
     def on_exception(exctype, value, tb):
@@ -38,7 +79,7 @@
 else:
     # This is a private directory, we don't want to pollute the global
     # namespace.
-    path = os.path.join('@libdir@', 'gobject-introspection')
+    path = os.path.join(libdir, 'gobject-introspection')
 sys.path.insert(0, path)
 
 from giscanner.docmain import doc_main
--- gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/Makefile-tools.am.orig	2013-05-09 21:35:15 +0400
+++ gobject-introspection-4613390bcfd6a814685a5862925b11338b797e48/Makefile-tools.am	2013-05-10 09:43:51 +0400
@@ -10,7 +10,7 @@
 	tools/g-ir-annotation-tool.in	\
 	tools/g-ir-doc-tool.in
 
-TOOL_SUBSTITUTIONS = sed -e s,@libdir\@,$(libdir), -e s,@datarootdir\@,$(datarootdir), -e s,@PYTHON\@,$(PYTHON),
+TOOL_SUBSTITUTIONS = sed -e s,@libdir\@,$(libdir), -e s,@datarootdir\@,$(datarootdir), -e s,@PYTHON\@,$(PYTHON), -e s,@prefix\@,$(prefix),
 
 g-ir-scanner: tools/g-ir-scanner.in _giscanner.la Makefile
 	$(AM_V_GEN) $(TOOL_SUBSTITUTIONS) $< > $@.tmp && mv $@.tmp $@
