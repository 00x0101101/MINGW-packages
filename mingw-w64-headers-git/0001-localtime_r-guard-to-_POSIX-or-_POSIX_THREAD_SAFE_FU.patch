From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 20 Oct 2014 12:58:18 +0100
Subject: [PATCH] localtime_r guard to _POSIX or _POSIX_THREAD_SAFE_FUNCTIONS

From http://www.unix.org/whitepapers/reentrant.html

"This is accomplished in the standard by associating the reentrancy
specifications with a separate option, {_POSIX_THREAD_SAFE_FUNCTIONS},
which is declared to be mandatory for implementations supporting the
threads option"

In pthread_unistd.h we define:

_POSIX_THREAD_SAFE_FUNCTIONS 200112L
---
 mingw-w64-headers/crt/time.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mingw-w64-headers/crt/time.h b/mingw-w64-headers/crt/time.h
index 5ce5849..b8b5f21 100644
--- a/mingw-w64-headers/crt/time.h
+++ b/mingw-w64-headers/crt/time.h
@@ -169,7 +169,7 @@ char *__cdecl ctime(const time_t *_Time) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
 struct tm *__cdecl gmtime(const time_t *_Time) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
 struct tm *__cdecl localtime(const time_t *_Time) __MINGW_ATTRIB_DEPRECATED_SEC_WARN;
 
-#ifdef _POSIX
+#if defined(_POSIX) || defined(_POSIX_THREAD_SAFE_FUNCTIONS)
 #ifdef __GNUC__ /* FIXME: Other compilers that these macros work with? */
 #ifndef localtime_r
 #define localtime_r(_Time, _Tm)	({ struct tm *___tmp_tm =		\
-- 
2.1.2

